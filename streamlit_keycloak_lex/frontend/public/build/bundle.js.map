{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/event-target-shim/dist/event-target-shim.mjs","../../node_modules/flatbuffers/js/flatbuffers.mjs","../../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../../node_modules/apache-arrow/util/utf8.mjs","../../node_modules/apache-arrow/io/interfaces.mjs","../../node_modules/apache-arrow/util/compat.mjs","../../node_modules/apache-arrow/util/buffer.mjs","../../node_modules/apache-arrow/io/adapters.mjs","../../node_modules/apache-arrow/vector.mjs","../../node_modules/apache-arrow/fb/Schema.mjs","../../node_modules/apache-arrow/fb/Message.mjs","../../node_modules/apache-arrow/enum.mjs","../../node_modules/apache-arrow/util/bit.mjs","../../node_modules/apache-arrow/visitor.mjs","../../node_modules/apache-arrow/visitor/typecomparator.mjs","../../node_modules/apache-arrow/type.mjs","../../node_modules/apache-arrow/data.mjs","../../node_modules/apache-arrow/util/pretty.mjs","../../node_modules/apache-arrow/builder/valid.mjs","../../node_modules/apache-arrow/builder/buffer.mjs","../../node_modules/apache-arrow/builder.mjs","../../node_modules/apache-arrow/builder/bool.mjs","../../node_modules/apache-arrow/builder/null.mjs","../../node_modules/apache-arrow/builder/date.mjs","../../node_modules/apache-arrow/builder/decimal.mjs","../../node_modules/apache-arrow/builder/dictionary.mjs","../../node_modules/apache-arrow/builder/fixedsizebinary.mjs","../../node_modules/apache-arrow/util/math.mjs","../../node_modules/apache-arrow/builder/float.mjs","../../node_modules/apache-arrow/util/bn.mjs","../../node_modules/apache-arrow/builder/int.mjs","../../node_modules/apache-arrow/builder/time.mjs","../../node_modules/apache-arrow/builder/timestamp.mjs","../../node_modules/apache-arrow/builder/interval.mjs","../../node_modules/apache-arrow/builder/binary.mjs","../../node_modules/apache-arrow/builder/utf8.mjs","../../node_modules/apache-arrow/builder/run.mjs","../../node_modules/apache-arrow/vector/row.mjs","../../node_modules/apache-arrow/util/vector.mjs","../../node_modules/apache-arrow/vector/chunked.mjs","../../node_modules/apache-arrow/column.mjs","../../node_modules/apache-arrow/util/args.mjs","../../node_modules/apache-arrow/schema.mjs","../../node_modules/apache-arrow/builder/list.mjs","../../node_modules/apache-arrow/builder/fixedsizelist.mjs","../../node_modules/apache-arrow/builder/map.mjs","../../node_modules/apache-arrow/builder/struct.mjs","../../node_modules/apache-arrow/builder/union.mjs","../../node_modules/apache-arrow/visitor/set.mjs","../../node_modules/apache-arrow/visitor/builderctor.mjs","../../node_modules/apache-arrow/fb/File.mjs","../../node_modules/apache-arrow/builder/index.mjs","../../node_modules/apache-arrow/ipc/metadata/file.mjs","../../node_modules/apache-arrow/io/stream.mjs","../../node_modules/apache-arrow/io/file.mjs","../../node_modules/apache-arrow/util/int.mjs","../../node_modules/apache-arrow/visitor/vectorloader.mjs","../../node_modules/apache-arrow/visitor/typeassembler.mjs","../../node_modules/apache-arrow/ipc/metadata/json.mjs","../../node_modules/apache-arrow/ipc/metadata/message.mjs","../../node_modules/apache-arrow/ipc/message.mjs","../../node_modules/apache-arrow/visitor/vectorassembler.mjs","../../node_modules/apache-arrow/ipc/writer.mjs","../../node_modules/apache-arrow/util/recordbatch.mjs","../../node_modules/apache-arrow/vector/base.mjs","../../node_modules/apache-arrow/vector/binary.mjs","../../node_modules/apache-arrow/vector/bool.mjs","../../node_modules/apache-arrow/vector/date.mjs","../../node_modules/apache-arrow/vector/decimal.mjs","../../node_modules/apache-arrow/vector/dictionary.mjs","../../node_modules/apache-arrow/vector/fixedsizebinary.mjs","../../node_modules/apache-arrow/vector/fixedsizelist.mjs","../../node_modules/apache-arrow/vector/float.mjs","../../node_modules/apache-arrow/vector/interval.mjs","../../node_modules/apache-arrow/vector/int.mjs","../../node_modules/apache-arrow/vector/list.mjs","../../node_modules/apache-arrow/vector/map.mjs","../../node_modules/apache-arrow/vector/null.mjs","../../node_modules/apache-arrow/vector/struct.mjs","../../node_modules/apache-arrow/vector/timestamp.mjs","../../node_modules/apache-arrow/vector/time.mjs","../../node_modules/apache-arrow/vector/union.mjs","../../node_modules/apache-arrow/vector/utf8.mjs","../../node_modules/apache-arrow/util/fn.mjs","../../node_modules/apache-arrow/visitor/get.mjs","../../node_modules/apache-arrow/visitor/indexof.mjs","../../node_modules/apache-arrow/visitor/iterator.mjs","../../node_modules/apache-arrow/visitor/toarray.mjs","../../node_modules/apache-arrow/visitor/bytewidth.mjs","../../node_modules/apache-arrow/visitor/vectorctor.mjs","../../node_modules/apache-arrow/vector/index.mjs","../../node_modules/apache-arrow/table.mjs","../../node_modules/apache-arrow/recordbatch.mjs","../../node_modules/apache-arrow/ipc/reader.mjs","../../node_modules/apache-arrow/io/whatwg/builder.mjs","../../node_modules/apache-arrow/compute/predicate.mjs","../../node_modules/apache-arrow/compute/dataframe.mjs","../../node_modules/apache-arrow/Arrow.dom.mjs","../../node_modules/apache-arrow/io/whatwg/iterable.mjs","../../node_modules/apache-arrow/io/whatwg/reader.mjs","../../node_modules/apache-arrow/io/whatwg/writer.mjs","../../src/streamlit/ArrowTable.ts","../../src/streamlit/streamlit.ts","../../src/streamlit/WithStreamlitConnection.svelte","../../src/LoginDialog.svelte","../../src/localization.ts","../../src/Keycloak.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap();\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap();\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event);\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    );\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            );\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true;\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault();\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    });\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true });\n\n    // Define accessors\n    const keys = Object.keys(event);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key));\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget;\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation();\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        data.immediateStopped = true;\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation();\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this));\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true;\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this));\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype);\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event);\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value;\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event;\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto);\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event);\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    });\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n            const isFunc = typeof descriptor.value === \"function\";\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            );\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto);\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);\n        wrappers.set(proto, wrapper);\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nfunction wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event));\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nfunction isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nfunction setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase;\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nfunction setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget;\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nfunction setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener;\n}\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap();\n\n// Listener types\nconst CAPTURE = 1;\nconst BUBBLE = 2;\nconst ATTRIBUTE = 3;\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget);\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this);\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next;\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null; // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this);\n\n            // Traverse to the tail while removing old value.\n            let prev = null;\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next;\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next);\n                    } else {\n                        listeners.delete(eventName);\n                    }\n                } else {\n                    prev = node;\n                }\n\n                node = node.next;\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                };\n                if (prev === null) {\n                    listeners.set(eventName, newNode);\n                } else {\n                    prev.next = newNode;\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    );\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this);\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    });\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map());\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length);\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i];\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this);\n        const optionsIsObj = isObject(options);\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        };\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName);\n        if (node === undefined) {\n            listeners.set(eventName, newNode);\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null;\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node;\n            node = node.next;\n        }\n\n        // Add it.\n        prev.next = newNode;\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this);\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n\n        let prev = null;\n        let node = listeners.get(eventName);\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n                return\n            }\n\n            prev = node;\n            node = node.next;\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this);\n        const eventName = event.type;\n        let node = listeners.get(eventName);\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event);\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null;\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n            } else {\n                prev = node;\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            );\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent);\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err);\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent);\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next;\n        }\n        setPassiveListener(wrappedEvent, null);\n        setEventPhase(wrappedEvent, 0);\n        setCurrentTarget(wrappedEvent, null);\n\n        return !wrappedEvent.defaultPrevented\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);\n}\n\nexport default EventTarget;\nexport { defineEventAttribute, EventTarget };\n//# sourceMappingURL=event-target-shim.mjs.map\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from './buffer';\nimport { TextDecoder as TextDecoderPolyfill, TextEncoder as TextEncoderPolyfill, } from 'text-encoding-utf-8';\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer) => decoder.decode(buffer);\n    }\n    return (input) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n\n//# sourceMappingURL=utf8.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './adapters';\n/** @ignore */\nexport const ITERATOR_DONE = Object.freeze({ done: true, value: void (0) });\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(_json) {\n        this._json = _json;\n    }\n    get schema() { return this._json['schema']; }\n    get batches() { return (this._json['batches'] || []); }\n    get dictionaries() { return (this._json['dictionaries'] || []); }\n}\n/** @ignore */\nexport class ReadableInterop {\n    tee() {\n        return this._getDOMStream().tee();\n    }\n    pipe(writable, options) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    pipeTo(writable, options) { return this._getDOMStream().pipeTo(writable, options); }\n    pipeThrough(duplex, options) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n    _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n    _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n/** @ignore */\nexport class AsyncQueue extends ReadableInterop {\n    constructor() {\n        super();\n        this._values = [];\n        this.resolvers = [];\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    get closed() { return this._closedPromise; }\n    async cancel(reason) { await this.return(reason); }\n    write(value) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift().resolve({ done: false, value }));\n        }\n    }\n    abort(value) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift().reject({ done: true, value }));\n        }\n    }\n    close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift().resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    toDOMStream(options) {\n        return streamAdapters.toDOMStream((this._closedPromiseResolve || this._error)\n            ? this\n            : this._values, options);\n    }\n    toNodeStream(options) {\n        return streamAdapters.toNodeStream((this._closedPromiseResolve || this._error)\n            ? this\n            : this._values, options);\n    }\n    async throw(_) { await this.abort(_); return ITERATOR_DONE; }\n    async return(_) { await this.close(); return ITERATOR_DONE; }\n    async read(size) { return (await this.next(size, 'read')).value; }\n    async peek(size) { return (await this.next(size, 'peek')).value; }\n    next(..._args) {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift() });\n        }\n        else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        }\n        else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n    _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n\n//# sourceMappingURL=interfaces.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { ReadableInterop } from '../io/interfaces';\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [BigIntUnavailable, false];\n})();\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [BigInt64ArrayUnavailable, false];\n})();\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [BigUint64ArrayUnavailable, false];\n})();\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n/** @ignore */ const isNumber = (x) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x) => x != null && Object(x) === x;\n/** @ignore */\nexport const isPromise = (x) => {\n    return isObject(x) && isFunction(x.then);\n};\n/** @ignore */\nexport const isObservable = (x) => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n/** @ignore */\nexport const isIterable = (x) => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n/** @ignore */\nexport const isAsyncIterable = (x) => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n/** @ignore */\nexport const isArrowJSON = (x) => {\n    return isObject(x) && isObject(x['schema']);\n};\n/** @ignore */\nexport const isArrayLike = (x) => {\n    return isObject(x) && isNumber(x['length']);\n};\n/** @ignore */\nexport const isIteratorResult = (x) => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n/** @ignore */\nexport const isUnderlyingSink = (x) => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n/** @ignore */\nexport const isFileHandle = (x) => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n/** @ignore */\nexport const isFSReadStream = (x) => {\n    return isReadableNodeStream(x) && isNumber(x['bytesRead']);\n};\n/** @ignore */\nexport const isFetchResponse = (x) => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n/** @ignore */\nexport const isWritableDOMStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n/** @ignore */\nexport const isReadableDOMStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n/** @ignore */\nexport const isWritableNodeStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n/** @ignore */\nexport const isReadableNodeStream = (x) => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n//# sourceMappingURL=compat.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nvar ByteBuffer = flatbuffers.ByteBuffer;\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset, yOffset, xLen, yLen;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n/** @ignore */\nexport function memcpy(target, source, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n/** @ignore */\nexport function joinUint8Arrays(chunks, size) {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source, sliced, buffer;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            }\n            else if (sliced.length === source.length) {\n                index++;\n            }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\nexport function toArrayBufferView(ArrayBufferViewCtor, input) {\n    let value = isIteratorResult(input) ? input.value : input;\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) {\n        return new ArrayBufferViewCtor(0);\n    }\n    if (typeof value === 'string') {\n        value = encodeUtf8(value);\n    }\n    if (value instanceof ArrayBuffer) {\n        return new ArrayBufferViewCtor(value);\n    }\n    if (value instanceof SharedArrayBuf) {\n        return new ArrayBufferViewCtor(value);\n    }\n    if (value instanceof ByteBuffer) {\n        return toArrayBufferView(ArrayBufferViewCtor, value.bytes());\n    }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n/** @ignore */ export const toInt8Array = (input) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input) => toArrayBufferView(Uint8ClampedArray, input);\n/** @ignore */\nconst pump = (iterator) => { iterator.next(); return iterator; };\n/** @ignore */\nexport function* toArrayBufferViewIterator(ArrayCtor, source) {\n    const wrap = function* (x) { yield x; };\n    const buffers = (typeof source === 'string') ? wrap(source)\n        : (ArrayBuffer.isView(source)) ? wrap(source)\n            : (source instanceof ArrayBuffer) ? wrap(source)\n                : (source instanceof SharedArrayBuf) ? wrap(source)\n                    : !isIterable(source) ? wrap(source) : source;\n    yield* pump((function* (it) {\n        let r = null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n/** @ignore */ export const toInt8ArrayIterator = (input) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator(ArrayCtor, source) {\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n    const wrap = async function* (x) { yield await x; };\n    const emit = async function* (source) {\n        yield* pump((function* (it) {\n            let r = null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n    const buffers = (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n        : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n            : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n                    : isIterable(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n                        : !isAsyncIterable(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                            : source; // otherwise if AsyncIterable, use it\n    yield* pump((async function* (it) {\n        let r = null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n/** @ignore */\nexport function rebaseValueOffsets(offset, length, valueOffsets) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n/** @ignore */\nexport function compareArrayLike(a, b) {\n    let i = 0, n = a.length;\n    if (n !== b.length) {\n        return false;\n    }\n    if (n > 0) {\n        do {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        } while (++i < n);\n    }\n    return true;\n}\n\n//# sourceMappingURL=buffer.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array, joinUint8Arrays, toUint8ArrayIterator, toUint8ArrayAsyncIterator } from '../util/buffer';\n/** @ignore */\nexport default {\n    fromIterable(source) {\n        return pump(fromIterable(source));\n    },\n    fromAsyncIterable(source) {\n        return pump(fromAsyncIterable(source));\n    },\n    fromDOMStream(source) {\n        return pump(fromDOMStream(source));\n    },\n    fromNodeStream(stream) {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream(source, options) {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream(source, options) {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n/** @ignore */\nconst pump = (iterator) => { iterator.next(); return iterator; };\n/** @ignore */\nfunction* fromIterable(source) {\n    let done, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield null);\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    }\n    finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n/** @ignore */\nasync function* fromAsyncIterable(source) {\n    let done, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield null);\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    }\n    finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream(source) {\n    let done = false, threw = false;\n    let buffers = [], buffer;\n    let cmd, size, bufferLength = 0;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield null);\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    }\n    finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n/** @ignore */\nclass AdaptiveByteReader {\n    constructor(source) {\n        this.source = source;\n        this.byobReader = null;\n        this.defaultReader = null;\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        }\n        catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n    get closed() {\n        return this.reader ? this.reader['closed'].catch(() => { }) : Promise.resolve();\n    }\n    releaseLock() {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n    async cancel(reason) {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => { }));\n        source && (source['locked'] && this.releaseLock());\n    }\n    async read(size) {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result));\n        return result;\n    }\n    getDefaultReader() {\n        if (this.byobReader) {\n            this.releaseLock();\n        }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => { });\n        }\n        return (this.reader = this.defaultReader);\n    }\n    getBYOBReader() {\n        if (this.defaultReader) {\n            this.releaseLock();\n        }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => { });\n        }\n        return (this.reader = this.byobReader);\n    }\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    async readFromBYOBReader(size) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n/** @ignore */\nasync function readInto(reader, buffer, offset, size) {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n/** @ignore */\nconst onEvent = (stream, event) => {\n    let handler = (_) => resolve([event, _]);\n    let resolve;\n    return [event, handler, new Promise((r) => (resolve = r) && stream['once'](event, handler))];\n};\n/** @ignore */\nasync function* fromNodeStream(stream) {\n    let events = [];\n    let event = 'error';\n    let done = false, err = null;\n    let cmd, size, bufferLength = 0;\n    let buffers = [], buffer;\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield null);\n    // ignore stdin if it's a TTY\n    if (stream['isTTY']) {\n        return yield new Uint8Array(0);\n    }\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n        do {\n            events[2] = onEvent(stream, 'readable');\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') {\n                break;\n            }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                }\n                else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    }\n    finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n    function cleanup(events, err) {\n        buffer = buffers = null;\n        return new Promise(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = stream['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            }\n            catch (e) {\n                err = e || err;\n            }\n            finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=adapters.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nexport class AbstractVector {\n}\nexport { AbstractVector as Vector };\n\n//# sourceMappingURL=vector.mjs.map\n","/* tslint:disable:class-name */\n/**\n * @enum {number}\n */\nexport var org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let MetadataVersion;\n                (function (MetadataVersion) {\n                    /**\n                     * 0.1.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V1\"] = 0] = \"V1\";\n                    /**\n                     * 0.2.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V2\"] = 1] = \"V2\";\n                    /**\n                     * 0.3.0 -> 0.7.1\n                     */\n                    MetadataVersion[MetadataVersion[\"V3\"] = 2] = \"V3\";\n                    /**\n                     * >= 0.8.0\n                     */\n                    MetadataVersion[MetadataVersion[\"V4\"] = 3] = \"V4\";\n                })(MetadataVersion = flatbuf.MetadataVersion || (flatbuf.MetadataVersion = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let UnionMode;\n                (function (UnionMode) {\n                    UnionMode[UnionMode[\"Sparse\"] = 0] = \"Sparse\";\n                    UnionMode[UnionMode[\"Dense\"] = 1] = \"Dense\";\n                })(UnionMode = flatbuf.UnionMode || (flatbuf.UnionMode = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Precision;\n                (function (Precision) {\n                    Precision[Precision[\"HALF\"] = 0] = \"HALF\";\n                    Precision[Precision[\"SINGLE\"] = 1] = \"SINGLE\";\n                    Precision[Precision[\"DOUBLE\"] = 2] = \"DOUBLE\";\n                })(Precision = flatbuf.Precision || (flatbuf.Precision = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let DateUnit;\n                (function (DateUnit) {\n                    DateUnit[DateUnit[\"DAY\"] = 0] = \"DAY\";\n                    DateUnit[DateUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n                })(DateUnit = flatbuf.DateUnit || (flatbuf.DateUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let TimeUnit;\n                (function (TimeUnit) {\n                    TimeUnit[TimeUnit[\"SECOND\"] = 0] = \"SECOND\";\n                    TimeUnit[TimeUnit[\"MILLISECOND\"] = 1] = \"MILLISECOND\";\n                    TimeUnit[TimeUnit[\"MICROSECOND\"] = 2] = \"MICROSECOND\";\n                    TimeUnit[TimeUnit[\"NANOSECOND\"] = 3] = \"NANOSECOND\";\n                })(TimeUnit = flatbuf.TimeUnit || (flatbuf.TimeUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let IntervalUnit;\n                (function (IntervalUnit) {\n                    IntervalUnit[IntervalUnit[\"YEAR_MONTH\"] = 0] = \"YEAR_MONTH\";\n                    IntervalUnit[IntervalUnit[\"DAY_TIME\"] = 1] = \"DAY_TIME\";\n                })(IntervalUnit = flatbuf.IntervalUnit || (flatbuf.IntervalUnit = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Type;\n                (function (Type) {\n                    Type[Type[\"NONE\"] = 0] = \"NONE\";\n                    Type[Type[\"Null\"] = 1] = \"Null\";\n                    Type[Type[\"Int\"] = 2] = \"Int\";\n                    Type[Type[\"FloatingPoint\"] = 3] = \"FloatingPoint\";\n                    Type[Type[\"Binary\"] = 4] = \"Binary\";\n                    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n                    Type[Type[\"Bool\"] = 6] = \"Bool\";\n                    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n                    Type[Type[\"Date\"] = 8] = \"Date\";\n                    Type[Type[\"Time\"] = 9] = \"Time\";\n                    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n                    Type[Type[\"Interval\"] = 11] = \"Interval\";\n                    Type[Type[\"List\"] = 12] = \"List\";\n                    Type[Type[\"Struct_\"] = 13] = \"Struct_\";\n                    Type[Type[\"Union\"] = 14] = \"Union\";\n                    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n                    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n                    Type[Type[\"Map\"] = 17] = \"Map\";\n                    Type[Type[\"Duration\"] = 18] = \"Duration\";\n                    Type[Type[\"LargeBinary\"] = 19] = \"LargeBinary\";\n                    Type[Type[\"LargeUtf8\"] = 20] = \"LargeUtf8\";\n                    Type[Type[\"LargeList\"] = 21] = \"LargeList\";\n                })(Type = flatbuf.Type || (flatbuf.Type = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let Endianness;\n                (function (Endianness) {\n                    Endianness[Endianness[\"Little\"] = 0] = \"Little\";\n                    Endianness[Endianness[\"Big\"] = 1] = \"Big\";\n                })(Endianness = flatbuf.Endianness || (flatbuf.Endianness = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Null {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Null\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Null= obj\n                     * @returns Null\n                     */\n                    static getRootAsNull(bb, obj) {\n                        return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startNull(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endNull(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createNull(builder) {\n                        Null.startNull(builder);\n                        return Null.endNull(builder);\n                    }\n                }\n                flatbuf.Null = Null;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Struct_ {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Struct_\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Struct_= obj\n                     * @returns Struct_\n                     */\n                    static getRootAsStruct_(bb, obj) {\n                        return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startStruct_(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endStruct_(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createStruct_(builder) {\n                        Struct_.startStruct_(builder);\n                        return Struct_.endStruct_(builder);\n                    }\n                }\n                flatbuf.Struct_ = Struct_;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class List {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns List\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param List= obj\n                     * @returns List\n                     */\n                    static getRootAsList(bb, obj) {\n                        return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startList(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createList(builder) {\n                        List.startList(builder);\n                        return List.endList(builder);\n                    }\n                }\n                flatbuf.List = List;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeList {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeList\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeList= obj\n                     * @returns LargeList\n                     */\n                    static getRootAsLargeList(bb, obj) {\n                        return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeList(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeList(builder) {\n                        LargeList.startLargeList(builder);\n                        return LargeList.endLargeList(builder);\n                    }\n                }\n                flatbuf.LargeList = LargeList;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FixedSizeList {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FixedSizeList\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FixedSizeList= obj\n                     * @returns FixedSizeList\n                     */\n                    static getRootAsFixedSizeList(bb, obj) {\n                        return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Number of list items per value\n                     *\n                     * @returns number\n                     */\n                    listSize() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFixedSizeList(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number listSize\n                     */\n                    static addListSize(builder, listSize) {\n                        builder.addFieldInt32(0, listSize, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFixedSizeList(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFixedSizeList(builder, listSize) {\n                        FixedSizeList.startFixedSizeList(builder);\n                        FixedSizeList.addListSize(builder, listSize);\n                        return FixedSizeList.endFixedSizeList(builder);\n                    }\n                }\n                flatbuf.FixedSizeList = FixedSizeList;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Map {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Map\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Map= obj\n                     * @returns Map\n                     */\n                    static getRootAsMap(bb, obj) {\n                        return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Set to true if the keys within each value are sorted\n                     *\n                     * @returns boolean\n                     */\n                    keysSorted() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startMap(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean keysSorted\n                     */\n                    static addKeysSorted(builder, keysSorted) {\n                        builder.addFieldInt8(0, +keysSorted, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endMap(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createMap(builder, keysSorted) {\n                        Map.startMap(builder);\n                        Map.addKeysSorted(builder, keysSorted);\n                        return Map.endMap(builder);\n                    }\n                }\n                flatbuf.Map = Map;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Union {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Union\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Union= obj\n                     * @returns Union\n                     */\n                    static getRootAsUnion(bb, obj) {\n                        return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.UnionMode\n                     */\n                    mode() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n                    }\n                    /**\n                     * @param number index\n                     * @returns number\n                     */\n                    typeIds(index) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    typeIdsLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @returns Int32Array\n                     */\n                    typeIdsArray() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startUnion(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.UnionMode mode\n                     */\n                    static addMode(builder, mode) {\n                        builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset typeIdsOffset\n                     */\n                    static addTypeIds(builder, typeIdsOffset) {\n                        builder.addFieldOffset(1, typeIdsOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<number> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createTypeIdsVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addInt32(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startTypeIdsVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endUnion(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createUnion(builder, mode, typeIdsOffset) {\n                        Union.startUnion(builder);\n                        Union.addMode(builder, mode);\n                        Union.addTypeIds(builder, typeIdsOffset);\n                        return Union.endUnion(builder);\n                    }\n                }\n                flatbuf.Union = Union;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Int {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Int\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Int= obj\n                     * @returns Int\n                     */\n                    static getRootAsInt(bb, obj) {\n                        return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns number\n                     */\n                    bitWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @returns boolean\n                     */\n                    isSigned() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startInt(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number bitWidth\n                     */\n                    static addBitWidth(builder, bitWidth) {\n                        builder.addFieldInt32(0, bitWidth, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isSigned\n                     */\n                    static addIsSigned(builder, isSigned) {\n                        builder.addFieldInt8(1, +isSigned, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endInt(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createInt(builder, bitWidth, isSigned) {\n                        Int.startInt(builder);\n                        Int.addBitWidth(builder, bitWidth);\n                        Int.addIsSigned(builder, isSigned);\n                        return Int.endInt(builder);\n                    }\n                }\n                flatbuf.Int = Int;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FloatingPoint {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FloatingPoint\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FloatingPoint= obj\n                     * @returns FloatingPoint\n                     */\n                    static getRootAsFloatingPoint(bb, obj) {\n                        return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.Precision\n                     */\n                    precision() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFloatingPoint(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Precision precision\n                     */\n                    static addPrecision(builder, precision) {\n                        builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFloatingPoint(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFloatingPoint(builder, precision) {\n                        FloatingPoint.startFloatingPoint(builder);\n                        FloatingPoint.addPrecision(builder, precision);\n                        return FloatingPoint.endFloatingPoint(builder);\n                    }\n                }\n                flatbuf.FloatingPoint = FloatingPoint;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Utf8 {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Utf8\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Utf8= obj\n                     * @returns Utf8\n                     */\n                    static getRootAsUtf8(bb, obj) {\n                        return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startUtf8(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endUtf8(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createUtf8(builder) {\n                        Utf8.startUtf8(builder);\n                        return Utf8.endUtf8(builder);\n                    }\n                }\n                flatbuf.Utf8 = Utf8;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Opaque binary data\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Binary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Binary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Binary= obj\n                     * @returns Binary\n                     */\n                    static getRootAsBinary(bb, obj) {\n                        return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startBinary(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createBinary(builder) {\n                        Binary.startBinary(builder);\n                        return Binary.endBinary(builder);\n                    }\n                }\n                flatbuf.Binary = Binary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeUtf8 {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeUtf8\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeUtf8= obj\n                     * @returns LargeUtf8\n                     */\n                    static getRootAsLargeUtf8(bb, obj) {\n                        return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeUtf8(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeUtf8(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeUtf8(builder) {\n                        LargeUtf8.startLargeUtf8(builder);\n                        return LargeUtf8.endLargeUtf8(builder);\n                    }\n                }\n                flatbuf.LargeUtf8 = LargeUtf8;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class LargeBinary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns LargeBinary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param LargeBinary= obj\n                     * @returns LargeBinary\n                     */\n                    static getRootAsLargeBinary(bb, obj) {\n                        return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startLargeBinary(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endLargeBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createLargeBinary(builder) {\n                        LargeBinary.startLargeBinary(builder);\n                        return LargeBinary.endLargeBinary(builder);\n                    }\n                }\n                flatbuf.LargeBinary = LargeBinary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FixedSizeBinary {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FixedSizeBinary\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param FixedSizeBinary= obj\n                     * @returns FixedSizeBinary\n                     */\n                    static getRootAsFixedSizeBinary(bb, obj) {\n                        return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Number of bytes per value\n                     *\n                     * @returns number\n                     */\n                    byteWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFixedSizeBinary(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number byteWidth\n                     */\n                    static addByteWidth(builder, byteWidth) {\n                        builder.addFieldInt32(0, byteWidth, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFixedSizeBinary(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createFixedSizeBinary(builder, byteWidth) {\n                        FixedSizeBinary.startFixedSizeBinary(builder);\n                        FixedSizeBinary.addByteWidth(builder, byteWidth);\n                        return FixedSizeBinary.endFixedSizeBinary(builder);\n                    }\n                }\n                flatbuf.FixedSizeBinary = FixedSizeBinary;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Bool {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Bool\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Bool= obj\n                     * @returns Bool\n                     */\n                    static getRootAsBool(bb, obj) {\n                        return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startBool(builder) {\n                        builder.startObject(0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endBool(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createBool(builder) {\n                        Bool.startBool(builder);\n                        return Bool.endBool(builder);\n                    }\n                }\n                flatbuf.Bool = Bool;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Decimal {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Decimal\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Decimal= obj\n                     * @returns Decimal\n                     */\n                    static getRootAsDecimal(bb, obj) {\n                        return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * Total number of decimal digits\n                     *\n                     * @returns number\n                     */\n                    precision() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * Number of digits after the decimal point \".\"\n                     *\n                     * @returns number\n                     */\n                    scale() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDecimal(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number precision\n                     */\n                    static addPrecision(builder, precision) {\n                        builder.addFieldInt32(0, precision, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number scale\n                     */\n                    static addScale(builder, scale) {\n                        builder.addFieldInt32(1, scale, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDecimal(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDecimal(builder, precision, scale) {\n                        Decimal.startDecimal(builder);\n                        Decimal.addPrecision(builder, precision);\n                        Decimal.addScale(builder, scale);\n                        return Decimal.endDecimal(builder);\n                    }\n                }\n                flatbuf.Decimal = Decimal;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Date {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Date\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Date= obj\n                     * @returns Date\n                     */\n                    static getRootAsDate(bb, obj) {\n                        return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.DateUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDate(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.DateUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDate(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDate(builder, unit) {\n                        Date.startDate(builder);\n                        Date.addUnit(builder, unit);\n                        return Date.endDate(builder);\n                    }\n                }\n                flatbuf.Date = Date;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Time {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Time\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Time= obj\n                     * @returns Time\n                     */\n                    static getRootAsTime(bb, obj) {\n                        return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    bitWidth() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.readInt32(this.bb_pos + offset) : 32;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startTime(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number bitWidth\n                     */\n                    static addBitWidth(builder, bitWidth) {\n                        builder.addFieldInt32(1, bitWidth, 32);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endTime(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createTime(builder, unit, bitWidth) {\n                        Time.startTime(builder);\n                        Time.addUnit(builder, unit);\n                        Time.addBitWidth(builder, bitWidth);\n                        return Time.endTime(builder);\n                    }\n                }\n                flatbuf.Time = Time;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Timestamp {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Timestamp\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Timestamp= obj\n                     * @returns Timestamp\n                     */\n                    static getRootAsTimestamp(bb, obj) {\n                        return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n                    }\n                    timezone(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startTimestamp(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset timezoneOffset\n                     */\n                    static addTimezone(builder, timezoneOffset) {\n                        builder.addFieldOffset(1, timezoneOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endTimestamp(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createTimestamp(builder, unit, timezoneOffset) {\n                        Timestamp.startTimestamp(builder);\n                        Timestamp.addUnit(builder, unit);\n                        Timestamp.addTimezone(builder, timezoneOffset);\n                        return Timestamp.endTimestamp(builder);\n                    }\n                }\n                flatbuf.Timestamp = Timestamp;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Interval {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Interval\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Interval= obj\n                     * @returns Interval\n                     */\n                    static getRootAsInterval(bb, obj) {\n                        return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.IntervalUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startInterval(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.IntervalUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endInterval(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createInterval(builder, unit) {\n                        Interval.startInterval(builder);\n                        Interval.addUnit(builder, unit);\n                        return Interval.endInterval(builder);\n                    }\n                }\n                flatbuf.Interval = Interval;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Duration {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Duration\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Duration= obj\n                     * @returns Duration\n                     */\n                    static getRootAsDuration(bb, obj) {\n                        return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.TimeUnit\n                     */\n                    unit() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDuration(builder) {\n                        builder.startObject(1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.TimeUnit unit\n                     */\n                    static addUnit(builder, unit) {\n                        builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDuration(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDuration(builder, unit) {\n                        Duration.startDuration(builder);\n                        Duration.addUnit(builder, unit);\n                        return Duration.endDuration(builder);\n                    }\n                }\n                flatbuf.Duration = Duration;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class KeyValue {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns KeyValue\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param KeyValue= obj\n                     * @returns KeyValue\n                     */\n                    static getRootAsKeyValue(bb, obj) {\n                        return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    key(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    value(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startKeyValue(builder) {\n                        builder.startObject(2);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset keyOffset\n                     */\n                    static addKey(builder, keyOffset) {\n                        builder.addFieldOffset(0, keyOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset valueOffset\n                     */\n                    static addValue(builder, valueOffset) {\n                        builder.addFieldOffset(1, valueOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endKeyValue(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createKeyValue(builder, keyOffset, valueOffset) {\n                        KeyValue.startKeyValue(builder);\n                        KeyValue.addKey(builder, keyOffset);\n                        KeyValue.addValue(builder, valueOffset);\n                        return KeyValue.endKeyValue(builder);\n                    }\n                }\n                flatbuf.KeyValue = KeyValue;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class DictionaryEncoding {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns DictionaryEncoding\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param DictionaryEncoding= obj\n                     * @returns DictionaryEncoding\n                     */\n                    static getRootAsDictionaryEncoding(bb, obj) {\n                        return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * The known dictionary id in the application where this data is used. In\n                     * the file or streaming formats, the dictionary ids are found in the\n                     * DictionaryBatch messages\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    id() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * The dictionary indices are constrained to be positive integers. If this\n                     * field is null, the indices must be signed int32\n                     *\n                     * @param org.apache.arrow.flatbuf.Int= obj\n                     * @returns org.apache.arrow.flatbuf.Int|null\n                     */\n                    indexType(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * By default, dictionaries are not ordered, or the order does not have\n                     * semantic meaning. In some statistical, applications, dictionary-encoding\n                     * is used to represent ordered categorical data, and we provide a way to\n                     * preserve that metadata here\n                     *\n                     * @returns boolean\n                     */\n                    isOrdered() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDictionaryEncoding(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long id\n                     */\n                    static addId(builder, id) {\n                        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset indexTypeOffset\n                     */\n                    static addIndexType(builder, indexTypeOffset) {\n                        builder.addFieldOffset(1, indexTypeOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isOrdered\n                     */\n                    static addIsOrdered(builder, isOrdered) {\n                        builder.addFieldInt8(2, +isOrdered, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDictionaryEncoding(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDictionaryEncoding(builder, id, indexTypeOffset, isOrdered) {\n                        DictionaryEncoding.startDictionaryEncoding(builder);\n                        DictionaryEncoding.addId(builder, id);\n                        DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n                        DictionaryEncoding.addIsOrdered(builder, isOrdered);\n                        return DictionaryEncoding.endDictionaryEncoding(builder);\n                    }\n                }\n                flatbuf.DictionaryEncoding = DictionaryEncoding;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Field {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Field\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Field= obj\n                     * @returns Field\n                     */\n                    static getRootAsField(bb, obj) {\n                        return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    name(optionalEncoding) {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n                    }\n                    /**\n                     * Whether or not this field can contain nulls. Should be true in general.\n                     *\n                     * @returns boolean\n                     */\n                    nullable() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.Type\n                     */\n                    typeType() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n                    }\n                    /**\n                     * This is the type of the decoded value if the field is dictionary encoded.\n                     *\n                     * @param flatbuffers.Table obj\n                     * @returns ?flatbuffers.Table\n                     */\n                    type(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n                    }\n                    /**\n                     * Present only if the field is dictionary encoded.\n                     *\n                     * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n                     * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n                     */\n                    dictionary(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * children apply only to nested data types like Struct, List and Union. For\n                     * primitive types children will have length 0.\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Field= obj\n                     * @returns org.apache.arrow.flatbuf.Field\n                     */\n                    children(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 14);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    childrenLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 14);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * User-defined metadata\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 16);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 16);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startField(builder) {\n                        builder.startObject(7);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset nameOffset\n                     */\n                    static addName(builder, nameOffset) {\n                        builder.addFieldOffset(0, nameOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean nullable\n                     */\n                    static addNullable(builder, nullable) {\n                        builder.addFieldInt8(1, +nullable, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Type typeType\n                     */\n                    static addTypeType(builder, typeType) {\n                        builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset typeOffset\n                     */\n                    static addType(builder, typeOffset) {\n                        builder.addFieldOffset(3, typeOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dictionaryOffset\n                     */\n                    static addDictionary(builder, dictionaryOffset) {\n                        builder.addFieldOffset(4, dictionaryOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset childrenOffset\n                     */\n                    static addChildren(builder, childrenOffset) {\n                        builder.addFieldOffset(5, childrenOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createChildrenVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startChildrenVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(6, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endField(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createField(builder, nameOffset, nullable, typeType, typeOffset, dictionaryOffset, childrenOffset, customMetadataOffset) {\n                        Field.startField(builder);\n                        Field.addName(builder, nameOffset);\n                        Field.addNullable(builder, nullable);\n                        Field.addTypeType(builder, typeType);\n                        Field.addType(builder, typeOffset);\n                        Field.addDictionary(builder, dictionaryOffset);\n                        Field.addChildren(builder, childrenOffset);\n                        Field.addCustomMetadata(builder, customMetadataOffset);\n                        return Field.endField(builder);\n                    }\n                }\n                flatbuf.Field = Field;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Buffer {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Buffer\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * The relative offset into the shared memory page where the bytes for this\n                     * buffer starts\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    offset() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * The absolute length (in bytes) of the memory buffer. The memory is found\n                     * from offset (inclusive) to offset + length (non-inclusive).\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        return this.bb.readInt64(this.bb_pos + 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long offset\n                     * @param flatbuffers.Long length\n                     * @returns flatbuffers.Offset\n                     */\n                    static createBuffer(builder, offset, length) {\n                        builder.prep(8, 16);\n                        builder.writeInt64(length);\n                        builder.writeInt64(offset);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.Buffer = Buffer;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Schema {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Schema\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Schema= obj\n                     * @returns Schema\n                     */\n                    static getRootAsSchema(bb, obj) {\n                        return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * endianness of the buffer\n                     * it is Little Endian by default\n                     * if endianness doesn't match the underlying system then the vectors need to be converted\n                     *\n                     * @returns org.apache.arrow.flatbuf.Endianness\n                     */\n                    endianness() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Field= obj\n                     * @returns org.apache.arrow.flatbuf.Field\n                     */\n                    fields(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    fieldsLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startSchema(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.Endianness endianness\n                     */\n                    static addEndianness(builder, endianness) {\n                        builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset fieldsOffset\n                     */\n                    static addFields(builder, fieldsOffset) {\n                        builder.addFieldOffset(1, fieldsOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createFieldsVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startFieldsVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(2, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endSchema(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishSchemaBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createSchema(builder, endianness, fieldsOffset, customMetadataOffset) {\n                        Schema.startSchema(builder);\n                        Schema.addEndianness(builder, endianness);\n                        Schema.addFields(builder, fieldsOffset);\n                        Schema.addCustomMetadata(builder, customMetadataOffset);\n                        return Schema.endSchema(builder);\n                    }\n                }\n                flatbuf.Schema = Schema;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n\n//# sourceMappingURL=Schema.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as NS7624605610262437867 from './Schema';\nexport var org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                flatbuf.Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                let MessageHeader;\n                (function (MessageHeader) {\n                    MessageHeader[MessageHeader[\"NONE\"] = 0] = \"NONE\";\n                    MessageHeader[MessageHeader[\"Schema\"] = 1] = \"Schema\";\n                    MessageHeader[MessageHeader[\"DictionaryBatch\"] = 2] = \"DictionaryBatch\";\n                    MessageHeader[MessageHeader[\"RecordBatch\"] = 3] = \"RecordBatch\";\n                    MessageHeader[MessageHeader[\"Tensor\"] = 4] = \"Tensor\";\n                    MessageHeader[MessageHeader[\"SparseTensor\"] = 5] = \"SparseTensor\";\n                })(MessageHeader = flatbuf.MessageHeader || (flatbuf.MessageHeader = {}));\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class FieldNode {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns FieldNode\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * The number of value slots in the Arrow array at this level of a nested\n                     * tree\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * The number of observed nulls. Fields with null_count == 0 may choose not\n                     * to write their physical validity bitmap out as a materialized buffer,\n                     * instead setting the length of the bitmap buffer to 0.\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    nullCount() {\n                        return this.bb.readInt64(this.bb_pos + 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long length\n                     * @param flatbuffers.Long null_count\n                     * @returns flatbuffers.Offset\n                     */\n                    static createFieldNode(builder, length, null_count) {\n                        builder.prep(8, 16);\n                        builder.writeInt64(null_count);\n                        builder.writeInt64(length);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.FieldNode = FieldNode;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class RecordBatch {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns RecordBatch\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param RecordBatch= obj\n                     * @returns RecordBatch\n                     */\n                    static getRootAsRecordBatch(bb, obj) {\n                        return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * number of records / rows. The arrays in the batch should all have this\n                     * length\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    length() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * Nodes correspond to the pre-ordered flattened logical schema\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.FieldNode= obj\n                     * @returns org.apache.arrow.flatbuf.FieldNode\n                     */\n                    nodes(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    nodesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * Buffers correspond to the pre-ordered flattened buffer tree\n                     *\n                     * The number of buffers appended to this list depends on the schema. For\n                     * example, most primitive arrays will have 2 buffers, 1 for the validity\n                     * bitmap and 1 for the values. For struct arrays, there will only be a\n                     * single buffer for the validity (nulls) bitmap\n                     *\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Buffer= obj\n                     * @returns org.apache.arrow.flatbuf.Buffer\n                     */\n                    buffers(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    buffersLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startRecordBatch(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long length\n                     */\n                    static addLength(builder, length) {\n                        builder.addFieldInt64(0, length, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset nodesOffset\n                     */\n                    static addNodes(builder, nodesOffset) {\n                        builder.addFieldOffset(1, nodesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startNodesVector(builder, numElems) {\n                        builder.startVector(16, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset buffersOffset\n                     */\n                    static addBuffers(builder, buffersOffset) {\n                        builder.addFieldOffset(2, buffersOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startBuffersVector(builder, numElems) {\n                        builder.startVector(16, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endRecordBatch(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createRecordBatch(builder, length, nodesOffset, buffersOffset) {\n                        RecordBatch.startRecordBatch(builder);\n                        RecordBatch.addLength(builder, length);\n                        RecordBatch.addNodes(builder, nodesOffset);\n                        RecordBatch.addBuffers(builder, buffersOffset);\n                        return RecordBatch.endRecordBatch(builder);\n                    }\n                }\n                flatbuf.RecordBatch = RecordBatch;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class DictionaryBatch {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns DictionaryBatch\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param DictionaryBatch= obj\n                     * @returns DictionaryBatch\n                     */\n                    static getRootAsDictionaryBatch(bb, obj) {\n                        return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns flatbuffers.Long\n                     */\n                    id() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * @param org.apache.arrow.flatbuf.RecordBatch= obj\n                     * @returns org.apache.arrow.flatbuf.RecordBatch|null\n                     */\n                    data(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * If isDelta is true the values in the dictionary are to be appended to a\n                     * dictionary with the indicated id\n                     *\n                     * @returns boolean\n                     */\n                    isDelta() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startDictionaryBatch(builder) {\n                        builder.startObject(3);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long id\n                     */\n                    static addId(builder, id) {\n                        builder.addFieldInt64(0, id, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dataOffset\n                     */\n                    static addData(builder, dataOffset) {\n                        builder.addFieldOffset(1, dataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param boolean isDelta\n                     */\n                    static addIsDelta(builder, isDelta) {\n                        builder.addFieldInt8(2, +isDelta, +false);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endDictionaryBatch(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    static createDictionaryBatch(builder, id, dataOffset, isDelta) {\n                        DictionaryBatch.startDictionaryBatch(builder);\n                        DictionaryBatch.addId(builder, id);\n                        DictionaryBatch.addData(builder, dataOffset);\n                        DictionaryBatch.addIsDelta(builder, isDelta);\n                        return DictionaryBatch.endDictionaryBatch(builder);\n                    }\n                }\n                flatbuf.DictionaryBatch = DictionaryBatch;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Message {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Message\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Message= obj\n                     * @returns Message\n                     */\n                    static getRootAsMessage(bb, obj) {\n                        return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MetadataVersion\n                     */\n                    version() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MessageHeader\n                     */\n                    headerType() {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n                    }\n                    /**\n                     * @param flatbuffers.Table obj\n                     * @returns ?flatbuffers.Table\n                     */\n                    header(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;\n                    }\n                    /**\n                     * @returns flatbuffers.Long\n                     */\n                    bodyLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.KeyValue= obj\n                     * @returns org.apache.arrow.flatbuf.KeyValue\n                     */\n                    customMetadata(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    customMetadataLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 12);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startMessage(builder) {\n                        builder.startObject(5);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MetadataVersion version\n                     */\n                    static addVersion(builder, version) {\n                        builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MessageHeader headerType\n                     */\n                    static addHeaderType(builder, headerType) {\n                        builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset headerOffset\n                     */\n                    static addHeader(builder, headerOffset) {\n                        builder.addFieldOffset(2, headerOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long bodyLength\n                     */\n                    static addBodyLength(builder, bodyLength) {\n                        builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset customMetadataOffset\n                     */\n                    static addCustomMetadata(builder, customMetadataOffset) {\n                        builder.addFieldOffset(4, customMetadataOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param Array.<flatbuffers.Offset> data\n                     * @returns flatbuffers.Offset\n                     */\n                    static createCustomMetadataVector(builder, data) {\n                        builder.startVector(4, data.length, 4);\n                        for (let i = data.length - 1; i >= 0; i--) {\n                            builder.addOffset(data[i]);\n                        }\n                        return builder.endVector();\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startCustomMetadataVector(builder, numElems) {\n                        builder.startVector(4, numElems, 4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endMessage(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishMessageBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createMessage(builder, version, headerType, headerOffset, bodyLength, customMetadataOffset) {\n                        Message.startMessage(builder);\n                        Message.addVersion(builder, version);\n                        Message.addHeaderType(builder, headerType);\n                        Message.addHeader(builder, headerOffset);\n                        Message.addBodyLength(builder, bodyLength);\n                        Message.addCustomMetadata(builder, customMetadataOffset);\n                        return Message.endMessage(builder);\n                    }\n                }\n                flatbuf.Message = Message;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n\n//# sourceMappingURL=Message.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\nexport var ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport var DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport var TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport var Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport var UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport var IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport var MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport var MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport var Type;\n(function (Type) {\n    /** The default placeholder type */\n    Type[Type[\"NONE\"] = 0] = \"NONE\";\n    /** A NULL type having no physical storage */\n    Type[Type[\"Null\"] = 1] = \"Null\";\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Type[Type[\"Int\"] = 2] = \"Int\";\n    /** 2, 4, or 8-byte floating point value */\n    Type[Type[\"Float\"] = 3] = \"Float\";\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Type[Type[\"Binary\"] = 4] = \"Binary\";\n    /** UTF8 variable-length string as List<Char> */\n    Type[Type[\"Utf8\"] = 5] = \"Utf8\";\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Type[Type[\"Bool\"] = 6] = \"Bool\";\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Type[Type[\"Decimal\"] = 7] = \"Decimal\";\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Type[Type[\"Date\"] = 8] = \"Date\";\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Type[Type[\"Time\"] = 9] = \"Time\";\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Type[Type[\"Timestamp\"] = 10] = \"Timestamp\";\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Type[Type[\"Interval\"] = 11] = \"Interval\";\n    /** A list of some logical data type */\n    Type[Type[\"List\"] = 12] = \"List\";\n    /** Struct of logical types */\n    Type[Type[\"Struct\"] = 13] = \"Struct\";\n    /** Union of logical types */\n    Type[Type[\"Union\"] = 14] = \"Union\";\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    Type[Type[\"FixedSizeBinary\"] = 15] = \"FixedSizeBinary\";\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    Type[Type[\"FixedSizeList\"] = 16] = \"FixedSizeList\";\n    /** Map of named logical types */\n    Type[Type[\"Map\"] = 17] = \"Map\";\n    /** Dictionary aka Category type */\n    Type[Type[\"Dictionary\"] = -1] = \"Dictionary\";\n    Type[Type[\"Int8\"] = -2] = \"Int8\";\n    Type[Type[\"Int16\"] = -3] = \"Int16\";\n    Type[Type[\"Int32\"] = -4] = \"Int32\";\n    Type[Type[\"Int64\"] = -5] = \"Int64\";\n    Type[Type[\"Uint8\"] = -6] = \"Uint8\";\n    Type[Type[\"Uint16\"] = -7] = \"Uint16\";\n    Type[Type[\"Uint32\"] = -8] = \"Uint32\";\n    Type[Type[\"Uint64\"] = -9] = \"Uint64\";\n    Type[Type[\"Float16\"] = -10] = \"Float16\";\n    Type[Type[\"Float32\"] = -11] = \"Float32\";\n    Type[Type[\"Float64\"] = -12] = \"Float64\";\n    Type[Type[\"DateDay\"] = -13] = \"DateDay\";\n    Type[Type[\"DateMillisecond\"] = -14] = \"DateMillisecond\";\n    Type[Type[\"TimestampSecond\"] = -15] = \"TimestampSecond\";\n    Type[Type[\"TimestampMillisecond\"] = -16] = \"TimestampMillisecond\";\n    Type[Type[\"TimestampMicrosecond\"] = -17] = \"TimestampMicrosecond\";\n    Type[Type[\"TimestampNanosecond\"] = -18] = \"TimestampNanosecond\";\n    Type[Type[\"TimeSecond\"] = -19] = \"TimeSecond\";\n    Type[Type[\"TimeMillisecond\"] = -20] = \"TimeMillisecond\";\n    Type[Type[\"TimeMicrosecond\"] = -21] = \"TimeMicrosecond\";\n    Type[Type[\"TimeNanosecond\"] = -22] = \"TimeNanosecond\";\n    Type[Type[\"DenseUnion\"] = -23] = \"DenseUnion\";\n    Type[Type[\"SparseUnion\"] = -24] = \"SparseUnion\";\n    Type[Type[\"IntervalDayTime\"] = -25] = \"IntervalDayTime\";\n    Type[Type[\"IntervalYearMonth\"] = -26] = \"IntervalYearMonth\";\n})(Type || (Type = {}));\nexport var BufferType;\n(function (BufferType) {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    BufferType[BufferType[\"OFFSET\"] = 0] = \"OFFSET\";\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    BufferType[BufferType[\"DATA\"] = 1] = \"DATA\";\n    /**\n     * Bit vector indicating if each value is null\n     */\n    BufferType[BufferType[\"VALIDITY\"] = 2] = \"VALIDITY\";\n    /**\n     * Type vector used in Union type\n     */\n    BufferType[BufferType[\"TYPE\"] = 3] = \"TYPE\";\n})(BufferType || (BufferType = {}));\n\n//# sourceMappingURL=enum.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport function getBool(_data, _index, byte, bit) {\n    return (byte & 1 << bit) !== 0;\n}\n/** @ignore */\nexport function getBit(_data, _index, byte, bit) {\n    return (byte & 1 << bit) >> bit;\n}\n/** @ignore */\nexport function setBool(bytes, index, value) {\n    return value ?\n        !!(bytes[index >> 3] |= (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false;\n}\n/** @ignore */\nexport function truncateBitmap(offset, length, bitmap) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n/** @ignore */\nexport function packBools(values) {\n    let xs = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) {\n        xs[i++] = byte;\n    }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n/** @ignore */\nexport function* iterateBits(bytes, begin, length, context, get) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data, lhs, rhs) {\n    if (rhs - lhs <= 0) {\n        return 0;\n    }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n    // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n    popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3));\n}\n/** @ignore */\nexport function popcnt_array(arr, byteOffset, byteLength) {\n    let cnt = 0, pos = byteOffset | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len = byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n/** @ignore */\nexport function popcnt_uint32(uint32) {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n\n//# sourceMappingURL=bit.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, } from './type';\nexport class Visitor {\n    visitMany(nodes, ...args) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    visit(...args) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    getVisitFn(node, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    visitNull(_node, ..._args) { return null; }\n    visitBool(_node, ..._args) { return null; }\n    visitInt(_node, ..._args) { return null; }\n    visitFloat(_node, ..._args) { return null; }\n    visitUtf8(_node, ..._args) { return null; }\n    visitBinary(_node, ..._args) { return null; }\n    visitFixedSizeBinary(_node, ..._args) { return null; }\n    visitDate(_node, ..._args) { return null; }\n    visitTimestamp(_node, ..._args) { return null; }\n    visitTime(_node, ..._args) { return null; }\n    visitDecimal(_node, ..._args) { return null; }\n    visitList(_node, ..._args) { return null; }\n    visitStruct(_node, ..._args) { return null; }\n    visitUnion(_node, ..._args) { return null; }\n    visitDictionary(_node, ..._args) { return null; }\n    visitInterval(_node, ..._args) { return null; }\n    visitFixedSizeList(_node, ..._args) { return null; }\n    visitMap(_node, ..._args) { return null; }\n}\n/** @ignore */\nfunction getVisitFn(visitor, node, throwIfNotFound = true) {\n    let fn = null;\n    let dtype = Type.NONE;\n    // tslint:disable\n    if (node instanceof Data) {\n        dtype = inferDType(node.type);\n    }\n    else if (node instanceof Vector) {\n        dtype = inferDType(node.type);\n    }\n    else if (node instanceof DataType) {\n        dtype = inferDType(node);\n    }\n    else if (typeof (dtype = node) !== 'number') {\n        dtype = Type[node];\n    }\n    switch (dtype) {\n        case Type.Null:\n            fn = visitor.visitNull;\n            break;\n        case Type.Bool:\n            fn = visitor.visitBool;\n            break;\n        case Type.Int:\n            fn = visitor.visitInt;\n            break;\n        case Type.Int8:\n            fn = visitor.visitInt8 || visitor.visitInt;\n            break;\n        case Type.Int16:\n            fn = visitor.visitInt16 || visitor.visitInt;\n            break;\n        case Type.Int32:\n            fn = visitor.visitInt32 || visitor.visitInt;\n            break;\n        case Type.Int64:\n            fn = visitor.visitInt64 || visitor.visitInt;\n            break;\n        case Type.Uint8:\n            fn = visitor.visitUint8 || visitor.visitInt;\n            break;\n        case Type.Uint16:\n            fn = visitor.visitUint16 || visitor.visitInt;\n            break;\n        case Type.Uint32:\n            fn = visitor.visitUint32 || visitor.visitInt;\n            break;\n        case Type.Uint64:\n            fn = visitor.visitUint64 || visitor.visitInt;\n            break;\n        case Type.Float:\n            fn = visitor.visitFloat;\n            break;\n        case Type.Float16:\n            fn = visitor.visitFloat16 || visitor.visitFloat;\n            break;\n        case Type.Float32:\n            fn = visitor.visitFloat32 || visitor.visitFloat;\n            break;\n        case Type.Float64:\n            fn = visitor.visitFloat64 || visitor.visitFloat;\n            break;\n        case Type.Utf8:\n            fn = visitor.visitUtf8;\n            break;\n        case Type.Binary:\n            fn = visitor.visitBinary;\n            break;\n        case Type.FixedSizeBinary:\n            fn = visitor.visitFixedSizeBinary;\n            break;\n        case Type.Date:\n            fn = visitor.visitDate;\n            break;\n        case Type.DateDay:\n            fn = visitor.visitDateDay || visitor.visitDate;\n            break;\n        case Type.DateMillisecond:\n            fn = visitor.visitDateMillisecond || visitor.visitDate;\n            break;\n        case Type.Timestamp:\n            fn = visitor.visitTimestamp;\n            break;\n        case Type.TimestampSecond:\n            fn = visitor.visitTimestampSecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampMillisecond:\n            fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampMicrosecond:\n            fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp;\n            break;\n        case Type.TimestampNanosecond:\n            fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp;\n            break;\n        case Type.Time:\n            fn = visitor.visitTime;\n            break;\n        case Type.TimeSecond:\n            fn = visitor.visitTimeSecond || visitor.visitTime;\n            break;\n        case Type.TimeMillisecond:\n            fn = visitor.visitTimeMillisecond || visitor.visitTime;\n            break;\n        case Type.TimeMicrosecond:\n            fn = visitor.visitTimeMicrosecond || visitor.visitTime;\n            break;\n        case Type.TimeNanosecond:\n            fn = visitor.visitTimeNanosecond || visitor.visitTime;\n            break;\n        case Type.Decimal:\n            fn = visitor.visitDecimal;\n            break;\n        case Type.List:\n            fn = visitor.visitList;\n            break;\n        case Type.Struct:\n            fn = visitor.visitStruct;\n            break;\n        case Type.Union:\n            fn = visitor.visitUnion;\n            break;\n        case Type.DenseUnion:\n            fn = visitor.visitDenseUnion || visitor.visitUnion;\n            break;\n        case Type.SparseUnion:\n            fn = visitor.visitSparseUnion || visitor.visitUnion;\n            break;\n        case Type.Dictionary:\n            fn = visitor.visitDictionary;\n            break;\n        case Type.Interval:\n            fn = visitor.visitInterval;\n            break;\n        case Type.IntervalDayTime:\n            fn = visitor.visitIntervalDayTime || visitor.visitInterval;\n            break;\n        case Type.IntervalYearMonth:\n            fn = visitor.visitIntervalYearMonth || visitor.visitInterval;\n            break;\n        case Type.FixedSizeList:\n            fn = visitor.visitFixedSizeList;\n            break;\n        case Type.Map:\n            fn = visitor.visitMap;\n            break;\n    }\n    if (typeof fn === 'function')\n        return fn;\n    if (!throwIfNotFound)\n        return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n/** @ignore */\nfunction inferDType(type) {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = type;\n            switch (bitWidth) {\n                case 8: return isSigned ? Type.Int8 : Type.Uint8;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch (type.precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch (type.unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch (type.unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch (type.unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch (type.unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch (type.mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nVisitor.prototype.visitInt8 = null;\nVisitor.prototype.visitInt16 = null;\nVisitor.prototype.visitInt32 = null;\nVisitor.prototype.visitInt64 = null;\nVisitor.prototype.visitUint8 = null;\nVisitor.prototype.visitUint16 = null;\nVisitor.prototype.visitUint32 = null;\nVisitor.prototype.visitUint64 = null;\nVisitor.prototype.visitFloat16 = null;\nVisitor.prototype.visitFloat32 = null;\nVisitor.prototype.visitFloat64 = null;\nVisitor.prototype.visitDateDay = null;\nVisitor.prototype.visitDateMillisecond = null;\nVisitor.prototype.visitTimestampSecond = null;\nVisitor.prototype.visitTimestampMillisecond = null;\nVisitor.prototype.visitTimestampMicrosecond = null;\nVisitor.prototype.visitTimestampNanosecond = null;\nVisitor.prototype.visitTimeSecond = null;\nVisitor.prototype.visitTimeMillisecond = null;\nVisitor.prototype.visitTimeMicrosecond = null;\nVisitor.prototype.visitTimeNanosecond = null;\nVisitor.prototype.visitDenseUnion = null;\nVisitor.prototype.visitSparseUnion = null;\nVisitor.prototype.visitIntervalDayTime = null;\nVisitor.prototype.visitIntervalYearMonth = null;\n\n//# sourceMappingURL=visitor.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas(schema, other) {\n        return (schema === other) || (other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields));\n    }\n    compareFields(fields, others) {\n        return (fields === others) || (Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i])));\n    }\n    compareField(field, other) {\n        return (field === other) || (other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type));\n    }\n}\nfunction compareConstructor(type, other) {\n    return other instanceof type.constructor;\n}\nfunction compareAny(type, other) {\n    return (type === other) || compareConstructor(type, other);\n}\nfunction compareInt(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned);\n}\nfunction compareFloat(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.precision === other.precision);\n}\nfunction compareFixedSizeBinary(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth);\n}\nfunction compareDate(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit);\n}\nfunction compareTimestamp(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone);\n}\nfunction compareTime(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth);\n}\nfunction compareList(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareStruct(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareUnion(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareDictionary(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary));\n}\nfunction compareInterval(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.unit === other.unit);\n}\nfunction compareFixedSizeList(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nfunction compareMap(type, other) {\n    return (type === other) || (compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children));\n}\nTypeComparator.prototype.visitNull = compareAny;\nTypeComparator.prototype.visitBool = compareAny;\nTypeComparator.prototype.visitInt = compareInt;\nTypeComparator.prototype.visitInt8 = compareInt;\nTypeComparator.prototype.visitInt16 = compareInt;\nTypeComparator.prototype.visitInt32 = compareInt;\nTypeComparator.prototype.visitInt64 = compareInt;\nTypeComparator.prototype.visitUint8 = compareInt;\nTypeComparator.prototype.visitUint16 = compareInt;\nTypeComparator.prototype.visitUint32 = compareInt;\nTypeComparator.prototype.visitUint64 = compareInt;\nTypeComparator.prototype.visitFloat = compareFloat;\nTypeComparator.prototype.visitFloat16 = compareFloat;\nTypeComparator.prototype.visitFloat32 = compareFloat;\nTypeComparator.prototype.visitFloat64 = compareFloat;\nTypeComparator.prototype.visitUtf8 = compareAny;\nTypeComparator.prototype.visitBinary = compareAny;\nTypeComparator.prototype.visitFixedSizeBinary = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate = compareDate;\nTypeComparator.prototype.visitDateDay = compareDate;\nTypeComparator.prototype.visitDateMillisecond = compareDate;\nTypeComparator.prototype.visitTimestamp = compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond = compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond = compareTimestamp;\nTypeComparator.prototype.visitTime = compareTime;\nTypeComparator.prototype.visitTimeSecond = compareTime;\nTypeComparator.prototype.visitTimeMillisecond = compareTime;\nTypeComparator.prototype.visitTimeMicrosecond = compareTime;\nTypeComparator.prototype.visitTimeNanosecond = compareTime;\nTypeComparator.prototype.visitDecimal = compareAny;\nTypeComparator.prototype.visitList = compareList;\nTypeComparator.prototype.visitStruct = compareStruct;\nTypeComparator.prototype.visitUnion = compareUnion;\nTypeComparator.prototype.visitDenseUnion = compareUnion;\nTypeComparator.prototype.visitSparseUnion = compareUnion;\nTypeComparator.prototype.visitDictionary = compareDictionary;\nTypeComparator.prototype.visitInterval = compareInterval;\nTypeComparator.prototype.visitIntervalDayTime = compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth = compareInterval;\nTypeComparator.prototype.visitFixedSizeList = compareFixedSizeList;\nTypeComparator.prototype.visitMap = compareMap;\n/** @ignore */\nexport const instance = new TypeComparator();\n\n//# sourceMappingURL=typecomparator.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { instance as comparer } from './visitor/typecomparator';\nimport { Type, Precision, UnionMode, DateUnit, TimeUnit, IntervalUnit } from './enum';\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport class DataType {\n    /** @nocollapse */ static isNull(x) { return x && x.typeId === Type.Null; }\n    /** @nocollapse */ static isInt(x) { return x && x.typeId === Type.Int; }\n    /** @nocollapse */ static isFloat(x) { return x && x.typeId === Type.Float; }\n    /** @nocollapse */ static isBinary(x) { return x && x.typeId === Type.Binary; }\n    /** @nocollapse */ static isUtf8(x) { return x && x.typeId === Type.Utf8; }\n    /** @nocollapse */ static isBool(x) { return x && x.typeId === Type.Bool; }\n    /** @nocollapse */ static isDecimal(x) { return x && x.typeId === Type.Decimal; }\n    /** @nocollapse */ static isDate(x) { return x && x.typeId === Type.Date; }\n    /** @nocollapse */ static isTime(x) { return x && x.typeId === Type.Time; }\n    /** @nocollapse */ static isTimestamp(x) { return x && x.typeId === Type.Timestamp; }\n    /** @nocollapse */ static isInterval(x) { return x && x.typeId === Type.Interval; }\n    /** @nocollapse */ static isList(x) { return x && x.typeId === Type.List; }\n    /** @nocollapse */ static isStruct(x) { return x && x.typeId === Type.Struct; }\n    /** @nocollapse */ static isUnion(x) { return x && x.typeId === Type.Union; }\n    /** @nocollapse */ static isFixedSizeBinary(x) { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static isFixedSizeList(x) { return x && x.typeId === Type.FixedSizeList; }\n    /** @nocollapse */ static isMap(x) { return x && x.typeId === Type.Map; }\n    /** @nocollapse */ static isDictionary(x) { return x && x.typeId === Type.Dictionary; }\n    get typeId() { return Type.NONE; }\n    compareTo(other) {\n        return comparer.visit(this, other);\n    }\n}\nDataType[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.ArrayType = Array;\n    return proto[Symbol.toStringTag] = 'DataType';\n})(DataType.prototype);\n/** @ignore */\nexport class Null extends DataType {\n    toString() { return `Null`; }\n    get typeId() { return Type.Null; }\n}\nNull[Symbol.toStringTag] = ((proto) => {\n    return proto[Symbol.toStringTag] = 'Null';\n})(Null.prototype);\n/** @ignore */\nclass Int_ extends DataType {\n    constructor(isSigned, bitWidth) {\n        super();\n        this.isSigned = isSigned;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return Type.Int; }\n    get ArrayType() {\n        switch (this.bitWidth) {\n            case 8: return this.isSigned ? Int8Array : Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n}\nInt_[Symbol.toStringTag] = ((proto) => {\n    proto.isSigned = null;\n    proto.bitWidth = null;\n    return proto[Symbol.toStringTag] = 'Int';\n})(Int_.prototype);\nexport { Int_ as Int };\n/** @ignore */\nexport class Int8 extends Int_ {\n    constructor() { super(true, 8); }\n}\n/** @ignore */\nexport class Int16 extends Int_ {\n    constructor() { super(true, 16); }\n}\n/** @ignore */\nexport class Int32 extends Int_ {\n    constructor() { super(true, 32); }\n}\n/** @ignore */\nexport class Int64 extends Int_ {\n    constructor() { super(true, 64); }\n}\n/** @ignore */\nexport class Uint8 extends Int_ {\n    constructor() { super(false, 8); }\n}\n/** @ignore */\nexport class Uint16 extends Int_ {\n    constructor() { super(false, 16); }\n}\n/** @ignore */\nexport class Uint32 extends Int_ {\n    constructor() { super(false, 32); }\n}\n/** @ignore */\nexport class Uint64 extends Int_ {\n    constructor() { super(false, 64); }\n}\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n/** @ignore */\nexport class Float extends DataType {\n    constructor(precision) {\n        super();\n        this.precision = precision;\n    }\n    get typeId() { return Type.Float; }\n    get ArrayType() {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    toString() { return `Float${(this.precision << 5) || 16}`; }\n}\nFloat[Symbol.toStringTag] = ((proto) => {\n    proto.precision = null;\n    return proto[Symbol.toStringTag] = 'Float';\n})(Float.prototype);\n/** @ignore */\nexport class Float16 extends Float {\n    constructor() { super(Precision.HALF); }\n}\n/** @ignore */\nexport class Float32 extends Float {\n    constructor() { super(Precision.SINGLE); }\n}\n/** @ignore */\nexport class Float64 extends Float {\n    constructor() { super(Precision.DOUBLE); }\n}\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n/** @ignore */\nexport class Binary extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Binary; }\n    toString() { return `Binary`; }\n}\nBinary[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Binary';\n})(Binary.prototype);\n/** @ignore */\nexport class Utf8 extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Utf8; }\n    toString() { return `Utf8`; }\n}\nUtf8[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Utf8';\n})(Utf8.prototype);\n/** @ignore */\nexport class Bool extends DataType {\n    constructor() {\n        super();\n    }\n    get typeId() { return Type.Bool; }\n    toString() { return `Bool`; }\n}\nBool[Symbol.toStringTag] = ((proto) => {\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'Bool';\n})(Bool.prototype);\n/** @ignore */\nexport class Decimal extends DataType {\n    constructor(scale, precision) {\n        super();\n        this.scale = scale;\n        this.precision = precision;\n    }\n    get typeId() { return Type.Decimal; }\n    toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n}\nDecimal[Symbol.toStringTag] = ((proto) => {\n    proto.scale = null;\n    proto.precision = null;\n    proto.ArrayType = Uint32Array;\n    return proto[Symbol.toStringTag] = 'Decimal';\n})(Decimal.prototype);\n/** @ignore */\nexport class Date_ extends DataType {\n    constructor(unit) {\n        super();\n        this.unit = unit;\n    }\n    get typeId() { return Type.Date; }\n    toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n}\nDate_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Date';\n})(Date_.prototype);\n/** @ignore */\nexport class DateDay extends Date_ {\n    constructor() { super(DateUnit.DAY); }\n}\n/** @ignore */\nexport class DateMillisecond extends Date_ {\n    constructor() { super(DateUnit.MILLISECOND); }\n}\n/** @ignore */\nclass Time_ extends DataType {\n    constructor(unit, bitWidth) {\n        super();\n        this.unit = unit;\n        this.bitWidth = bitWidth;\n    }\n    get typeId() { return Type.Time; }\n    toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n}\nTime_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.bitWidth = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Time';\n})(Time_.prototype);\nexport { Time_ as Time };\n/** @ignore */\nexport class TimeSecond extends Time_ {\n    constructor() { super(TimeUnit.SECOND, 32); }\n}\n/** @ignore */\nexport class TimeMillisecond extends Time_ {\n    constructor() { super(TimeUnit.MILLISECOND, 32); }\n}\n/** @ignore */\nexport class TimeMicrosecond extends Time_ {\n    constructor() { super(TimeUnit.MICROSECOND, 64); }\n}\n/** @ignore */\nexport class TimeNanosecond extends Time_ {\n    constructor() { super(TimeUnit.NANOSECOND, 64); }\n}\n/** @ignore */\nclass Timestamp_ extends DataType {\n    constructor(unit, timezone) {\n        super();\n        this.unit = unit;\n        this.timezone = timezone;\n    }\n    get typeId() { return Type.Timestamp; }\n    toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n}\nTimestamp_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.timezone = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Timestamp';\n})(Timestamp_.prototype);\nexport { Timestamp_ as Timestamp };\n/** @ignore */\nexport class TimestampSecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.SECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MILLISECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.MICROSECOND, timezone); }\n}\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_ {\n    constructor(timezone) { super(TimeUnit.NANOSECOND, timezone); }\n}\n/** @ignore */\nclass Interval_ extends DataType {\n    constructor(unit) {\n        super();\n        this.unit = unit;\n    }\n    get typeId() { return Type.Interval; }\n    toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n}\nInterval_[Symbol.toStringTag] = ((proto) => {\n    proto.unit = null;\n    proto.ArrayType = Int32Array;\n    return proto[Symbol.toStringTag] = 'Interval';\n})(Interval_.prototype);\nexport { Interval_ as Interval };\n/** @ignore */\nexport class IntervalDayTime extends Interval_ {\n    constructor() { super(IntervalUnit.DAY_TIME); }\n}\n/** @ignore */\nexport class IntervalYearMonth extends Interval_ {\n    constructor() { super(IntervalUnit.YEAR_MONTH); }\n}\n/** @ignore */\nexport class List extends DataType {\n    constructor(child) {\n        super();\n        this.children = [child];\n    }\n    get typeId() { return Type.List; }\n    toString() { return `List<${this.valueType}>`; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n}\nList[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'List';\n})(List.prototype);\n/** @ignore */\nexport class Struct extends DataType {\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    get typeId() { return Type.Struct; }\n    toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\nStruct[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    return proto[Symbol.toStringTag] = 'Struct';\n})(Struct.prototype);\n/** @ignore */\nclass Union_ extends DataType {\n    constructor(mode, typeIds, children) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null));\n    }\n    get typeId() { return Type.Union; }\n    toString() {\n        return `${this[Symbol.toStringTag]}<${this.children.map((x) => `${x.type}`).join(` | `)}>`;\n    }\n}\nUnion_[Symbol.toStringTag] = ((proto) => {\n    proto.mode = null;\n    proto.typeIds = null;\n    proto.children = null;\n    proto.typeIdToChildIndex = null;\n    proto.ArrayType = Int8Array;\n    return proto[Symbol.toStringTag] = 'Union';\n})(Union_.prototype);\nexport { Union_ as Union };\n/** @ignore */\nexport class DenseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n/** @ignore */\nexport class SparseUnion extends Union_ {\n    constructor(typeIds, children) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n/** @ignore */\nexport class FixedSizeBinary extends DataType {\n    constructor(byteWidth) {\n        super();\n        this.byteWidth = byteWidth;\n    }\n    get typeId() { return Type.FixedSizeBinary; }\n    toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n}\nFixedSizeBinary[Symbol.toStringTag] = ((proto) => {\n    proto.byteWidth = null;\n    proto.ArrayType = Uint8Array;\n    return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n})(FixedSizeBinary.prototype);\n/** @ignore */\nexport class FixedSizeList extends DataType {\n    constructor(listSize, child) {\n        super();\n        this.listSize = listSize;\n        this.children = [child];\n    }\n    get typeId() { return Type.FixedSizeList; }\n    get valueType() { return this.children[0].type; }\n    get valueField() { return this.children[0]; }\n    get ArrayType() { return this.valueType.ArrayType; }\n    toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n}\nFixedSizeList[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.listSize = null;\n    return proto[Symbol.toStringTag] = 'FixedSizeList';\n})(FixedSizeList.prototype);\n/** @ignore */\nexport class Map_ extends DataType {\n    constructor(child, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    get typeId() { return Type.Map; }\n    get keyType() { return this.children[0].type.children[0].type; }\n    get valueType() { return this.children[0].type.children[1].type; }\n    toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n}\nMap_[Symbol.toStringTag] = ((proto) => {\n    proto.children = null;\n    proto.keysSorted = null;\n    return proto[Symbol.toStringTag] = 'Map_';\n})(Map_.prototype);\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n/** @ignore */\nexport class Dictionary extends DataType {\n    constructor(dictionary, indices, id, isOrdered) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    get typeId() { return Type.Dictionary; }\n    get children() { return this.dictionary.children; }\n    get valueType() { return this.dictionary; }\n    get ArrayType() { return this.dictionary.ArrayType; }\n    toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n}\nDictionary[Symbol.toStringTag] = ((proto) => {\n    proto.id = null;\n    proto.indices = null;\n    proto.isOrdered = null;\n    proto.dictionary = null;\n    return proto[Symbol.toStringTag] = 'Dictionary';\n})(Dictionary.prototype);\n/** @ignore */\nexport function strideForType(type) {\n    let t = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + t.unit;\n        case Type.Interval: return 1 + t.unit;\n        case Type.Int: return 1 + +(t.bitWidth > 32);\n        case Type.Time: return 1 + +(t.bitWidth > 32);\n        case Type.FixedSizeList: return t.listSize;\n        case Type.FixedSizeBinary: return t.byteWidth;\n        default: return 1;\n    }\n}\n\n//# sourceMappingURL=type.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\n/** @ignore */ export const kUnknownNullCount = -1;\n/** @ignore */\nexport class Data {\n    constructor(type, offset, length, nullCount, buffers, childData, dictionary) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data);\n        let buffer;\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        }\n        else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = buffers[0]) && (this.valueOffsets = buffer);\n                (buffer = buffers[1]) && (this.values = buffer);\n                (buffer = buffers[2]) && (this.nullBitmap = buffer);\n                (buffer = buffers[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n    get typeId() { return this.type.typeId; }\n    get ArrayType() { return this.type.ArrayType; }\n    get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds];\n    }\n    get byteLength() {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values && (byteLength += values.byteLength);\n        nullBitmap && (byteLength += nullBitmap.byteLength);\n        typeIds && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n    get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n    clone(type, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers = this, childData = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n    slice(offset, length) {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone(this.type, this.offset + offset, length, nullCount, buffers, \n        // Don't slice children if we have value offsets (the variable-width types)\n        (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n    _changeLengthAndBackfillNullBitmap(newLength) {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n    _sliceBuffers(offset, length, stride, typeId) {\n        let arr, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n            // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n            (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n    _sliceChildren(childData, offset, length) {\n        return childData.map((child) => child.slice(offset, length));\n    }\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    static new(type, offset, length, nullCount, buffers, childData, dictionary) {\n        if (buffers instanceof Data) {\n            buffers = buffers.buffers;\n        }\n        else if (!buffers) {\n            buffers = [];\n        }\n        switch (type.typeId) {\n            case Type.Null: return Data.Null(type, offset, length);\n            case Type.Int: return Data.Int(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Dictionary: return Data.Dictionary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary);\n            case Type.Float: return Data.Float(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Bool: return Data.Bool(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Decimal: return Data.Decimal(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Date: return Data.Date(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Time: return Data.Time(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Timestamp: return Data.Timestamp(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Interval: return Data.Interval(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.FixedSizeBinary: return Data.FixedSizeBinary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []);\n            case Type.Binary: return Data.Binary(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []);\n            case Type.Utf8: return Data.Utf8(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []);\n            case Type.List: return Data.List(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]);\n            case Type.FixedSizeList: return Data.FixedSizeList(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]);\n            case Type.Struct: return Data.Struct(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []);\n            case Type.Map: return Data.Map(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]);\n            case Type.Union: return Data.Union(type, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData);\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n    /** @nocollapse */\n    static Null(type, offset, length) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    static Int(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Dictionary(type, offset, length, nullCount, nullBitmap, data, dictionary) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    static Float(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Bool(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Decimal(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Date(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Time(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Timestamp(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Interval(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static FixedSizeBinary(type, offset, length, nullCount, nullBitmap, data) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Binary(type, offset, length, nullCount, nullBitmap, valueOffsets, data) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static Utf8(type, offset, length, nullCount, nullBitmap, valueOffsets, data) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    static List(type, offset, length, nullCount, nullBitmap, valueOffsets, child) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static FixedSizeList(type, offset, length, nullCount, nullBitmap, child) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static Struct(type, offset, length, nullCount, nullBitmap, children) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    static Map(type, offset, length, nullCount, nullBitmap, valueOffsets, child) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    static Union(type, offset, length, nullCount, nullBitmap, typeIds, valueOffsetsOrChildren, children) {\n        const buffers = [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ];\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\nData.prototype.childData = Object.freeze([]);\n\n//# sourceMappingURL=data.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */ const undf = void (0);\n/** @ignore */\nexport function valueToString(x) {\n    if (x === null) {\n        return 'null';\n    }\n    if (x === undf) {\n        return 'undefined';\n    }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n\n//# sourceMappingURL=pretty.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction(nullValues) {\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value) { return true; };\n    }\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n    return new Function(`x`, `${fnBody}\\nreturn true;`);\n}\n/** @ignore */\nfunction valueToCase(x) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    }\n    else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n\n//# sourceMappingURL=valid.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len, BPE) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = (arr, len = 0) => (arr.length >= len ? arr.subarray(0, len) : memcpy(new arr.constructor(len), arr, 0));\n/** @ignore */\nexport class BufferBuilder {\n    constructor(buffer, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n    get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    get reservedLength() { return this.buffer.length / this.stride; }\n    get reservedByteLength() { return this.buffer.byteLength; }\n    // @ts-ignore\n    set(index, value) { return this; }\n    append(value) { return this.set(this.length, value); }\n    reserve(extra) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT));\n            }\n        }\n        return this;\n    }\n    flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    _resize(newLength) {\n        return this.buffer = memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\nBufferBuilder.prototype.offset = 0;\n/** @ignore */\nexport class DataBufferBuilder extends BufferBuilder {\n    last() { return this.get(this.length - 1); }\n    get(index) { return this.buffer[index]; }\n    set(index, value) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder {\n    constructor(data = new Uint8Array(0)) {\n        super(data, 1 / 8);\n        this.numValid = 0;\n    }\n    get numInvalid() { return this.length - this.numValid; }\n    get(idx) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    set(idx, val) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |= (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    append(value) {\n        return this.set(this.length - 1, value);\n    }\n    set(index, value) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n/** @ignore */\nexport class WideBufferBuilder extends BufferBuilder {\n    get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    set(index, value) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint':\n                this.buffer64[index] = value;\n                break;\n            case 'number':\n                this.buffer[index * this.stride] = value;\n                break;\n            default: this.buffer.set(value, index * this.stride);\n        }\n        return this;\n    }\n    _resize(newLength) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n\n//# sourceMappingURL=buffer.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport { strideForType } from './type';\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport class Builder {\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }) {\n        /**\n         * The number of values written to the `Builder` that haven't been flushed yet.\n         * @readonly\n         */\n        this.length = 0;\n        /**\n         * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n         * @readonly\n         */\n        this.finished = false;\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    static new(options) { }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughDOM(options) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    static throughIterable(options) {\n        return throughIterable(options);\n    }\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    static throughAsyncIterable(options) {\n        return throughAsyncIterable(options);\n    }\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    toVector() { return Vector.new(this.flush()); }\n    get ArrayType() { return this.type.ArrayType; }\n    get nullCount() { return this._nulls.numInvalid; }\n    get numChildren() { return this.children.length; }\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    get byteLength() {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    get reservedLength() {\n        return this._nulls.reservedLength;\n    }\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    get reservedByteLength() {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n    get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n    get values() { return this._values ? this._values.buffer : null; }\n    get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n    get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    append(value) { return this.set(this.length, value); }\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    isValid(value) { return this._isValid(value); }\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    set(index, value) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    setValue(index, value) { this._setValue(this, index, value); }\n    setValid(index, valid) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n    // @ts-ignore\n    addChild(child, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    getChildAt(index) {\n        return this.children[index] || null;\n    }\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    flush() {\n        const buffers = [];\n        const values = this._values;\n        const offsets = this._offsets;\n        const typeIds = this._typeIds;\n        const { length, nullCount } = this;\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        }\n        else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        }\n        else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n        const data = Data.new(this.type, 0, length, nullCount, buffers, this.children.map((child) => child.flush()));\n        this.clear();\n        return data;\n    }\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\nBuilder.prototype.length = 1;\nBuilder.prototype.stride = 1;\nBuilder.prototype.children = null;\nBuilder.prototype.finished = false;\nBuilder.prototype.nullValues = null;\nBuilder.prototype._isValid = () => true;\n/** @ignore */\nexport class FixedWidthBuilder extends Builder {\n    constructor(opts) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    setValue(index, value) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n/** @ignore */\nexport class VariableWidthBuilder extends Builder {\n    constructor(opts) {\n        super(opts);\n        this._pendingLength = 0;\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    setValue(index, value) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    setValid(index, isValid) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    flush() {\n        this._flush();\n        return super.flush();\n    }\n    finish() {\n        this._flush();\n        return super.finish();\n    }\n    _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n}\n/** @ignore */\nfunction throughIterable(options) {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function* (source) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n/** @ignore */\nfunction throughAsyncIterable(options) {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n//# sourceMappingURL=builder.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder } from '../builder';\n/** @ignore */\nexport class BoolBuilder extends Builder {\n    constructor(options) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    setValue(index, value) {\n        this._values.set(index, +value);\n    }\n}\n\n//# sourceMappingURL=bool.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Builder } from '../builder';\n/** @ignore */\nexport class NullBuilder extends Builder {\n    // @ts-ignore\n    setValue(index, value) { }\n    setValid(index, valid) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n\n//# sourceMappingURL=null.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class DateBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class DateDayBuilder extends DateBuilder {\n}\n/** @ignore */\nexport class DateMillisecondBuilder extends DateBuilder {\n}\n\n//# sourceMappingURL=date.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class DecimalBuilder extends FixedWidthBuilder {\n}\n\n//# sourceMappingURL=decimal.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Dictionary } from '../type';\nimport { Builder } from '../builder';\n/** @ignore */\nexport class DictionaryBuilder extends Builder {\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) });\n        this._nulls = null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls });\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null });\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n    get values() { return this.indices.values; }\n    get nullCount() { return this.indices.nullCount; }\n    get nullBitmap() { return this.indices.nullBitmap; }\n    get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    isValid(value) { return this.indices.isValid(value); }\n    setValid(index, valid) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    setValue(index, value) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary;\n        this.clear();\n        return data;\n    }\n    finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    valueToKey(val) {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n\n//# sourceMappingURL=dictionary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class FixedSizeBinaryBuilder extends FixedWidthBuilder {\n}\n\n//# sourceMappingURL=fixedsizebinary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d) {\n    if (d !== d) {\n        return 0x7E00;\n    } // NaN\n    f64[0] = d;\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        }\n        else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    }\n    else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    }\n    else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n    return sign | expo | sigf & 0xFFFF;\n}\n\n//# sourceMappingURL=math.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class FloatBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class Float16Builder extends FloatBuilder {\n    setValue(index, value) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n/** @ignore */\nexport class Float32Builder extends FloatBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\n/** @ignore */\nexport class Float64Builder extends FloatBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\n\n//# sourceMappingURL=float.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toArrayBufferView } from './buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n/** @ignore */\nfunction BigNum(x, ...xs) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function () { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function () { return bignumToNumber(this); };\nBigNum.prototype.toString = function () { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function (hint = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n/** @ignore */\nfunction SignedBigNum(...args) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(...args) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(...args) { return BigNum.apply(this, args); }\nObject.setPrototypeOf(SignedBigNum.prototype, Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype, BigNum.prototype, { 'constructor': SignedBigNum, 'signed': true, 'TypedArray': Int32Array, 'BigIntArray': BigInt64Array });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype, BigNum.prototype, { 'constructor': DecimalBigNum, 'signed': true, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n/** @ignore */\nfunction bignumToNumber(bn) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n/** @ignore */\nexport let bignumToString;\n/** @ignore */\nexport let bignumToBigInt;\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = bignumToString;\n}\nelse {\n    bignumToBigInt = ((a) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : decimalToString(a));\n    bignumToString = ((a) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n/** @ignore */\nfunction decimalToString(a) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n/** @ignore */\nexport class BN {\n    constructor(num, isSigned) {\n        return BN.new(num, isSigned);\n    }\n    /** @nocollapse */\n    static new(num, isSigned) {\n        switch (isSigned) {\n            case true: return new SignedBigNum(num);\n            case false: return new UnsignedBigNum(num);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new SignedBigNum(num);\n        }\n        if (num.byteLength === 16) {\n            return new DecimalBigNum(num);\n        }\n        return new UnsignedBigNum(num);\n    }\n    /** @nocollapse */\n    static signed(num) {\n        return new SignedBigNum(num);\n    }\n    /** @nocollapse */\n    static unsigned(num) {\n        return new UnsignedBigNum(num);\n    }\n    /** @nocollapse */\n    static decimal(num) {\n        return new DecimalBigNum(num);\n    }\n}\n\n//# sourceMappingURL=bn.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class IntBuilder extends FixedWidthBuilder {\n    setValue(index, value) {\n        this._values.set(index, value);\n    }\n}\n/** @ignore */\nexport class Int8Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Int16Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Int32Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Int64Builder extends IntBuilder {\n    constructor(options) {\n        if (options['nullValues']) {\n            options['nullValues'] = options['nullValues'].map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    get values64() { return this._values.buffer64; }\n    isValid(value) { return super.isValid(toBigInt(value)); }\n}\n/** @ignore */\nexport class Uint8Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Uint16Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Uint32Builder extends IntBuilder {\n}\n/** @ignore */\nexport class Uint64Builder extends IntBuilder {\n    constructor(options) {\n        if (options['nullValues']) {\n            options['nullValues'] = options['nullValues'].map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    get values64() { return this._values.buffer64; }\n    isValid(value) { return super.isValid(toBigInt(value)); }\n}\nconst toBigInt = ((memo) => (value) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n\n//# sourceMappingURL=int.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class TimeBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class TimeSecondBuilder extends TimeBuilder {\n}\n/** @ignore */\nexport class TimeMillisecondBuilder extends TimeBuilder {\n}\n/** @ignore */\nexport class TimeMicrosecondBuilder extends TimeBuilder {\n}\n/** @ignore */\nexport class TimeNanosecondBuilder extends TimeBuilder {\n}\n\n//# sourceMappingURL=time.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class TimestampBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class TimestampSecondBuilder extends TimestampBuilder {\n}\n/** @ignore */\nexport class TimestampMillisecondBuilder extends TimestampBuilder {\n}\n/** @ignore */\nexport class TimestampMicrosecondBuilder extends TimestampBuilder {\n}\n/** @ignore */\nexport class TimestampNanosecondBuilder extends TimestampBuilder {\n}\n\n//# sourceMappingURL=timestamp.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\nexport class IntervalBuilder extends FixedWidthBuilder {\n}\n/** @ignore */\nexport class IntervalDayTimeBuilder extends IntervalBuilder {\n}\n/** @ignore */\nexport class IntervalYearMonthBuilder extends IntervalBuilder {\n}\n\n//# sourceMappingURL=interval.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class BinaryBuilder extends VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    get byteLength() {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    setValue(index, value) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    _flushPending(pending, pendingLength) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=binary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class Utf8Builder extends VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    get byteLength() {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    setValue(index, value) {\n        return super.setValue(index, encodeUtf8(value));\n    }\n    // @ts-ignore\n    _flushPending(pending, pendingLength) { }\n}\nUtf8Builder.prototype._flushPending = BinaryBuilder.prototype._flushPending;\n\n//# sourceMappingURL=utf8.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\n/** @ignore */\nexport class Run {\n    get length() { return this._values.length; }\n    get(index) { return this._values[index]; }\n    clear() { this._values = null; return this; }\n    bind(values) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this;\n    }\n}\n\n//# sourceMappingURL=run.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty';\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\nclass Row {\n    constructor(parent, numKeys) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n    entries() { return this[Symbol.iterator](); }\n    has(key) { return this.get(key) !== undefined; }\n    get(key) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n            else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n    set(key, val) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n    clear() { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n    delete(_) { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n    *[Symbol.iterator]() {\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v, k, m) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n        for (let k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n    toArray() { return [...this.values()]; }\n    toJSON() {\n        const obj = {};\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n    inspect() { return this.toString(); }\n    [kCustomInspect]() { return this.toString(); }\n    toString() {\n        const str = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n}\nRow[Symbol.toStringTag] = ((proto) => {\n    Object.defineProperties(proto, {\n        'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n        [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n        [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n    });\n    return proto[Symbol.toStringTag] = 'Row';\n})(Row.prototype);\nexport class MapRow extends Row {\n    constructor(slice) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    keys() {\n        return this[kParent].getChildAt(0)[Symbol.iterator]();\n    }\n    values() {\n        return this[kParent].getChildAt(1)[Symbol.iterator]();\n    }\n    getKey(idx) {\n        return this[kParent].getChildAt(0).get(idx);\n    }\n    getIndex(key) {\n        return this[kParent].getChildAt(0).indexOf(key);\n    }\n    getValue(index) {\n        return this[kParent].getChildAt(1).get(index);\n    }\n    setValue(index, value) {\n        this[kParent].getChildAt(1).set(index, value);\n    }\n}\nexport class StructRow extends Row {\n    constructor(parent) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name;\n        }\n    }\n    *values() {\n        for (const field of this[kParent].type.children) {\n            yield this[field.name];\n        }\n    }\n    getKey(idx) {\n        return this[kParent].type.children[idx].name;\n    }\n    getIndex(key) {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    getValue(index) {\n        return this[kParent].getChildAt(index).get(this[kRowIndex]);\n    }\n    setValue(index, value) {\n        return this[kParent].getChildAt(index).set(this[kRowIndex], value);\n    }\n}\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null, set: null };\n    return (row) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key) => function () { return this.get(key); };\n        const setter = (key) => function (val) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row, key) {\n            switch (key) {\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row, key, receiver) {\n            switch (key) {\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row, key, val, receiver) {\n            switch (key) {\n                case kParent:\n                case kRowIndex:\n                case kIdxToVal:\n                case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey':\n                case 'getIndex':\n                case 'getValue':\n                case 'setValue':\n                case 'toArray':\n                case 'toJSON':\n                case 'inspect':\n                case 'constructor':\n                case 'isPrototypeOf':\n                case 'propertyIsEnumerable':\n                case 'toString':\n                case 'toLocaleString':\n                case 'valueOf':\n                case 'size':\n                case 'has':\n                case 'get':\n                case 'set':\n                case 'clear':\n                case 'delete':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                case 'forEach':\n                case '__proto__':\n                case '__defineGetter__':\n                case '__defineSetter__':\n                case 'hasOwnProperty':\n                case '__lookupGetter__':\n                case '__lookupSetter__':\n                case Symbol.iterator:\n                case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return (row) => new Proxy(row, RowProxyHandler);\n})();\n\n//# sourceMappingURL=row.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n/** @ignore */\nexport function clampIndex(source, index, then) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n/** @ignore */\nlet tmp;\n/** @ignore */\nexport function clampRange(source, begin, end, then) {\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n    // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value) => value !== value;\n/** @ignore */\nexport function createElementComparator(search) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value) => value === search\n            : (value) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) {\n        return creatMapComparator(search);\n    }\n    // Compare Array-likes\n    if (Array.isArray(search)) {\n        return createArrayLikeComparator(search);\n    }\n    // Compare Vectors\n    if (search instanceof Vector) {\n        return createVectorComparator(search);\n    }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n/** @ignore */\nfunction createArrayLikeComparator(lhs) {\n    const comparators = [];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction creatMapComparator(lhs) {\n    let i = -1;\n    const comparators = [];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createVectorComparator(lhs) {\n    const comparators = [];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createObjectComparator(lhs) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) {\n        return () => false;\n    }\n    const comparators = [];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\nfunction createSubElementsComparator(comparators, keys) {\n    return (rhs) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\nfunction compareArray(comparators, arr) {\n    const n = comparators.length;\n    if (arr.length !== n) {\n        return false;\n    }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareVector(comparators, vec) {\n    const n = comparators.length;\n    if (vec.length !== n) {\n        return false;\n    }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareObject(comparators, obj, keys) {\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done; ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n\n//# sourceMappingURL=vector.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { clampRange } from '../util/vector';\nimport { DataType } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { AbstractVector, Vector } from '../vector';\n/** @ignore */\nexport class Chunked extends AbstractVector {\n    constructor(type, chunks = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._nullCount = -1;\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n    /** @nocollapse */\n    static flatten(...vectors) {\n        return selectChunkArgs(Vector, vectors);\n    }\n    /** @nocollapse */\n    static concat(...vectors) {\n        const chunks = Chunked.flatten(...vectors);\n        return new Chunked(chunks[0].type, chunks);\n    }\n    get type() { return this._type; }\n    get length() { return this._length; }\n    get chunks() { return this._chunks; }\n    get typeId() { return this._type.typeId; }\n    get VectorName() { return `Chunked<${this._type}>`; }\n    get data() {\n        return this._chunks[0] ? this._chunks[0].data : null;\n    }\n    get ArrayType() { return this._type.ArrayType; }\n    get numChildren() { return this._numChildren; }\n    get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    get byteLength() {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n    get indices() {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = this._chunks;\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices)));\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    get dictionary() {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary;\n        }\n        return null;\n    }\n    *[Symbol.iterator]() {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n    clone(chunks = this._chunks) {\n        return new Chunked(this._type, chunks);\n    }\n    concat(...others) {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n    slice(begin, end) {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this._numChildren) {\n            return null;\n        }\n        let columns = this._children || (this._children = []);\n        let child, field, chunks;\n        if (child = columns[index]) {\n            return child;\n        }\n        if (field = (this._type.children || [])[index]) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked(field.type, chunks));\n            }\n        }\n        return null;\n    }\n    search(index, then) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0) {\n            return null;\n        }\n        if (idx >= offsets[rhs]) {\n            return null;\n        }\n        if (rhs <= 1) {\n            return then ? then(this, 0, idx) : [0, idx];\n        }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n    isValid(index) {\n        return !!this.search(index, this.isValidInternal);\n    }\n    get(index) {\n        return this.search(index, this.getInternal);\n    }\n    set(index, value) {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n    indexOf(element, offset) {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element));\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n    toArray() {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType = this._type.ArrayType;\n        if (n <= 0) {\n            return new ArrayType(0);\n        }\n        if (n <= 1) {\n            return chunks[0].toArray();\n        }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n    getInternal({ _chunks }, i, j) { return _chunks[i].get(j); }\n    isValidInternal({ _chunks }, i, j) { return _chunks[i].isValid(j); }\n    indexOfInternal({ _chunks }, chunkIndex, fromIndex, element) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n    _sliceInternal(self, begin, end) {\n        const slices = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) {\n                break;\n            }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) {\n                continue;\n            }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to));\n        }\n        return self.clone(slices);\n    }\n}\n/** @ignore */\nfunction calculateOffsets(vectors) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n/** @ignore */\nconst typedSet = (src, dst, offset) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n/** @ignore */\nconst arraySet = (src, dst, offset) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n//# sourceMappingURL=chunked.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from './schema';\nimport { Vector } from './vector';\nimport { Chunked } from './vector/chunked';\nexport class Column extends Chunked {\n    constructor(field, vectors = [], offsets) {\n        vectors = Chunked.flatten(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n    /** @nocollapse */\n    static new(field, data, ...rest) {\n        const chunks = Chunked.flatten(Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n                [Vector.new(data, ...rest)]);\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        }\n        else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n    get field() { return this._field; }\n    get name() { return this._field.name; }\n    get nullable() { return this._field.nullable; }\n    get metadata() { return this._field.metadata; }\n    clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this.numChildren) {\n            return null;\n        }\n        let columns = this._children || (this._children = []);\n        let column, field, chunks;\n        if (column = columns[index]) {\n            return column;\n        }\n        if (field = (this.type.children || [])[index]) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column(field, chunks));\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass SingleChunkColumn extends Column {\n    constructor(field, vector, offsets) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    search(index, then) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    isValid(index) {\n        return this._chunk.isValid(index);\n    }\n    get(index) {\n        return this._chunk.get(index);\n    }\n    set(index, value) {\n        this._chunk.set(index, value);\n    }\n    indexOf(element, offset) {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n\n//# sourceMappingURL=column.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\nconst isArray = Array.isArray;\n/** @ignore */\nexport const selectArgs = (Ctor, vals) => _selectArgs(Ctor, vals, [], 0);\n/** @ignore */\nexport const selectColumnArgs = (args) => {\n    const [fields, values] = _selectFieldArgs(args, [[], []]);\n    return values.map((x, i) => x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) :\n            Column.new(fields[i], []));\n};\n/** @ignore */\nexport const selectFieldArgs = (args) => _selectFieldArgs(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = (Ctor, vals) => _selectChunkArgs(Ctor, vals, [], 0);\n/** @ignore */\nexport const selectVectorChildrenArgs = (Ctor, vals) => _selectVectorChildrenArgs(Ctor, vals, [], 0);\n/** @ignore */\nexport const selectColumnChildrenArgs = (Ctor, vals) => _selectColumnChildrenArgs(Ctor, vals, [], 0);\n/** @ignore */\nfunction _selectArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectChunkArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectVectorChildrenArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)), res, j).length;\n        }\n        else if (value instanceof Vector) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nfunction _selectColumnChildrenArgs(Ctor, vals, res, idx) {\n    let value, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        }\n        else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i))), res, j).length;\n        }\n        else if (value instanceof Column) {\n            res[j++] = value;\n        }\n    }\n    return res;\n}\n/** @ignore */\nconst toKeysAndValues = (xs, [k, v], i) => (xs[0][i] = k, xs[1][i] = v, xs);\n/** @ignore */\nfunction _selectFieldArgs(vals, ret) {\n    let keys, n;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) {\n                return ret;\n            }\n            if (isArray(vals[0])) {\n                return _selectFieldArgs(vals[0], ret);\n            }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field;\n    let val;\n    let [fields, values] = ret;\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        }\n        else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val, true);\n            }\n            else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val));\n                fields[++fieldIndex] = Field.new(field, val.type, true);\n            }\n        }\n    }\n    return ret;\n}\n\n//# sourceMappingURL=args.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\nexport class Schema {\n    constructor(fields = [], metadata, dictionaries) {\n        this.fields = (fields || []);\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    /** @nocollapse */\n    static from(...args) {\n        return Schema.new(args[0], args[1]);\n    }\n    /** @nocollapse */\n    static new(...args) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n    get [Symbol.toStringTag]() { return 'Schema'; }\n    toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n    compareTo(other) {\n        return comparer.compareSchemas(this, other);\n    }\n    select(...columnNames) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    selectAt(...columnIndices) {\n        return new Schema(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n    assign(...args) {\n        const other = args[0] instanceof Schema ? args[0]\n            : new Schema(selectArgs(Field, args));\n        const curFields = [...this.fields];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        });\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n        return new Schema([...curFields, ...newFields], metadata, new Map([...this.dictionaries, ...newDictionaries]));\n    }\n}\nexport class Field {\n    constructor(name, type, nullable = false, metadata) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n    /** @nocollapse */\n    static new(...args) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field(`${name}`, type, nullable, metadata);\n    }\n    get typeId() { return this.type.typeId; }\n    get [Symbol.toStringTag]() { return 'Field'; }\n    toString() { return `${this.name}: ${this.type}`; }\n    compareTo(other) {\n        return comparer.compareField(this, other);\n    }\n    clone(...args) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({ name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata } = args[0]);\n        return Field.new(name, type, nullable, metadata);\n    }\n}\n/** @ignore */\nfunction mergeMaps(m1, m2) {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n/** @ignore */\nfunction generateDictionaryMap(fields, dictionaries = new Map()) {\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            }\n            else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n    return dictionaries;\n}\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\nSchema.prototype.fields = null;\nSchema.prototype.metadata = null;\nSchema.prototype.dictionaries = null;\nField.prototype.type = null;\nField.prototype.name = null;\nField.prototype.nullable = null;\nField.prototype.metadata = null;\n\n//# sourceMappingURL=schema.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class ListBuilder extends VariableWidthBuilder {\n    constructor(opts) {\n        super(opts);\n        this._run = new Run();\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    addChild(child, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    _flushPending(pending) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n\n//# sourceMappingURL=list.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { FixedSizeList } from '../type';\n/** @ignore */\nexport class FixedSizeListBuilder extends Builder {\n    constructor() {\n        super(...arguments);\n        this._run = new Run();\n    }\n    setValue(index, value) {\n        super.setValue(index, this._run.bind(value));\n    }\n    addChild(child, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n\n//# sourceMappingURL=fixedsizelist.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { Map_ } from '../type';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\nexport class MapBuilder extends VariableWidthBuilder {\n    set(index, value) {\n        return super.set(index, value);\n    }\n    setValue(index, value) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n    addChild(child, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n    _flushPending(pending) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            }\n            else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n\n//# sourceMappingURL=map.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { Struct } from '../type';\n/** @ignore */\nexport class StructBuilder extends Builder {\n    addChild(child, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n\n//# sourceMappingURL=struct.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder } from '../builder';\nimport { Union } from '../type';\n/** @ignore */\nexport class UnionBuilder extends Builder {\n    constructor(options) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n    get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n    append(value, childTypeId) {\n        return this.set(this.length, value, childTypeId);\n    }\n    set(index, value, childTypeId) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n    // @ts-ignore\n    setValue(index, value, childTypeId) {\n        this._typeIds.set(index, childTypeId);\n        super.setValue(index, value);\n    }\n    // @ts-ignore\n    addChild(child, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n    /** @ignore */\n    // @ts-ignore\n    _valueToChildTypeId(builder, value, offset) {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n/** @ignore */\nexport class SparseUnionBuilder extends UnionBuilder {\n}\n/** @ignore */\nexport class DenseUnionBuilder extends UnionBuilder {\n    constructor(options) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n    /** @ignore */\n    setValue(index, value, childTypeId) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId];\n        this._offsets.set(index, this.getChildAt(childIndex).length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n\n//# sourceMappingURL=union.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\n/** @ignore */\nexport class SetVisitor extends Visitor {\n}\n/** @ignore */\nconst setEpochMsToDays = (data, index, epochMs) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data, index, epochMs) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data, index, epochMs) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data, index, epochMs) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setVariableWidthBytes = (values, valueOffsets, index, value) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n/** @ignore */\nconst setBool = ({ offset, values }, index, val) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |= (1 << (idx % 8))) // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n};\n/** @ignore */\nconst setDateDay = ({ values }, index, value) => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = ({ values }, index, value) => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric = ({ stride, values }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16 = ({ stride, values }, index, value) => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2 = (vector, index, value) => {\n    switch (typeof value) {\n        case 'bigint':\n            vector.values64[index] = value;\n            break;\n        case 'number':\n            vector.values[index * vector.stride] = value;\n            break;\n        default:\n            const val = value;\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = ({ stride, values }, index, value) => { values.set(value.subarray(0, stride), stride * index); };\n/** @ignore */\nconst setBinary = ({ values, valueOffsets }, index, value) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = ({ values, valueOffsets }, index, value) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = (vector, index, value) => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector, index, value)\n        : setNumericX2(vector, index, value);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = (vector, index, value) => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector, index, value)\n        : setFloat16(vector, index, value);\n};\n/* istanbul ignore next */\nconst setDate = (vector, index, value) => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector, index, value)\n        : setDateMillisecond(vector, index, value);\n};\n/** @ignore */\nconst setTimestampSecond = ({ values }, index, value) => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = ({ values }, index, value) => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = ({ values }, index, value) => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond = ({ values }, index, value) => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp = (vector, index, value) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return setTimestampSecond(vector, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector, index, value);\n        case TimeUnit.NANOSECOND: return setTimestampNanosecond(vector, index, value);\n    }\n};\n/** @ignore */\nconst setTimeSecond = ({ values, stride }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = ({ values, stride }, index, value) => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime = (vector, index, value) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return setTimeSecond(vector, index, value);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector, index, value);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector, index, value);\n        case TimeUnit.NANOSECOND: return setTimeNanosecond(vector, index, value);\n    }\n};\n/** @ignore */\nconst setDecimal = ({ values }, index, value) => { values.set(value.subarray(0, 4), 4 * index); };\n/** @ignore */\nconst setList = (vector, index, value) => {\n    const values = vector.getChildAt(0), valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n/** @ignore */\nconst setMap = (vector, index, value) => {\n    const values = vector.getChildAt(0), valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n/** @ignore */ const _setStructArrayValue = (o, v) => (c, _, i) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o, v) => (c, _, i) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o, v) => (c, f, _) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o, v) => (c, f, _) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = (vector, index, value) => {\n    const setValue = value instanceof Map ? _setStructMapValue(index, value) :\n        value instanceof Vector ? _setStructVectorValue(index, value) :\n            Array.isArray(value) ? _setStructArrayValue(index, value) :\n                _setStructObjectValue(index, value);\n    vector.type.children.forEach((f, i) => setValue(vector.getChildAt(i), f, i));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = (vector, index, value) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector, index, value) :\n        setSparseUnion(vector, index, value);\n};\n/** @ignore */\nconst setDenseUnion = (vector, index, value) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n/** @ignore */\nconst setSparseUnion = (vector, index, value) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n/** @ignore */\nconst setDictionary = (vector, index, value) => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = (vector, index, value) => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector, index, value)\n        : setIntervalYearMonth(vector, index, value);\n};\n/** @ignore */\nconst setIntervalDayTime = ({ values }, index, value) => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = ({ values }, index, value) => { values[index] = (value[0] * 12) + (value[1] % 12); };\n/** @ignore */\nconst setFixedSizeList = (vector, index, value) => {\n    const child = vector.getChildAt(0), { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\nSetVisitor.prototype.visitBool = setBool;\nSetVisitor.prototype.visitInt = setInt;\nSetVisitor.prototype.visitInt8 = setNumeric;\nSetVisitor.prototype.visitInt16 = setNumeric;\nSetVisitor.prototype.visitInt32 = setNumeric;\nSetVisitor.prototype.visitInt64 = setNumericX2;\nSetVisitor.prototype.visitUint8 = setNumeric;\nSetVisitor.prototype.visitUint16 = setNumeric;\nSetVisitor.prototype.visitUint32 = setNumeric;\nSetVisitor.prototype.visitUint64 = setNumericX2;\nSetVisitor.prototype.visitFloat = setFloat;\nSetVisitor.prototype.visitFloat16 = setFloat16;\nSetVisitor.prototype.visitFloat32 = setNumeric;\nSetVisitor.prototype.visitFloat64 = setNumeric;\nSetVisitor.prototype.visitUtf8 = setUtf8;\nSetVisitor.prototype.visitBinary = setBinary;\nSetVisitor.prototype.visitFixedSizeBinary = setFixedSizeBinary;\nSetVisitor.prototype.visitDate = setDate;\nSetVisitor.prototype.visitDateDay = setDateDay;\nSetVisitor.prototype.visitDateMillisecond = setDateMillisecond;\nSetVisitor.prototype.visitTimestamp = setTimestamp;\nSetVisitor.prototype.visitTimestampSecond = setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond = setTimestampNanosecond;\nSetVisitor.prototype.visitTime = setTime;\nSetVisitor.prototype.visitTimeSecond = setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond = setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond = setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond = setTimeNanosecond;\nSetVisitor.prototype.visitDecimal = setDecimal;\nSetVisitor.prototype.visitList = setList;\nSetVisitor.prototype.visitStruct = setStruct;\nSetVisitor.prototype.visitUnion = setUnion;\nSetVisitor.prototype.visitDenseUnion = setDenseUnion;\nSetVisitor.prototype.visitSparseUnion = setSparseUnion;\nSetVisitor.prototype.visitDictionary = setDictionary;\nSetVisitor.prototype.visitInterval = setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime = setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth = setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList = setFixedSizeList;\nSetVisitor.prototype.visitMap = setMap;\n/** @ignore */\nexport const instance = new SetVisitor();\n\n//# sourceMappingURL=set.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    visitNull() { return NullBuilder; }\n    visitBool() { return BoolBuilder; }\n    visitInt() { return IntBuilder; }\n    visitInt8() { return Int8Builder; }\n    visitInt16() { return Int16Builder; }\n    visitInt32() { return Int32Builder; }\n    visitInt64() { return Int64Builder; }\n    visitUint8() { return Uint8Builder; }\n    visitUint16() { return Uint16Builder; }\n    visitUint32() { return Uint32Builder; }\n    visitUint64() { return Uint64Builder; }\n    visitFloat() { return FloatBuilder; }\n    visitFloat16() { return Float16Builder; }\n    visitFloat32() { return Float32Builder; }\n    visitFloat64() { return Float64Builder; }\n    visitUtf8() { return Utf8Builder; }\n    visitBinary() { return BinaryBuilder; }\n    visitFixedSizeBinary() { return FixedSizeBinaryBuilder; }\n    visitDate() { return DateBuilder; }\n    visitDateDay() { return DateDayBuilder; }\n    visitDateMillisecond() { return DateMillisecondBuilder; }\n    visitTimestamp() { return TimestampBuilder; }\n    visitTimestampSecond() { return TimestampSecondBuilder; }\n    visitTimestampMillisecond() { return TimestampMillisecondBuilder; }\n    visitTimestampMicrosecond() { return TimestampMicrosecondBuilder; }\n    visitTimestampNanosecond() { return TimestampNanosecondBuilder; }\n    visitTime() { return TimeBuilder; }\n    visitTimeSecond() { return TimeSecondBuilder; }\n    visitTimeMillisecond() { return TimeMillisecondBuilder; }\n    visitTimeMicrosecond() { return TimeMicrosecondBuilder; }\n    visitTimeNanosecond() { return TimeNanosecondBuilder; }\n    visitDecimal() { return DecimalBuilder; }\n    visitList() { return ListBuilder; }\n    visitStruct() { return StructBuilder; }\n    visitUnion() { return UnionBuilder; }\n    visitDenseUnion() { return DenseUnionBuilder; }\n    visitSparseUnion() { return SparseUnionBuilder; }\n    visitDictionary() { return DictionaryBuilder; }\n    visitInterval() { return IntervalBuilder; }\n    visitIntervalDayTime() { return IntervalDayTimeBuilder; }\n    visitIntervalYearMonth() { return IntervalYearMonthBuilder; }\n    visitFixedSizeList() { return FixedSizeListBuilder; }\n    visitMap() { return MapBuilder; }\n}\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n\n//# sourceMappingURL=builderctor.mjs.map\n","// automatically generated by the FlatBuffers compiler, do not modify\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport var org;\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Footer {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Footer\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * @param flatbuffers.ByteBuffer bb\n                     * @param Footer= obj\n                     * @returns Footer\n                     */\n                    static getRootAsFooter(bb, obj) {\n                        return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n                    }\n                    /**\n                     * @returns org.apache.arrow.flatbuf.MetadataVersion\n                     */\n                    version() {\n                        let offset = this.bb.__offset(this.bb_pos, 4);\n                        return offset ? /**  */ (this.bb.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n                    }\n                    /**\n                     * @param org.apache.arrow.flatbuf.Schema= obj\n                     * @returns org.apache.arrow.flatbuf.Schema|null\n                     */\n                    schema(obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 6);\n                        return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Block= obj\n                     * @returns org.apache.arrow.flatbuf.Block\n                     */\n                    dictionaries(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    dictionariesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 8);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param number index\n                     * @param org.apache.arrow.flatbuf.Block= obj\n                     * @returns org.apache.arrow.flatbuf.Block\n                     */\n                    recordBatches(index, obj) {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n                    }\n                    /**\n                     * @returns number\n                     */\n                    recordBatchesLength() {\n                        let offset = this.bb.__offset(this.bb_pos, 10);\n                        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     */\n                    static startFooter(builder) {\n                        builder.startObject(4);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param org.apache.arrow.flatbuf.MetadataVersion version\n                     */\n                    static addVersion(builder, version) {\n                        builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset schemaOffset\n                     */\n                    static addSchema(builder, schemaOffset) {\n                        builder.addFieldOffset(1, schemaOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset dictionariesOffset\n                     */\n                    static addDictionaries(builder, dictionariesOffset) {\n                        builder.addFieldOffset(2, dictionariesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startDictionariesVector(builder, numElems) {\n                        builder.startVector(24, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset recordBatchesOffset\n                     */\n                    static addRecordBatches(builder, recordBatchesOffset) {\n                        builder.addFieldOffset(3, recordBatchesOffset, 0);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param number numElems\n                     */\n                    static startRecordBatchesVector(builder, numElems) {\n                        builder.startVector(24, numElems, 8);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @returns flatbuffers.Offset\n                     */\n                    static endFooter(builder) {\n                        let offset = builder.endObject();\n                        return offset;\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Offset offset\n                     */\n                    static finishFooterBuffer(builder, offset) {\n                        builder.finish(offset);\n                    }\n                    static createFooter(builder, version, schemaOffset, dictionariesOffset, recordBatchesOffset) {\n                        Footer.startFooter(builder);\n                        Footer.addVersion(builder, version);\n                        Footer.addSchema(builder, schemaOffset);\n                        Footer.addDictionaries(builder, dictionariesOffset);\n                        Footer.addRecordBatches(builder, recordBatchesOffset);\n                        return Footer.endFooter(builder);\n                    }\n                }\n                flatbuf.Footer = Footer;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n(function (org) {\n    var apache;\n    (function (apache) {\n        var arrow;\n        (function (arrow) {\n            var flatbuf;\n            (function (flatbuf) {\n                class Block {\n                    constructor() {\n                        this.bb = null;\n                        this.bb_pos = 0;\n                    }\n                    /**\n                     * @param number i\n                     * @param flatbuffers.ByteBuffer bb\n                     * @returns Block\n                     */\n                    __init(i, bb) {\n                        this.bb_pos = i;\n                        this.bb = bb;\n                        return this;\n                    }\n                    /**\n                     * Index to the start of the RecordBlock (note this is past the Message header)\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    offset() {\n                        return this.bb.readInt64(this.bb_pos);\n                    }\n                    /**\n                     * Length of the metadata\n                     *\n                     * @returns number\n                     */\n                    metaDataLength() {\n                        return this.bb.readInt32(this.bb_pos + 8);\n                    }\n                    /**\n                     * Length of the data (this is aligned so there can be a gap between this and\n                     * the metatdata).\n                     *\n                     * @returns flatbuffers.Long\n                     */\n                    bodyLength() {\n                        return this.bb.readInt64(this.bb_pos + 16);\n                    }\n                    /**\n                     * @param flatbuffers.Builder builder\n                     * @param flatbuffers.Long offset\n                     * @param number metaDataLength\n                     * @param flatbuffers.Long bodyLength\n                     * @returns flatbuffers.Offset\n                     */\n                    static createBlock(builder, offset, metaDataLength, bodyLength) {\n                        builder.prep(8, 24);\n                        builder.writeInt64(bodyLength);\n                        builder.pad(4);\n                        builder.writeInt32(metaDataLength);\n                        builder.writeInt64(offset);\n                        return builder.offset();\n                    }\n                }\n                flatbuf.Block = Block;\n            })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n        })(arrow = apache.arrow || (apache.arrow = {}));\n    })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n\n//# sourceMappingURL=File.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport { Builder } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\nimport { Type } from '../enum';\nimport { Utf8Builder } from './utf8';\nimport { Builder } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n/** @nocollapse */\nBuilder.new = newBuilder;\nfunction newBuilder(options) {\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn(type)())(options);\n    if (type.children && type.children.length > 0) {\n        const children = options['children'] || [];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_, i) => children[i] || defaultOptions)\n            : (({ name }) => children[name] || defaultOptions);\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n    return builder;\n}\nObject.keys(Type)\n    .map((T) => Type[T])\n    .filter((T) => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n    const BuilderCtor = getBuilderConstructor.visit(typeId);\n    BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n});\nUtf8Builder.prototype._setValue = setVisitor.visitBinary;\n\n//# sourceMappingURL=index.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/* tslint:disable:class-name */\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\nvar Long = flatbuffers.Long;\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nvar _Block = File_.org.apache.arrow.flatbuf.Block;\nvar _Footer = File_.org.apache.arrow.flatbuf.Footer;\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\n/** @ignore */\nclass Footer_ {\n    constructor(schema, version = MetadataVersion.V4, recordBatches, dictionaryBatches) {\n        this.schema = schema;\n        this.version = version;\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema());\n        return new OffHeapFooter(schema, footer);\n    }\n    /** @nocollapse */\n    static encode(footer) {\n        const b = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n        const dictionaryBatchesOffset = b.endVector();\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n        return b.asUint8Array();\n    }\n    get numRecordBatches() { return this._recordBatches.length; }\n    get numDictionaries() { return this._dictionaryBatches.length; }\n    *recordBatches() {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) {\n                yield block;\n            }\n        }\n    }\n    *dictionaryBatches() {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) {\n                yield block;\n            }\n        }\n    }\n    getRecordBatch(index) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n    getDictionaryBatch(index) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\nexport { Footer_ as Footer };\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n    constructor(schema, _footer) {\n        super(schema, _footer.version());\n        this._footer = _footer;\n    }\n    get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    get numDictionaries() { return this._footer.dictionariesLength(); }\n    getRecordBatch(index) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) {\n                return FileBlock.decode(fileBlock);\n            }\n        }\n        return null;\n    }\n    getDictionaryBatch(index) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) {\n                return FileBlock.decode(fileBlock);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nexport class FileBlock {\n    /** @nocollapse */\n    static decode(block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n    /** @nocollapse */\n    static encode(b, fileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n    constructor(metaDataLength, bodyLength, offset) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n//# sourceMappingURL=file.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays } from '../util/buffer';\nimport { isPromise, isFetchResponse, isIterable, isAsyncIterable, isReadableDOMStream, isReadableNodeStream } from '../util/compat';\n/** @ignore */\nexport class AsyncByteQueue extends AsyncQueue {\n    write(value) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value);\n        }\n    }\n    toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values)[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n/** @ignore */\nexport class ByteStream {\n    constructor(source) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    next(value) { return this.source.next(value); }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    peek(size) { return this.source.peek(size); }\n    read(size) { return this.source.read(size); }\n}\n/** @ignore */\nexport class AsyncByteStream {\n    constructor(source) {\n        if (source instanceof AsyncByteStream) {\n            this.source = source.source;\n        }\n        else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n        else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        }\n        else if (isReadableDOMStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        }\n        else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body));\n        }\n        else if (isIterable(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        }\n        else if (isPromise(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n        else if (isAsyncIterable(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    next(value) { return this.source.next(value); }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    get closed() { return this.source.closed; }\n    cancel(reason) { return this.source.cancel(reason); }\n    peek(size) { return this.source.peek(size); }\n    read(size) { return this.source.read(size); }\n}\n/** @ignore */\nclass ByteStreamSource {\n    constructor(source) {\n        this.source = source;\n    }\n    cancel(reason) { this.return(reason); }\n    peek(size) { return this.next(size, 'peek').value; }\n    read(size) { return this.next(size, 'read').value; }\n    next(size, cmd = 'read') { return this.source.next({ cmd, size }); }\n    throw(value) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    return(value) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n/** @ignore */\nclass AsyncByteStreamSource {\n    constructor(source) {\n        this.source = source;\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    async cancel(reason) { await this.return(reason); }\n    get closed() { return this._closedPromise; }\n    async read(size) { return (await this.next(size, 'read')).value; }\n    async peek(size) { return (await this.next(size, 'peek')).value; }\n    async next(size, cmd = 'read') { return (await this.source.next({ cmd, size })); }\n    async throw(value) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    async return(value) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n\n//# sourceMappingURL=stream.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { toUint8Array } from '../util/buffer';\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    constructor(buffer, byteLength) {\n        super();\n        this.position = 0;\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    readInt32(position) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    seek(position) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    read(nBytes) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') {\n                nBytes = Infinity;\n            }\n            this.position = Math.min(size, position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    readAt(position, nBytes) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    close() { this.buffer && (this.buffer = null); }\n    throw(value) { this.close(); return { done: true, value }; }\n    return(value) { this.close(); return { done: true, value }; }\n}\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    constructor(file, byteLength) {\n        super();\n        this.position = 0;\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        }\n        else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    async readInt32(position) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    async seek(position) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    async read(nBytes) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') {\n                nBytes = Infinity;\n            }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    async readAt(position, nBytes) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    async throw(value) { await this.close(); return { done: true, value }; }\n    async return(value) { await this.close(); return { done: true, value }; }\n}\n\n//# sourceMappingURL=file.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nconst carryBit16 = 1 << 16;\n/** @ignore */\nfunction intAsHex(value) {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n    10,\n    100,\n    1000,\n    10000,\n    100000,\n    1000000,\n    10000000,\n    100000000];\n/** @ignore */\nexport class BaseInt64 {\n    constructor(buffer) {\n        this.buffer = buffer;\n    }\n    high() { return this.buffer[1]; }\n    low() { return this.buffer[0]; }\n    _times(other) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n        let sum = product >>> 16;\n        product = L[2] * R[3];\n        sum += product;\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n        this.buffer[0] += sum << 16;\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n        return this;\n    }\n    _plus(other) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n            ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n    lessThan(other) {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n    equals(other) {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n    greaterThan(other) {\n        return other.lessThan(this);\n    }\n    hex() {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    times(other) {\n        this._times(other);\n        return this;\n    }\n    plus(other) {\n        this._plus(other);\n        return this;\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(2)) {\n        return Uint64.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(2)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(2)) {\n        const length = str.length;\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    negate() {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        if (this.buffer[0] == 0) {\n            ++this.buffer[1];\n        }\n        return this;\n    }\n    times(other) {\n        this._times(other);\n        return this;\n    }\n    plus(other) {\n        this._plus(other);\n        return this;\n    }\n    lessThan(other) {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(2)) {\n        return Int64.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(2)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(2)) {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n/** @ignore */\nexport class Int128 {\n    constructor(buffer) {\n        this.buffer = buffer;\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n    high() {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n    low() {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n    negate() {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n        if (this.buffer[0] == 0) {\n            ++this.buffer[1];\n        }\n        if (this.buffer[1] == 0) {\n            ++this.buffer[2];\n        }\n        if (this.buffer[2] == 0) {\n            ++this.buffer[3];\n        }\n        return this;\n    }\n    times(other) {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3], 0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2], 0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1], 0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0], 0]));\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n        this.buffer[1] = sum.low();\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n            .plus(Uint64.multiply(L1, R2))\n            .plus(Uint64.multiply(L2, R1))\n            .plus(Uint64.multiply(L3, R0)).low();\n        return this;\n    }\n    plus(other) {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n        return this;\n    }\n    hex() {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n    /** @nocollapse */\n    static multiply(left, right) {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n    /** @nocollapse */\n    static add(left, right) {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n    /** @nocollapse */\n    static from(val, out_buffer = new Uint32Array(4)) {\n        return Int128.fromString(typeof (val) === 'string' ? val : val.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromNumber(num, out_buffer = new Uint32Array(4)) {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n    /** @nocollapse */\n    static fromString(str, out_buffer = new Uint32Array(4)) {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n            out.times(multiple);\n            out.plus(chunk);\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n    /** @nocollapse */\n    static convertArray(values) {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n\n//# sourceMappingURL=int.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    constructor(bytes, nodes, buffers, dictionaries) {\n        super();\n        this.nodesIndex = -1;\n        this.buffersIndex = -1;\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n    visit(node) {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n    visitNull(type, { length, } = this.nextFieldNode()) { return Data.Null(type, 0, length); }\n    visitBool(type, { length, nullCount } = this.nextFieldNode()) { return Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitInt(type, { length, nullCount } = this.nextFieldNode()) { return Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitFloat(type, { length, nullCount } = this.nextFieldNode()) { return Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitUtf8(type, { length, nullCount } = this.nextFieldNode()) { return Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type)); }\n    visitBinary(type, { length, nullCount } = this.nextFieldNode()) { return Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type)); }\n    visitFixedSizeBinary(type, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitDate(type, { length, nullCount } = this.nextFieldNode()) { return Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitTimestamp(type, { length, nullCount } = this.nextFieldNode()) { return Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitTime(type, { length, nullCount } = this.nextFieldNode()) { return Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitDecimal(type, { length, nullCount } = this.nextFieldNode()) { return Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitList(type, { length, nullCount } = this.nextFieldNode()) { return Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0])); }\n    visitStruct(type, { length, nullCount } = this.nextFieldNode()) { return Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children)); }\n    visitUnion(type) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type) : this.visitDenseUnion(type); }\n    visitDenseUnion(type, { length, nullCount } = this.nextFieldNode()) { return Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    visitSparseUnion(type, { length, nullCount } = this.nextFieldNode()) { return Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children)); }\n    visitDictionary(type, { length, nullCount } = this.nextFieldNode()) { return Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type)); }\n    visitInterval(type, { length, nullCount } = this.nextFieldNode()) { return Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type)); }\n    visitFixedSizeList(type, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0])); }\n    visitMap(type, { length, nullCount } = this.nextFieldNode()) { return Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0])); }\n    nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    readNullBitmap(type, nullCount, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    readOffsets(type, buffer) { return this.readData(type, buffer); }\n    readTypeIds(type, buffer) { return this.readData(type, buffer); }\n    readData(_type, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    readDictionary(type) {\n        return this.dictionaries.get(type.id);\n    }\n}\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    constructor(sources, nodes, buffers, dictionaries) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    readNullBitmap(_type, nullCount, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    readOffsets(_type, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    readTypeIds(type, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    readData(type, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n        }\n        else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset]));\n        }\n        else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset]);\n        }\n        else if (DataType.isBool(type)) {\n            return packBools(sources[offset]);\n        }\n        else if (DataType.isUtf8(type)) {\n            return encodeUtf8(sources[offset].join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n/** @ignore */\nfunction binaryDataFromJSON(values) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n\n//# sourceMappingURL=vectorloader.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nvar Long = flatbuffers.Long;\nimport * as Schema_ from '../fb/Schema';\nimport { Visitor } from '../visitor';\nvar Null = Schema_.org.apache.arrow.flatbuf.Null;\nvar Int = Schema_.org.apache.arrow.flatbuf.Int;\nvar FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nvar Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nvar Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nvar Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nvar Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nvar Date = Schema_.org.apache.arrow.flatbuf.Date;\nvar Time = Schema_.org.apache.arrow.flatbuf.Time;\nvar Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nvar Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nvar List = Schema_.org.apache.arrow.flatbuf.List;\nvar Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nvar Union = Schema_.org.apache.arrow.flatbuf.Union;\nvar DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nvar FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nvar FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nvar Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    visit(node, builder) {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    visitNull(_node, b) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    visitInt(node, b) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    visitFloat(node, b) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    visitBinary(_node, b) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    visitBool(_node, b) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    visitUtf8(_node, b) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    visitDecimal(node, b) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    visitDate(node, b) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    visitTime(node, b) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    visitTimestamp(node, b) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    visitInterval(node, b) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    visitList(_node, b) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    visitStruct(_node, b) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    visitUnion(node, b) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    visitDictionary(node, b) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    visitFixedSizeBinary(node, b) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    visitFixedSizeList(node, b) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    visitMap(node, b) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n/** @ignore */\nexport const instance = new TypeAssembler();\n\n//# sourceMappingURL=typeassembler.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Schema, Field } from '../../schema';\nimport { Dictionary, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct, Union, Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, Int32, } from '../../type';\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n/** @ignore */\nexport function schemaFromJSON(_schema, dictionaries = new Map()) {\n    return new Schema(schemaFieldsFromJSON(_schema, dictionaries), customMetadataFromJSON(_schema['customMetadata']), dictionaries);\n}\n/** @ignore */\nexport function recordBatchFromJSON(b) {\n    return new RecordBatch(b['count'], fieldNodesFromJSON(b['columns']), buffersFromJSON(b['columns']));\n}\n/** @ignore */\nexport function dictionaryBatchFromJSON(b) {\n    return new DictionaryBatch(recordBatchFromJSON(b['data']), b['id'], b['isDelta']);\n}\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema, dictionaries) {\n    return (_schema['fields'] || []).filter(Boolean).map((f) => Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldChildrenFromJSON(_field, dictionaries) {\n    return (_field['children'] || []).filter(Boolean).map((f) => Field.fromJSON(f, dictionaries));\n}\n/** @ignore */\nfunction fieldNodesFromJSON(xs) {\n    return (xs || []).reduce((fieldNodes, column) => [\n        ...fieldNodes,\n        new FieldNode(column['count'], nullCountFromJSON(column['VALIDITY'])),\n        ...fieldNodesFromJSON(column['children'])\n    ], []);\n}\n/** @ignore */\nfunction buffersFromJSON(xs, buffers = []) {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n/** @ignore */\nfunction nullCountFromJSON(validity) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n/** @ignore */\nexport function fieldFromJSON(_field, dictionaries) {\n    let id;\n    let keys;\n    let field;\n    let dictMeta;\n    let type;\n    let dictType;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) : new Int32();\n        dictType = new Dictionary(dictionaries.get(id), keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n/** @ignore */\nfunction customMetadataFromJSON(_metadata) {\n    return new Map(Object.entries(_metadata || {}));\n}\n/** @ignore */\nfunction indexTypeFromJSON(_type) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n/** @ignore */\nfunction typeFromJSON(f, children) {\n    const typeId = f['type']['name'];\n    switch (typeId) {\n        case 'NONE': return new Null();\n        case 'null': return new Null();\n        case 'binary': return new Binary();\n        case 'utf8': return new Utf8();\n        case 'bool': return new Bool();\n        case 'list': return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth']);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']]);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']]);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']], t['bitWidth']);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']], t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']]);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']], (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n\n//# sourceMappingURL=json.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\nvar Long = flatbuffers.Long;\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nvar Type = Schema_.org.apache.arrow.flatbuf.Type;\nvar _Field = Schema_.org.apache.arrow.flatbuf.Field;\nvar _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nvar _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nvar _Message = Message_.org.apache.arrow.flatbuf.Message;\nvar _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nvar _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nvar _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nvar _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nvar _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport { DataType, Dictionary, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct, Union, Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, Int32, } from '../../type';\n/**\n * @ignore\n * @private\n **/\nexport class Message {\n    constructor(bodyLength, version, headerType, header) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n    /** @nocollapse */\n    static fromJSON(msg, headerType) {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static decode(buf) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength = _message.bodyLength();\n        const version = _message.version();\n        const headerType = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n    /** @nocollapse */\n    static encode(message) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header());\n        }\n        else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header());\n        }\n        else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header());\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n    /** @nocollapse */\n    static from(header, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n    get type() { return this.headerType; }\n    get version() { return this._version; }\n    get headerType() { return this._headerType; }\n    get bodyLength() { return this._bodyLength; }\n    header() { return this._createHeader(); }\n    isSchema() { return this.headerType === MessageHeader.Schema; }\n    isRecordBatch() { return this.headerType === MessageHeader.RecordBatch; }\n    isDictionaryBatch() { return this.headerType === MessageHeader.DictionaryBatch; }\n}\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    get nodes() { return this._nodes; }\n    get length() { return this._length; }\n    get buffers() { return this._buffers; }\n    constructor(length, nodes, buffers) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n    get id() { return this._id; }\n    get data() { return this._data; }\n    get isDelta() { return this._isDelta; }\n    get length() { return this.data.length; }\n    get nodes() { return this.data.nodes; }\n    get buffers() { return this.data.buffers; }\n    constructor(data, id, isDelta = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    constructor(offset, length) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    constructor(length, nullCount) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n/** @ignore */\nfunction messageHeaderFromJSON(message, type) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    });\n}\n/** @ignore */\nfunction decodeMessageHeader(message, type) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema()));\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch()), message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch()), message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    });\n}\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n/** @ignore */\nfunction decodeSchema(_schema, dictionaries = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n/** @ignore */\nfunction decodeRecordBatch(batch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n/** @ignore */\nfunction decodeDictionaryBatch(batch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data(), version), batch.id(), batch.isDelta());\n}\n/** @ignore */\nfunction decodeBufferRegion(b) {\n    return new BufferRegion(b.offset(), b.length());\n}\n/** @ignore */\nfunction decodeFieldNode(f) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n/** @ignore */\nfunction decodeFieldNodes(batch) {\n    const nodes = [];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n/** @ignore */\nfunction decodeBuffers(batch, version) {\n    const bufferRegions = [];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n            // If this Arrow buffer was written before version 4,\n            // advance the buffer's bb_pos 8 bytes to skip past\n            // the now-removed page_id field\n            if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n/** @ignore */\nfunction decodeSchemaFields(schema, dictionaries) {\n    const fields = [];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n/** @ignore */\nfunction decodeFieldChildren(field, dictionaries) {\n    const children = [];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n/** @ignore */\nfunction decodeField(f, dictionaries) {\n    let id;\n    let field;\n    let type;\n    let keys;\n    let dictType;\n    let dictMeta;\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name(), type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) : new Int32();\n        dictType = new Dictionary(dictionaries.get(id), keys, id, dictMeta.isOrdered());\n        field = new Field(f.name(), dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n/** @ignore */\nfunction decodeCustomMetadata(parent) {\n    const data = new Map();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value());\n            }\n        }\n    }\n    return data;\n}\n/** @ignore */\nfunction decodeIndexType(_type) {\n    return new Int(_type.isSigned(), _type.bitWidth());\n}\n/** @ignore */\nfunction decodeFieldType(f, children) {\n    const typeId = f.typeType();\n    switch (typeId) {\n        case Type.NONE: return new Null();\n        case Type.Null: return new Null();\n        case Type.Binary: return new Binary();\n        case Type.Utf8: return new Utf8();\n        case Type.Bool: return new Bool();\n        case Type.List: return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int());\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint());\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal());\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date());\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time());\n            return new Time(t.unit(), t.bitWidth());\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp());\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval());\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union());\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary());\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList());\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map());\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n/** @ignore */\nfunction encodeSchema(b, schema) {\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n    if (metadataOffset !== -1) {\n        _Schema.addCustomMetadata(b, metadataOffset);\n    }\n    return _Schema.endSchema(b);\n}\n/** @ignore */\nfunction encodeField(b, field) {\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n    let type = field.type;\n    let typeId = field.typeId;\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b);\n    }\n    else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b);\n        typeOffset = typeAssembler.visit(type.dictionary, b);\n    }\n    const childOffsets = (type.children || []).map((f) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n    if (nameOffset !== -1) {\n        _Field.addName(b, nameOffset);\n    }\n    if (dictionaryOffset !== -1) {\n        _Field.addDictionary(b, dictionaryOffset);\n    }\n    if (metadataOffset !== -1) {\n        _Field.addCustomMetadata(b, metadataOffset);\n    }\n    return _Field.endField(b);\n}\n/** @ignore */\nfunction encodeRecordBatch(b, recordBatch) {\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n    const nodesVectorOffset = b.endVector();\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n    const buffersVectorOffset = b.endVector();\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n/** @ignore */\nfunction encodeDictionaryBatch(b, dictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n/** @ignore */\nfunction encodeFieldNode(b, node) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n/** @ignore */\nfunction encodeBufferRegion(b, node) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n/** @ignore */\nconst platformIsLittleEndian = (function () {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n//# sourceMappingURL=message.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nvar ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ITERATOR_DONE } from '../io/interfaces';\n/** @ignore */ const invalidMessageType = (type) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage = (type) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata = (expected, actual) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected, actual) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n/** @ignore */\nexport class MessageReader {\n    constructor(source) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    [Symbol.iterator]() { return this; }\n    next() {\n        let r;\n        if ((r = this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        if ((r = this.readMetadata(r.value)).done) {\n            return ITERATOR_DONE;\n        }\n        return r;\n    }\n    throw(value) { return this.source.throw(value); }\n    return(value) { return this.source.return(value); }\n    readMessage(type) {\n        let r;\n        if ((r = this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    readMessageBody(bodyLength) {\n        if (bodyLength <= 0) {\n            return new Uint8Array(0);\n        }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n            /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    readMetadataLength() {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    readMetadata(metadataLength) {\n        const buf = this.source.read(metadataLength);\n        if (!buf) {\n            return ITERATOR_DONE;\n        }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n/** @ignore */\nexport class AsyncMessageReader {\n    constructor(source, byteLength) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n                ? new AsyncRandomAccessFile(source, byteLength)\n                : new AsyncByteStream(source);\n    }\n    [Symbol.asyncIterator]() { return this; }\n    async next() {\n        let r;\n        if ((r = await this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) {\n            return ITERATOR_DONE;\n        }\n        if ((r = await this.readMetadata(r.value)).done) {\n            return ITERATOR_DONE;\n        }\n        return r;\n    }\n    async throw(value) { return await this.source.throw(value); }\n    async return(value) { return await this.source.return(value); }\n    async readMessage(type) {\n        let r;\n        if ((r = await this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    async readMessageBody(bodyLength) {\n        if (bodyLength <= 0) {\n            return new Uint8Array(0);\n        }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n            /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    async readMetadataLength() {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    async readMetadata(metadataLength) {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) {\n            return ITERATOR_DONE;\n        }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    constructor(source) {\n        super(new Uint8Array(0));\n        this._schema = false;\n        this._body = [];\n        this._batchIndex = 0;\n        this._dictionaryIndex = 0;\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    readMessageBody(_bodyLength) {\n        return flattenDataSources(this._body);\n        function flattenDataSources(xs) {\n            return (xs || []).reduce((buffers, column) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], []);\n        }\n    }\n    readMessage(type) {\n        let r;\n        if ((r = this.next()).done) {\n            return null;\n        }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n/** @ignore */\nexport function checkForMagicArrowString(buffer, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n\n//# sourceMappingURL=message.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport { DataType, } from '../type';\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n    constructor() {\n        super();\n        this._byteLength = 0;\n        this._nodes = [];\n        this._buffers = [];\n        this._bufferRegions = [];\n    }\n    /** @nocollapse */\n    static assemble(...args) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n    visit(vector) {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap));\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n    visitNull(_nullV) {\n        return this;\n    }\n    visitDictionary(vector) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n    get nodes() { return this._nodes; }\n    get buffers() { return this._buffers; }\n    get byteLength() { return this._byteLength; }\n    get bufferRegions() { return this._bufferRegions; }\n}\n/** @ignore */\nfunction addBuffer(values) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n/** @ignore */\nfunction assembleUnion(vector) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    }\n    else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        }\n        else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n/** @ignore */\nfunction assembleBoolVector(vector) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    }\n    else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n/** @ignore */\nfunction assembleFlatVector(vector) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n/** @ignore */\nfunction assembleFlatListVector(vector) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n/** @ignore */\nfunction assembleListVector(vector) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0));\n}\n/** @ignore */\nfunction assembleNestedVector(vector) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)).filter(Boolean))[0];\n}\nVectorAssembler.prototype.visitBool = assembleBoolVector;\nVectorAssembler.prototype.visitInt = assembleFlatVector;\nVectorAssembler.prototype.visitFloat = assembleFlatVector;\nVectorAssembler.prototype.visitUtf8 = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary = assembleFlatVector;\nVectorAssembler.prototype.visitDate = assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp = assembleFlatVector;\nVectorAssembler.prototype.visitTime = assembleFlatVector;\nVectorAssembler.prototype.visitDecimal = assembleFlatVector;\nVectorAssembler.prototype.visitList = assembleListVector;\nVectorAssembler.prototype.visitStruct = assembleNestedVector;\nVectorAssembler.prototype.visitUnion = assembleUnion;\nVectorAssembler.prototype.visitInterval = assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList = assembleListVector;\nVectorAssembler.prototype.visitMap = assembleListVector;\n\n//# sourceMappingURL=vectorassembler.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { ReadableInterop } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\nexport class RecordBatchWriter extends ReadableInterop {\n    constructor(options) {\n        super();\n        this._position = 0;\n        this._started = false;\n        // @ts-ignore\n        this._sink = new AsyncByteQueue();\n        this._schema = null;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static throughDOM(\n    // @ts-ignore\n    writableStrategy, \n    // @ts-ignore\n    readableStrategy) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    toString(sync = false) {\n        return this._sink.toString(sync);\n    }\n    toUint8Array(sync = false) {\n        return this._sink.toUint8Array(sync);\n    }\n    writeAll(input) {\n        if (isPromise(input)) {\n            return input.then((x) => this.writeAll(x));\n        }\n        else if (isAsyncIterable(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, input);\n    }\n    get closed() { return this._sink.closed; }\n    [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    toDOMStream(options) { return this._sink.toDOMStream(options); }\n    toNodeStream(options) { return this._sink.toNodeStream(options); }\n    close() {\n        return this.reset()._sink.close();\n    }\n    abort(reason) {\n        return this.reset()._sink.abort(reason);\n    }\n    finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    reset(sink = this._sink, schema = null) {\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink;\n        }\n        else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            }\n            else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            }\n            else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n        return this;\n    }\n    write(payload) {\n        let schema = null;\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        }\n        else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        }\n        else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n        else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        }\n        else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        }\n        else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n    _writeMessage(message, alignment = 8) {\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n        else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) {\n            this._write(buffer);\n        }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n    _write(chunk) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n    _writeSchema(schema) {\n        return this._writeMessage(Message.from(schema));\n    }\n    // @ts-ignore\n    _writeFooter(schema) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n    _writeMagic() {\n        return this._write(MAGIC);\n    }\n    _writePadding(nBytes) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n    _writeRecordBatch(batch) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n    _writeDictionaryBatch(dictionary, id, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n    _writeBodyBuffers(buffers) {\n        let buffer;\n        let size, padding;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n    _writeDictionaries(batch) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? dictionary.chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n/** @ignore */\nexport class RecordBatchStreamWriter extends RecordBatchWriter {\n    /** @nocollapse */\n    static writeAll(input, options) {\n        const writer = new RecordBatchStreamWriter(options);\n        if (isPromise(input)) {\n            return input.then((x) => writer.writeAll(x));\n        }\n        else if (isAsyncIterable(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n/** @ignore */\nexport class RecordBatchFileWriter extends RecordBatchWriter {\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n    /** @nocollapse */\n    static writeAll(input) {\n        const writer = new RecordBatchFileWriter();\n        if (isPromise(input)) {\n            return input.then((x) => writer.writeAll(x));\n        }\n        else if (isAsyncIterable(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n    // @ts-ignore\n    _writeSchema(schema) {\n        return this._writeMagic()._writePadding(2);\n    }\n    _writeFooter(schema) {\n        const buffer = Footer.encode(new Footer(schema, MetadataVersion.V4, this._recordBatchBlocks, this._dictionaryBlocks));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n/** @ignore */\nexport class RecordBatchJSONWriter extends RecordBatchWriter {\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n    /** @nocollapse */\n    static writeAll(input) {\n        return new RecordBatchJSONWriter().writeAll(input);\n    }\n    _writeMessage() { return this; }\n    // @ts-ignore\n    _writeFooter(schema) { return this; }\n    _writeSchema(schema) {\n        return this._write(`{\\n  \"schema\": ${JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)}`);\n    }\n    _writeDictionaries(batch) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    _writeDictionaryBatch(dictionary, id, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    _writeRecordBatch(batch) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    close() {\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n        this._dictionaries = [];\n        this._recordBatches = [];\n        return super.close();\n    }\n}\n/** @ignore */\nfunction writeAll(writer, input) {\n    let chunks = input;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n/** @ignore */\nasync function writeAllAsync(writer, batches) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }) {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary, id, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n/** @ignore */\nfunction recordBatchToJSON(records) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n\n//# sourceMappingURL=writer.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Schema } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength) => [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n];\n/** @ignore */\nexport function ensureSameLengthData(schema, chunks, batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)) {\n    let data;\n    let field;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        }\n        else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }));\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength));\n        }\n    }\n    return [new Schema(fields), batchLength, batchData];\n}\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches(columns) {\n    return distributeVectorsIntoRecordBatches(new Schema(columns.map(({ field }) => field)), columns);\n}\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches(schema, vecs) {\n    return uniformlyDistributeChunksAcrossRecordBatches(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches(schema, columns) {\n    const fields = [...schema.fields];\n    const batchArgs = [];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n    let numBatches = 0, batchLength = 0;\n    let i = -1, numColumns = columns.length;\n    let child, childData = [];\n    while (memo.numBatches-- > 0) {\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift();\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n/** @ignore */\nfunction distributeChildData(fields, batchLength, childData, columns, memo) {\n    let data;\n    let field;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            }\n            else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        }\n        else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }));\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength));\n        }\n    }\n    return childData;\n}\n\n//# sourceMappingURL=recordbatch.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type } from '../enum';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { AbstractVector, Vector } from '../vector';\n/** @ignore */\nexport class BaseVector extends AbstractVector {\n    constructor(data, children) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n    get type() { return this.data.type; }\n    get typeId() { return this.data.typeId; }\n    get length() { return this.data.length; }\n    get offset() { return this.data.offset; }\n    get stride() { return this.data.stride; }\n    get nullCount() { return this.data.nullCount; }\n    get byteLength() { return this.data.byteLength; }\n    get VectorName() { return `${Type[this.typeId]}Vector`; }\n    get ArrayType() { return this.type.ArrayType; }\n    get values() { return this.data.values; }\n    get typeIds() { return this.data.typeIds; }\n    get nullBitmap() { return this.data.nullBitmap; }\n    get valueOffsets() { return this.data.valueOffsets; }\n    get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n    clone(data, children = this._children) {\n        return Vector.new(data, children);\n    }\n    concat(...others) {\n        return Chunked.concat(this, ...others);\n    }\n    slice(begin, end) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n    isValid(index) {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n    getChildAt(index) {\n        return index < 0 || index >= this.numChildren ? null : ((this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new(this.data.childData[index])));\n    }\n    toJSON() { return [...this]; }\n    _sliceInternal(self, begin, end) {\n        return self.clone(self.data.slice(begin, end - begin), null);\n    }\n    // @ts-ignore\n    _bindDataAccessors(data) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\nBaseVector.prototype[Symbol.isConcatSpreadable] = true;\n\n//# sourceMappingURL=base.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Utf8 } from '../type';\n/** @ignore */\nexport class BinaryVector extends BaseVector {\n    asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n\n//# sourceMappingURL=binary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Bool } from '../type';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\n/** @ignore */\nexport class BoolVector extends BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n\n//# sourceMappingURL=bool.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { DateUnit } from '../enum';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { DateDay, DateMillisecond } from '../type';\n/** @ignore */\nexport class DateVector extends BaseVector {\n    /** @nocollapse */\n    static from(...args) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond(), args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond(), args[0]);\n    }\n}\n/** @ignore */\nexport class DateDayVector extends DateVector {\n}\n/** @ignore */\nexport class DateMillisecondVector extends DateVector {\n}\n\n//# sourceMappingURL=date.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class DecimalVector extends BaseVector {\n}\n\n//# sourceMappingURL=decimal.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { Dictionary } from '../type';\n/** @ignore */\nexport class DictionaryVector extends BaseVector {\n    constructor(data) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n    /** @nocollapse */\n    static from(...args) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n    get dictionary() { return this.data.dictionary; }\n    reverseLookup(value) { return this.dictionary.indexOf(value); }\n    getKey(idx) { return this.indices.get(idx); }\n    getValue(key) { return this.dictionary.get(key); }\n    setKey(idx, key) { return this.indices.set(idx, key); }\n    setValue(key, value) { return this.dictionary.set(key, value); }\n}\nDictionaryVector.prototype.indices = null;\n\n//# sourceMappingURL=dictionary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector {\n}\n\n//# sourceMappingURL=fixedsizebinary.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class FixedSizeListVector extends BaseVector {\n}\n\n//# sourceMappingURL=fixedsizelist.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { Float16, Float32, Float64 } from '../type';\n/** @ignore */\nexport class FloatVector extends BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        let ArrowType = vectorTypeToDataType(this);\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input));\n                }\n            }\n        }\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType(), input);\n        }\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n/** @ignore */\nexport class Float16Vector extends FloatVector {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    toFloat32Array() { return new Float32Array(this); }\n    toFloat64Array() { return new Float64Array(this); }\n}\n/** @ignore */\nexport class Float32Vector extends FloatVector {\n}\n/** @ignore */\nexport class Float64Vector extends FloatVector {\n}\nconst convertTo16Bit = (typeCtor, dataCtor) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n/** @ignore */\nconst arrayTypeToDataType = (ctor) => {\n    switch (ctor) {\n        case Uint16Array: return Float16;\n        case Float32Array: return Float32;\n        case Float64Array: return Float64;\n        default: return null;\n    }\n};\n/** @ignore */\nconst vectorTypeToDataType = (ctor) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n\n//# sourceMappingURL=float.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class IntervalVector extends BaseVector {\n}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector {\n}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector {\n}\n\n//# sourceMappingURL=interval.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { vectorFromValuesWithType } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64 } from '../type';\n/** @ignore */\nexport class IntVector extends BaseVector {\n    /** @nocollapse */\n    static from(...args) {\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input));\n            }\n        }\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType(), input);\n        }\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n/** @ignore */\nexport class Int8Vector extends IntVector {\n}\n/** @ignore */\nexport class Int16Vector extends IntVector {\n}\n/** @ignore */\nexport class Int32Vector extends IntVector {\n}\n/** @ignore */\nexport class Int64Vector extends IntVector {\n    toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    get values64() {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n/** @ignore */\nexport class Uint8Vector extends IntVector {\n}\n/** @ignore */\nexport class Uint16Vector extends IntVector {\n}\n/** @ignore */\nexport class Uint32Vector extends IntVector {\n}\n/** @ignore */\nexport class Uint64Vector extends IntVector {\n    toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    get values64() {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\nconst convert32To64Bit = (typeCtor, dataCtor) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n        (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n/** @ignore */\nconst arrayTypeToDataType = (ctor, is64bit) => {\n    switch (ctor) {\n        case Int8Array: return Int8;\n        case Int16Array: return Int16;\n        case Int32Array: return is64bit ? Int64 : Int32;\n        case BigInt64Array: return Int64;\n        case Uint8Array: return Uint8;\n        case Uint16Array: return Uint16;\n        case Uint32Array: return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n/** @ignore */\nconst vectorTypeToDataType = (ctor, is64bit) => {\n    switch (ctor) {\n        case Int8Vector: return Int8;\n        case Int16Vector: return Int16;\n        case Int32Vector: return is64bit ? Int64 : Int32;\n        case Int64Vector: return Int64;\n        case Uint8Vector: return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n\n//# sourceMappingURL=int.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class ListVector extends BaseVector {\n}\n\n//# sourceMappingURL=list.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { MapRow } from './row';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { List } from '../type';\n/** @ignore */\nexport class MapVector extends BaseVector {\n    asList() {\n        const child = this.type.children[0];\n        return Vector.new(this.data.clone(new List(child)));\n    }\n    bind(index) {\n        const child = this.getChildAt(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child.slice(begin, end));\n    }\n}\n\n//# sourceMappingURL=map.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class NullVector extends BaseVector {\n}\n\n//# sourceMappingURL=null.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector extends BaseVector {\n    bind(index) {\n        const proto = this._row || (this._row = new StructRow(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n\n//# sourceMappingURL=struct.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class TimestampVector extends BaseVector {\n}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector {\n}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector {\n}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector {\n}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector {\n}\n\n//# sourceMappingURL=timestamp.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class TimeVector extends BaseVector {\n}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector {\n}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector {\n}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector {\n}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector {\n}\n\n//# sourceMappingURL=time.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class UnionVector extends BaseVector {\n    get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n/** @ignore */\nexport class DenseUnionVector extends UnionVector {\n    get valueOffsets() { return this.data.valueOffsets; }\n}\n/** @ignore */\nexport class SparseUnionVector extends UnionVector {\n}\n\n//# sourceMappingURL=union.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { vectorFromValuesWithType } from './index';\n/** @ignore */\nexport class Utf8Vector extends BaseVector {\n    /** @nocollapse */\n    static from(input) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n\n//# sourceMappingURL=utf8.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/** @ignore */\nexport function partial0(visit) {\n    return function () { return visit(this); };\n}\n/** @ignore */\nexport function partial1(visit) {\n    return function (a) { return visit(this, a); };\n}\n/** @ignore */\nexport function partial2(visit) {\n    return function (a, b) { return visit(this, a, b); };\n}\n\n//# sourceMappingURL=fn.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { uint16ToFloat64 } from '../util/math';\nimport { UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\n/** @ignore */\nexport class GetVisitor extends Visitor {\n}\n/** @ignore */ const epochDaysToMs = (data, index) => 86400000 * data[index];\n/** @ignore */ const epochMillisecondsLongToMs = (data, index) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */ const epochMicrosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */ const epochNanosecondsLongToMs = (data, index) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n/** @ignore */ const epochMillisecondsToDate = (epochMs) => new Date(epochMs);\n/** @ignore */ const epochDaysToDate = (data, index) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */ const epochMillisecondsLongToDate = (data, index) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n/** @ignore */\nconst getNull = (_vector, _index) => null;\n/** @ignore */\nconst getVariableWidthBytes = (values, valueOffsets, index) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null;\n};\n/** @ignore */\nconst getBool = ({ offset, values }, index) => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n/** @ignore */\nconst getDateDay = ({ values }, index) => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = ({ values }, index) => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric = ({ stride, values }, index) => values[stride * index];\n/** @ignore */\nconst getFloat16 = ({ stride, values }, index) => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts = ({ stride, values, type }, index) => BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = ({ stride, values }, index) => values.subarray(stride * index, stride * (index + 1));\n/** @ignore */\nconst getBinary = ({ values, valueOffsets }, index) => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = ({ values, valueOffsets }, index) => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null;\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = (vector, index) => (vector.type.bitWidth < 64\n    ? getNumeric(vector, index)\n    : getBigInts(vector, index));\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = (vector, index) => (vector.type.precision !== Precision.HALF\n    ? getNumeric(vector, index)\n    : getFloat16(vector, index));\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = (vector, index) => (vector.type.unit === DateUnit.DAY\n    ? getDateDay(vector, index)\n    : getDateMillisecond(vector, index));\n/** @ignore */\nconst getTimestampSecond = ({ values }, index) => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = ({ values }, index) => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = ({ values }, index) => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond = ({ values }, index) => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp = (vector, index) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return getTimestampSecond(vector, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector, index);\n        case TimeUnit.NANOSECOND: return getTimestampNanosecond(vector, index);\n    }\n};\n/** @ignore */\nconst getTimeSecond = ({ values, stride }, index) => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = ({ values, stride }, index) => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = ({ values }, index) => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond = ({ values }, index) => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime = (vector, index) => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND: return getTimeSecond(vector, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector, index);\n        case TimeUnit.NANOSECOND: return getTimeNanosecond(vector, index);\n    }\n};\n/** @ignore */\nconst getDecimal = ({ values }, index) => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n/** @ignore */\nconst getList = (vector, index) => {\n    const child = vector.getChildAt(0), { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]);\n};\n/** @ignore */\nconst getMap = (vector, index) => {\n    return vector.bind(index);\n};\n/** @ignore */\nconst getStruct = (vector, index) => {\n    return vector.bind(index);\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = (vector, index) => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector, index) :\n        getSparseUnion(vector, index);\n};\n/** @ignore */\nconst getDenseUnion = (vector, index) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n/** @ignore */\nconst getSparseUnion = (vector, index) => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n/** @ignore */\nconst getDictionary = (vector, index) => {\n    return vector.getValue(vector.getKey(index));\n};\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = (vector, index) => (vector.type.unit === IntervalUnit.DAY_TIME)\n    ? getIntervalDayTime(vector, index)\n    : getIntervalYearMonth(vector, index);\n/** @ignore */\nconst getIntervalDayTime = ({ values }, index) => values.subarray(2 * index, 2 * (index + 1));\n/** @ignore */\nconst getIntervalYearMonth = ({ values }, index) => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n/** @ignore */\nconst getFixedSizeList = (vector, index) => {\n    const child = vector.getChildAt(0), { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride);\n};\nGetVisitor.prototype.visitNull = getNull;\nGetVisitor.prototype.visitBool = getBool;\nGetVisitor.prototype.visitInt = getInt;\nGetVisitor.prototype.visitInt8 = getNumeric;\nGetVisitor.prototype.visitInt16 = getNumeric;\nGetVisitor.prototype.visitInt32 = getNumeric;\nGetVisitor.prototype.visitInt64 = getBigInts;\nGetVisitor.prototype.visitUint8 = getNumeric;\nGetVisitor.prototype.visitUint16 = getNumeric;\nGetVisitor.prototype.visitUint32 = getNumeric;\nGetVisitor.prototype.visitUint64 = getBigInts;\nGetVisitor.prototype.visitFloat = getFloat;\nGetVisitor.prototype.visitFloat16 = getFloat16;\nGetVisitor.prototype.visitFloat32 = getNumeric;\nGetVisitor.prototype.visitFloat64 = getNumeric;\nGetVisitor.prototype.visitUtf8 = getUtf8;\nGetVisitor.prototype.visitBinary = getBinary;\nGetVisitor.prototype.visitFixedSizeBinary = getFixedSizeBinary;\nGetVisitor.prototype.visitDate = getDate;\nGetVisitor.prototype.visitDateDay = getDateDay;\nGetVisitor.prototype.visitDateMillisecond = getDateMillisecond;\nGetVisitor.prototype.visitTimestamp = getTimestamp;\nGetVisitor.prototype.visitTimestampSecond = getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond = getTimestampNanosecond;\nGetVisitor.prototype.visitTime = getTime;\nGetVisitor.prototype.visitTimeSecond = getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond = getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond = getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond = getTimeNanosecond;\nGetVisitor.prototype.visitDecimal = getDecimal;\nGetVisitor.prototype.visitList = getList;\nGetVisitor.prototype.visitStruct = getStruct;\nGetVisitor.prototype.visitUnion = getUnion;\nGetVisitor.prototype.visitDenseUnion = getDenseUnion;\nGetVisitor.prototype.visitSparseUnion = getSparseUnion;\nGetVisitor.prototype.visitDictionary = getDictionary;\nGetVisitor.prototype.visitInterval = getInterval;\nGetVisitor.prototype.visitIntervalDayTime = getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth = getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList = getFixedSizeList;\nGetVisitor.prototype.visitMap = getMap;\n/** @ignore */\nexport const instance = new GetVisitor();\n\n//# sourceMappingURL=get.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {\n}\n/** @ignore */\nfunction nullIndexOf(vector, searchElement) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n/** @ignore */\nfunction indexOfNull(vector, fromIndex) {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) {\n            return i;\n        }\n        ++i;\n    }\n    return -1;\n}\n/** @ignore */\nfunction indexOfValue(vector, searchElement, fromIndex) {\n    if (searchElement === undefined) {\n        return -1;\n    }\n    if (searchElement === null) {\n        return indexOfNull(vector, fromIndex);\n    }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n/** @ignore */\nfunction indexOfUnion(vector, searchElement, fromIndex) {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\nIndexOfVisitor.prototype.visitNull = nullIndexOf;\nIndexOfVisitor.prototype.visitBool = indexOfValue;\nIndexOfVisitor.prototype.visitInt = indexOfValue;\nIndexOfVisitor.prototype.visitInt8 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16 = indexOfValue;\nIndexOfVisitor.prototype.visitInt32 = indexOfValue;\nIndexOfVisitor.prototype.visitInt64 = indexOfValue;\nIndexOfVisitor.prototype.visitUint8 = indexOfValue;\nIndexOfVisitor.prototype.visitUint16 = indexOfValue;\nIndexOfVisitor.prototype.visitUint32 = indexOfValue;\nIndexOfVisitor.prototype.visitUint64 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32 = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64 = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary = indexOfValue;\nIndexOfVisitor.prototype.visitDate = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTime = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal = indexOfValue;\nIndexOfVisitor.prototype.visitList = indexOfValue;\nIndexOfVisitor.prototype.visitStruct = indexOfValue;\nIndexOfVisitor.prototype.visitUnion = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary = indexOfValue;\nIndexOfVisitor.prototype.visitInterval = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList = indexOfValue;\nIndexOfVisitor.prototype.visitMap = indexOfValue;\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n\n//# sourceMappingURL=indexof.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\n/** @ignore */\nexport class IteratorVisitor extends Visitor {\n}\n/** @ignore */\nfunction nullableIterator(vector) {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits(vector.nullBitmap, vector.offset, vector.length, vector, (vec, idx, nullByte, nullBit) => ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null);\n}\n/** @ignore */\nfunction vectorIterator(vector) {\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator(vector);\n    }\n    const { type, typeId, length } = vector;\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && ((typeId === Type.Timestamp) ||\n        (typeId === Type.Int && type.bitWidth !== 64) ||\n        (typeId === Type.Time && type.bitWidth !== 64) ||\n        (typeId === Type.Float && type.precision > 0 /* Precision.HALF */))) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\nIteratorVisitor.prototype.visitNull = vectorIterator;\nIteratorVisitor.prototype.visitBool = vectorIterator;\nIteratorVisitor.prototype.visitInt = vectorIterator;\nIteratorVisitor.prototype.visitInt8 = vectorIterator;\nIteratorVisitor.prototype.visitInt16 = vectorIterator;\nIteratorVisitor.prototype.visitInt32 = vectorIterator;\nIteratorVisitor.prototype.visitInt64 = vectorIterator;\nIteratorVisitor.prototype.visitUint8 = vectorIterator;\nIteratorVisitor.prototype.visitUint16 = vectorIterator;\nIteratorVisitor.prototype.visitUint32 = vectorIterator;\nIteratorVisitor.prototype.visitUint64 = vectorIterator;\nIteratorVisitor.prototype.visitFloat = vectorIterator;\nIteratorVisitor.prototype.visitFloat16 = vectorIterator;\nIteratorVisitor.prototype.visitFloat32 = vectorIterator;\nIteratorVisitor.prototype.visitFloat64 = vectorIterator;\nIteratorVisitor.prototype.visitUtf8 = vectorIterator;\nIteratorVisitor.prototype.visitBinary = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary = vectorIterator;\nIteratorVisitor.prototype.visitDate = vectorIterator;\nIteratorVisitor.prototype.visitDateDay = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitTime = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond = vectorIterator;\nIteratorVisitor.prototype.visitDecimal = vectorIterator;\nIteratorVisitor.prototype.visitList = vectorIterator;\nIteratorVisitor.prototype.visitStruct = vectorIterator;\nIteratorVisitor.prototype.visitUnion = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion = vectorIterator;\nIteratorVisitor.prototype.visitDictionary = vectorIterator;\nIteratorVisitor.prototype.visitInterval = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList = vectorIterator;\nIteratorVisitor.prototype.visitMap = vectorIterator;\n/** @ignore */\nexport const instance = new IteratorVisitor();\n\n//# sourceMappingURL=iterator.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { instance as iteratorVisitor } from './iterator';\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {\n}\n/** @ignore */\nfunction arrayOfVector(vector) {\n    const { type, length, stride } = vector;\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float:\n        case Type.Decimal:\n        case Type.Time:\n        case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)];\n}\nToArrayVisitor.prototype.visitNull = arrayOfVector;\nToArrayVisitor.prototype.visitBool = arrayOfVector;\nToArrayVisitor.prototype.visitInt = arrayOfVector;\nToArrayVisitor.prototype.visitInt8 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16 = arrayOfVector;\nToArrayVisitor.prototype.visitInt32 = arrayOfVector;\nToArrayVisitor.prototype.visitInt64 = arrayOfVector;\nToArrayVisitor.prototype.visitUint8 = arrayOfVector;\nToArrayVisitor.prototype.visitUint16 = arrayOfVector;\nToArrayVisitor.prototype.visitUint32 = arrayOfVector;\nToArrayVisitor.prototype.visitUint64 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32 = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64 = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary = arrayOfVector;\nToArrayVisitor.prototype.visitDate = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTime = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal = arrayOfVector;\nToArrayVisitor.prototype.visitList = arrayOfVector;\nToArrayVisitor.prototype.visitStruct = arrayOfVector;\nToArrayVisitor.prototype.visitUnion = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary = arrayOfVector;\nToArrayVisitor.prototype.visitInterval = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList = arrayOfVector;\nToArrayVisitor.prototype.visitMap = arrayOfVector;\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n\n//# sourceMappingURL=toarray.mjs.map\n","/* istanbul ignore file */\nimport { Visitor } from '../visitor';\nimport { TimeUnit } from '../enum';\n/** @ignore */ const sum = (x, y) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type) => `Cannot compute the byte width of variable-width column ${type}`;\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    visitNull(____) { return 0; }\n    visitInt(type) { return type.bitWidth / 8; }\n    visitFloat(type) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    visitBinary(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitUtf8(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitBool(____) { return 1 / 8; }\n    visitDecimal(____) { return 16; }\n    visitDate(type) { return (type.unit + 1) * 4; }\n    visitTime(type) { return type.bitWidth / 8; }\n    visitTimestamp(type) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    visitInterval(type) { return (type.unit + 1) * 4; }\n    visitList(type) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    visitStruct(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitUnion(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitFixedSizeBinary(type) { return type.byteWidth; }\n    visitFixedSizeList(type) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    visitMap(type) { return this.visitFields(type.children).reduce(sum, 0); }\n    visitDictionary(type) { return this.visit(type.indices); }\n    visitFields(fields) { return (fields || []).map((field) => this.visit(field.type)); }\n    visitSchema(schema) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n\n//# sourceMappingURL=bytewidth.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    visitNull() { return NullVector; }\n    visitBool() { return BoolVector; }\n    visitInt() { return IntVector; }\n    visitInt8() { return Int8Vector; }\n    visitInt16() { return Int16Vector; }\n    visitInt32() { return Int32Vector; }\n    visitInt64() { return Int64Vector; }\n    visitUint8() { return Uint8Vector; }\n    visitUint16() { return Uint16Vector; }\n    visitUint32() { return Uint32Vector; }\n    visitUint64() { return Uint64Vector; }\n    visitFloat() { return FloatVector; }\n    visitFloat16() { return Float16Vector; }\n    visitFloat32() { return Float32Vector; }\n    visitFloat64() { return Float64Vector; }\n    visitUtf8() { return Utf8Vector; }\n    visitBinary() { return BinaryVector; }\n    visitFixedSizeBinary() { return FixedSizeBinaryVector; }\n    visitDate() { return DateVector; }\n    visitDateDay() { return DateDayVector; }\n    visitDateMillisecond() { return DateMillisecondVector; }\n    visitTimestamp() { return TimestampVector; }\n    visitTimestampSecond() { return TimestampSecondVector; }\n    visitTimestampMillisecond() { return TimestampMillisecondVector; }\n    visitTimestampMicrosecond() { return TimestampMicrosecondVector; }\n    visitTimestampNanosecond() { return TimestampNanosecondVector; }\n    visitTime() { return TimeVector; }\n    visitTimeSecond() { return TimeSecondVector; }\n    visitTimeMillisecond() { return TimeMillisecondVector; }\n    visitTimeMicrosecond() { return TimeMicrosecondVector; }\n    visitTimeNanosecond() { return TimeNanosecondVector; }\n    visitDecimal() { return DecimalVector; }\n    visitList() { return ListVector; }\n    visitStruct() { return StructVector; }\n    visitUnion() { return UnionVector; }\n    visitDenseUnion() { return DenseUnionVector; }\n    visitSparseUnion() { return SparseUnionVector; }\n    visitDictionary() { return DictionaryVector; }\n    visitInterval() { return IntervalVector; }\n    visitIntervalDayTime() { return IntervalDayTimeVector; }\n    visitIntervalYearMonth() { return IntervalYearMonthVector; }\n    visitFixedSizeList() { return FixedSizeListVector; }\n    visitMap() { return MapVector; }\n}\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n\n//# sourceMappingURL=vectorctor.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\nimport * as fn from '../util/fn';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder } from '../builder';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n/** @nocollapse */\nVector.new = newVector;\n/** @nocollapse */\nVector.from = vectorFrom;\n/** @ignore */\nfunction newVector(data, ...args) {\n    return new (getVectorConstructor.getVisitFn(data)())(data, ...args);\n}\n/** @ignore */\nexport function vectorFromValuesWithType(newDataType, input) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input });\n    }\n    else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input });\n    }\n    const { 'values': values = [], 'type': type = newDataType(), 'nullValues': nullValues = [null, undefined], } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type })\n        : Vector.from({ nullValues, ...input, type });\n}\nfunction vectorFrom(input) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input };\n    if (isIterable(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat(chunks);\n    }\n    return (async (chunks) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat(chunks);\n    })([]);\n}\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\nBaseVector.prototype.get = function baseVectorGet(index) {\n    return getVisitor.visit(this, index);\n};\nBaseVector.prototype.set = function baseVectorSet(index, value) {\n    return setVisitor.visit(this, index, value);\n};\nBaseVector.prototype.indexOf = function baseVectorIndexOf(value, fromIndex) {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\nBaseVector.prototype.toArray = function baseVectorToArray() {\n    return toArrayVisitor.visit(this);\n};\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth() {\n    return byteWidthVisitor.visit(this.type);\n};\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator() {\n    return iteratorVisitor.visit(this);\n};\nBaseVector.prototype._bindDataAccessors = bindBaseVectorDataAccessors;\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\nObject.keys(Type)\n    .map((T) => Type[T])\n    .filter((T) => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n    const VectorCtor = getVectorConstructor.visit(typeId);\n    VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n    VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n    VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n});\n/** @ignore */\nfunction partialType0(visit) {\n    return function () { return visit(this.type); };\n}\n/** @ignore */\nfunction wrapNullableGet(fn) {\n    return function (i) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n/** @ignore */\nfunction wrapNullableSet(fn) {\n    return function (i, a) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n/** @ignore */\nfunction bindBaseVectorDataAccessors() {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n\n//# sourceMappingURL=index.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Column } from './column';\nimport { Schema } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { RecordBatchReader } from './ipc/reader';\nimport { Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Chunked, StructVector } from './vector/index';\nexport class Table extends Chunked {\n    constructor(...args) {\n        let schema = null;\n        if (args[0] instanceof Schema) {\n            schema = args.shift();\n        }\n        let chunks = selectArgs(RecordBatch, args);\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n        super(new Struct(schema.fields), chunks);\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n    /** @nocollapse */\n    static empty(schema = new Schema([])) { return new Table(schema, []); }\n    /** @nocollapse */\n    static from(input) {\n        if (!input) {\n            return Table.empty();\n        }\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable(input)\n                : isAsyncIterable(input['values']) ? tableFromAsyncIterable(input)\n                    : null;\n            if (table !== null) {\n                return table;\n            }\n        }\n        let reader = RecordBatchReader.from(input);\n        if (isPromise(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n    /** @nocollapse */\n    static async fromAsync(source) {\n        return await Table.from(source);\n    }\n    /** @nocollapse */\n    static fromStruct(vector) {\n        return Table.new(vector.data.childData, vector.type.children);\n    }\n    /** @nocollapse */\n    static new(...cols) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n    get schema() { return this._schema; }\n    get length() { return this._length; }\n    get chunks() { return this._chunks; }\n    get numCols() { return this._numChildren; }\n    clone(chunks = this._chunks) {\n        return new Table(this._schema, chunks);\n    }\n    getColumn(name) {\n        return this.getColumnAt(this.getColumnIndex(name));\n    }\n    getColumnAt(index) {\n        return this.getChildAt(index);\n    }\n    getColumnIndex(name) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    getChildAt(index) {\n        if (index < 0 || index >= this.numChildren) {\n            return null;\n        }\n        let field, child;\n        const fields = this._schema.fields;\n        const columns = this._children || (this._children = []);\n        if (child = columns[index]) {\n            return child;\n        }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt(index))\n                .filter((vec) => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column(field, chunks));\n            }\n        }\n        return null;\n    }\n    // @ts-ignore\n    serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    count() {\n        return this._length;\n    }\n    select(...columnNames) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name, i), new Map());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)).filter((x) => x > -1));\n    }\n    selectAt(...columnIndices) {\n        const schema = this._schema.selectAt(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    assign(other) {\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []]);\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) => (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))),\n            ...indices.map((i) => other.getColumnAt(i))\n        ].filter(Boolean);\n        return new Table(...distributeVectorsIntoRecordBatches(schema, columns));\n    }\n}\nfunction tableFromIterable(input) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input));\n    }\n    return null;\n}\nfunction tableFromAsyncIterable(input) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n\n//# sourceMappingURL=table.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { StructVector } from './vector/index';\nexport class RecordBatch extends StructVector {\n    constructor(...args) {\n        let data;\n        let schema = args[0];\n        let children;\n        if (args[1] instanceof Data) {\n            [, data, children] = args;\n        }\n        else {\n            const fields = schema.fields;\n            const [, length, childData] = args;\n            data = Data.Struct(new Struct(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n    /** @nocollapse */\n    static from(options) {\n        if (isIterable(options['values'])) {\n            return Table.from(options);\n        }\n        return Table.from(options);\n    }\n    /** @nocollapse */\n    static new(...args) {\n        const [fs, xs] = selectFieldArgs(args);\n        const vs = xs.filter((x) => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema(fs), vs.map((x) => x.data)));\n    }\n    clone(data, children = this._children) {\n        return new RecordBatch(this._schema, data, children);\n    }\n    concat(...others) {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n    get schema() { return this._schema; }\n    get numCols() { return this._schema.fields.length; }\n    get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n    select(...columnNames) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name, i), new Map());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)).filter((x) => x > -1));\n    }\n    selectAt(...columnIndices) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch(schema, this.length, childData);\n    }\n}\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch extends RecordBatch {\n    constructor(schema) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    constructor() {\n        super(...arguments);\n        this.dictionaries = new Map();\n    }\n    static collect(batch) {\n        return new DictionaryCollector().visit(batch.data, new Struct(batch.schema.fields)).dictionaries;\n    }\n    visit(data, type) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        }\n        else {\n            data.childData.forEach((child, i) => this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    visitDictionary(data, type) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n\n//# sourceMappingURL=recordbatch.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport streamAdapters from '../io/adapters';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { ITERATOR_DONE, ReadableInterop, } from '../io/interfaces';\nimport { MessageReader, AsyncMessageReader, JSONMessageReader, checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding } from './message';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, isArrowJSON, isFileHandle, isFetchResponse, isReadableDOMStream, isReadableNodeStream } from '../util/compat';\nexport class RecordBatchReader extends ReadableInterop {\n    constructor(impl) {\n        super();\n        this._impl = impl;\n    }\n    get closed() { return this._impl.closed; }\n    get schema() { return this._impl.schema; }\n    get autoDestroy() { return this._impl.autoDestroy; }\n    get dictionaries() { return this._impl.dictionaries; }\n    get numDictionaries() { return this._impl.numDictionaries; }\n    get numRecordBatches() { return this._impl.numRecordBatches; }\n    get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n    isSync() { return this._impl.isSync(); }\n    isAsync() { return this._impl.isAsync(); }\n    isFile() { return this._impl.isFile(); }\n    isStream() { return this._impl.isStream(); }\n    next() {\n        return this._impl.next();\n    }\n    throw(value) {\n        return this._impl.throw(value);\n    }\n    return(value) {\n        return this._impl.return(value);\n    }\n    cancel() {\n        return this._impl.cancel();\n    }\n    reset(schema) {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    open(options) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    readRecordBatch(index) {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    [Symbol.iterator]() {\n        return this._impl[Symbol.iterator]();\n    }\n    [Symbol.asyncIterator]() {\n        return this._impl[Symbol.asyncIterator]();\n    }\n    toDOMStream() {\n        return streamAdapters.toDOMStream((this.isSync()\n            ? { [Symbol.iterator]: () => this }\n            : { [Symbol.asyncIterator]: () => this }));\n    }\n    toNodeStream() {\n        return streamAdapters.toNodeStream((this.isSync()\n            ? { [Symbol.iterator]: () => this }\n            : { [Symbol.asyncIterator]: () => this }), { objectMode: true });\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    static throughNode(options) {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static throughDOM(\n    // @ts-ignore\n    writableStrategy, \n    // @ts-ignore\n    readableStrategy) {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n    /** @nocollapse */\n    static from(source) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        }\n        else if (isArrowJSON(source)) {\n            return fromArrowJSON(source);\n        }\n        else if (isFileHandle(source)) {\n            return fromFileHandle(source);\n        }\n        else if (isPromise(source)) {\n            return (async () => await RecordBatchReader.from(await source))();\n        }\n        else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream(new AsyncByteStream(source));\n        }\n        return fromByteStream(new ByteStream(source));\n    }\n    /** @nocollapse */\n    static readAll(source) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source);\n        }\n        else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable(source) || isIteratorResult(source)) {\n            return readAllSync(source);\n        }\n        return readAllAsync(source);\n    }\n}\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n/** @ignore */\nexport class RecordBatchStreamReader extends RecordBatchReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n    [Symbol.iterator]() { return this._impl[Symbol.iterator](); }\n    async *[Symbol.asyncIterator]() { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader extends RecordBatchReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n    [Symbol.iterator]() { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    [Symbol.asyncIterator]() { return this._impl[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader extends RecordBatchStreamReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader extends AsyncRecordBatchStreamReader {\n    constructor(_impl) {\n        super(_impl);\n        this._impl = _impl;\n    }\n}\n/** @ignore */\nclass RecordBatchReaderImpl {\n    constructor(dictionaries = new Map()) {\n        this.closed = false;\n        this.autoDestroy = true;\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.dictionaries = dictionaries;\n    }\n    get numDictionaries() { return this._dictionaryIndex; }\n    get numRecordBatches() { return this._recordBatchIndex; }\n    isSync() { return false; }\n    isAsync() { return false; }\n    isFile() { return false; }\n    isStream() { return false; }\n    reset(schema) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n    _loadRecordBatch(header, body) {\n        return new RecordBatch(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    _loadDictionaryBatch(header, body) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id);\n            return (dictionary && isDelta ? dictionary.concat(Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0]));\n        }\n        return dictionary;\n    }\n    _loadVectors(header, body, types) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n/** @ignore */\nclass RecordBatchStreamReaderImpl extends RecordBatchReaderImpl {\n    constructor(source, dictionaries) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n    isSync() { return true; }\n    isStream() { return true; }\n    [Symbol.iterator]() {\n        return this;\n    }\n    cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = null;\n            this.dictionaries = null;\n        }\n    }\n    open(options) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    throw(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    return(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    next() {\n        if (this.closed) {\n            return ITERATOR_DONE;\n        }\n        let message, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            }\n            else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            }\n            else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch(this.schema) };\n        }\n        return this.return();\n    }\n    _readNextMessageAndValidate(type) {\n        return this._reader.readMessage(type);\n    }\n}\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl extends RecordBatchReaderImpl {\n    constructor(source, dictionaries) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    isAsync() { return true; }\n    isStream() { return true; }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = null;\n            this.dictionaries = null;\n        }\n    }\n    async open(options) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    async throw(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    async return(value) {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    async next() {\n        if (this.closed) {\n            return ITERATOR_DONE;\n        }\n        let message, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            }\n            else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            }\n            else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch(this.schema) };\n        }\n        return await this.return();\n    }\n    async _readNextMessageAndValidate(type) {\n        return await this._reader.readMessage(type);\n    }\n}\n/** @ignore */\nclass RecordBatchFileReaderImpl extends RecordBatchStreamReaderImpl {\n    constructor(source, dictionaries) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    get footer() { return this._footer; }\n    get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n    isSync() { return true; }\n    isFile() { return true; }\n    open(options) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    readRecordBatch(index) {\n        if (this.closed) {\n            return null;\n        }\n        if (!this._footer) {\n            this.open();\n        }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    _readDictionaryBatch(index) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    _readNextMessageAndValidate(type) {\n        if (!this._footer) {\n            this.open();\n        }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl extends AsyncRecordBatchStreamReaderImpl {\n    constructor(source, ...rest) {\n        const byteLength = typeof rest[0] !== 'number' ? rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    get footer() { return this._footer; }\n    get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n    isFile() { return true; }\n    isAsync() { return true; }\n    async open(options) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    async readRecordBatch(index) {\n        if (this.closed) {\n            return null;\n        }\n        if (!this._footer) {\n            await this.open();\n        }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    async _readDictionaryBatch(index) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    async _readNextMessageAndValidate(type) {\n        if (!this._footer) {\n            await this.open();\n        }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n/** @ignore */\nclass RecordBatchJSONReaderImpl extends RecordBatchStreamReaderImpl {\n    constructor(source, dictionaries) {\n        super(source, dictionaries);\n    }\n    _loadVectors(header, body, types) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n/** @ignore */\nfunction shouldAutoDestroy(self, options) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n/** @ignore */\nfunction* readAllSync(source) {\n    const reader = RecordBatchReader.from(source);\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do {\n                yield reader;\n            } while (!(reader.reset().open()).closed);\n        }\n    }\n    finally {\n        reader.cancel();\n    }\n}\n/** @ignore */\nasync function* readAllAsync(source) {\n    const reader = await RecordBatchReader.from(source);\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do {\n                yield reader;\n            } while (!(await reader.reset().open()).closed);\n        }\n    }\n    finally {\n        await reader.cancel();\n    }\n}\n/** @ignore */\nfunction fromArrowJSON(source) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl(source));\n}\n/** @ignore */\nfunction fromByteStream(source) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl(function* () { }()));\n}\n/** @ignore */\nasync function fromAsyncByteStream(source) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(async function* () { }()));\n}\n/** @ignore */\nasync function fromFileHandle(source) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl(file));\n}\n\n//# sourceMappingURL=reader.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Builder } from '../../builder/index';\n/** @ignore */\nexport function builderThroughDOMStream(options) {\n    return new BuilderTransform(options);\n}\n/** @ignore */\nexport class BuilderTransform {\n    constructor(options) {\n        // Access properties by string indexers to defeat closure compiler\n        this._numChunks = 0;\n        this._finished = false;\n        this._bufferedSize = 0;\n        const { ['readableStrategy']: readableStrategy, ['writableStrategy']: writableStrategy, ['queueingStrategy']: queueingStrategy = 'count', ...builderOptions } = options;\n        this._controller = null;\n        this._builder = Builder.new(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n        this['readable'] = new ReadableStream({\n            ['cancel']: () => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n    _writeValueAndReturnChunkSize(value) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n    _maybeFlush(builder, controller) {\n        if (controller === null) {\n            return;\n        }\n        if (this._bufferedSize >= controller.desiredSize) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n    _enqueue(controller, chunk) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n/** @ignore */ const chunkLength = (chunk) => chunk.length;\n/** @ignore */ const chunkByteLength = (chunk) => chunk.byteLength;\n\n//# sourceMappingURL=builder.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { DictionaryVector } from '../vector/dictionary';\n/** @ignore */\nexport class Value {\n    eq(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new Equals(this, other);\n    }\n    le(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new LTeq(this, other);\n    }\n    ge(other) {\n        if (!(other instanceof Value)) {\n            other = new Literal(other);\n        }\n        return new GTeq(this, other);\n    }\n    lt(other) {\n        return new Not(this.ge(other));\n    }\n    gt(other) {\n        return new Not(this.le(other));\n    }\n    ne(other) {\n        return new Not(this.eq(other));\n    }\n}\n/** @ignore */\nexport class Literal extends Value {\n    constructor(v) {\n        super();\n        this.v = v;\n    }\n}\n/** @ignore */\nexport class Col extends Value {\n    constructor(name) {\n        super();\n        this.name = name;\n    }\n    bind(batch) {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) {\n                throw new Error(`Failed to bind Col \"${this.name}\"`);\n            }\n        }\n        const vec = this.vector = batch.getChildAt(this.colidx);\n        return (idx) => vec.get(idx);\n    }\n}\n/** @ignore */\nexport class Predicate {\n    and(...expr) { return new And(this, ...expr); }\n    or(...expr) { return new Or(this, ...expr); }\n    not() { return new Not(this); }\n}\n/** @ignore */\nexport class ComparisonPredicate extends Predicate {\n    constructor(left, right) {\n        super();\n        this.left = left;\n        this.right = right;\n    }\n    bind(batch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            }\n            else { // right is a Col\n                return this._bindLitCol(batch, this.left, this.right);\n            }\n        }\n        else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left, this.right);\n            }\n            else { // right is a Col\n                return this._bindColCol(batch, this.left, this.right);\n            }\n        }\n    }\n}\n/** @ignore */\nexport class CombinationPredicate extends Predicate {\n    constructor(...children) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\nCombinationPredicate.prototype.children = Object.freeze([]); // freeze for safety\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children) {\n        // Flatten any Ands\n        children = children.reduce((accum, p) => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx, batch) => bound.every((p) => p(idx, batch));\n    }\n}\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children) {\n        // Flatten any Ors\n        children = children.reduce((accum, p) => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx, batch) => bound.some((p) => p(idx, batch));\n    }\n}\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v == right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, batch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key;\n            const vector = col.vector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            }\n            else {\n                key = this.lastKey;\n            }\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            }\n            else {\n                return (idx) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        }\n        else {\n            return (idx, cols) => col_func(idx, cols) == lit.v;\n        }\n    }\n    _bindLitCol(batch, lit, col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v <= right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, cols) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => col_func(idx, cols) <= lit.v;\n    }\n    _bindLitCol(batch, lit, col) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => lit.v <= col_func(idx, cols);\n    }\n}\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    _bindLitLit(_batch, left, right) {\n        const rtrn = left.v >= right.v;\n        return () => rtrn;\n    }\n    _bindColCol(batch, left, right) {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx, cols) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n    _bindColLit(batch, col, lit) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => col_func(idx, cols) >= lit.v;\n    }\n    _bindLitCol(batch, lit, col) {\n        const col_func = col.bind(batch);\n        return (idx, cols) => lit.v >= col_func(idx, cols);\n    }\n}\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(child) {\n        super();\n        this.child = child;\n    }\n    bind(batch) {\n        const func = this.child.bind(batch);\n        return (idx, batch) => !func(idx, batch);\n    }\n}\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(next, bind_) {\n        super();\n        this.next = next;\n        this.bind_ = bind_;\n    }\n    bind(batch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\nexport function lit(v) { return new Literal(v); }\nexport function col(n) { return new Col(n); }\nexport function and(...p) { return new And(...p); }\nexport function or(...p) { return new Or(...p); }\nexport function custom(next, bind) {\n    return new CustomPredicate(next, bind);\n}\n\n//# sourceMappingURL=predicate.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Table } from '../table';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { DataType } from '../type';\nTable.prototype.countBy = function (name) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function (next, bind) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function (next, bind) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function (predicate) { return new DataFrame(this.chunks).filter(predicate); };\nexport class DataFrame extends Table {\n    filter(predicate) {\n        return new FilteredDataFrame(this.chunks, predicate);\n    }\n    scan(next, bind) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) {\n                bind(batch);\n            }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    scanReverse(next, bind) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) {\n                bind(batch);\n            }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    countBy(name) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n            countByteLength >= 2 ? Uint16Array : Uint8Array;\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = count_by.vector.indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) {\n                    counts[key]++;\n                }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n/** @ignore */\nexport class CountByResult extends Table {\n    constructor(values, counts) {\n        const schema = new Schema([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch(schema, counts.length, [values, counts]));\n    }\n    toJSON() {\n        const values = this.getColumnAt(0);\n        const counts = this.getColumnAt(1);\n        const result = {};\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n/** @ignore */\nexport class FilteredDataFrame extends DataFrame {\n    constructor(batches, predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    scan(next, bind) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    scanReverse(next, bind) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    count() {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    ++sum;\n                }\n            }\n        }\n        return sum;\n    }\n    *[Symbol.iterator]() {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    yield batch.get(index);\n                }\n            }\n        }\n    }\n    filter(predicate) {\n        return new FilteredDataFrame(this._chunks, this._predicate.and(predicate));\n    }\n    countBy(name) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n            countByteLength >= 2 ? Uint16Array : Uint8Array;\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = count_by.vector.indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) {\n                    counts[key]++;\n                }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n//# sourceMappingURL=dataframe.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType, Data, DataType, Null, Bool, Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64, Float, Float16, Float32, Float64, Utf8, Binary, FixedSizeBinary, Date_, DateDay, DateMillisecond, Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond, Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond, Decimal, List, Struct, Union, DenseUnion, SparseUnion, Dictionary, Interval, IntervalDayTime, IntervalYearMonth, FixedSizeList, Map_, Table, Column, Schema, Field, Visitor, Vector, BaseVector, BinaryVector, BoolVector, Chunked, DateVector, DateDayVector, DateMillisecondVector, DecimalVector, DictionaryVector, FixedSizeBinaryVector, FixedSizeListVector, FloatVector, Float16Vector, Float32Vector, Float64Vector, IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector, IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector, ListVector, MapVector, NullVector, StructVector, TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector, TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector, UnionVector, DenseUnionVector, SparseUnionVector, Utf8Vector, ByteStream, AsyncByteStream, AsyncByteQueue, RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader, RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter, MessageReader, AsyncMessageReader, JSONMessageReader, Message, RecordBatch, DataFrame, FilteredDataFrame, CountByResult, predicate, util, Builder, BinaryBuilder, BoolBuilder, DateBuilder, DateDayBuilder, DateMillisecondBuilder, DecimalBuilder, DictionaryBuilder, FixedSizeBinaryBuilder, FixedSizeListBuilder, FloatBuilder, Float16Builder, Float32Builder, Float64Builder, IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder, IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder, ListBuilder, MapBuilder, NullBuilder, StructBuilder, TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder, TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder, UnionBuilder, DenseUnionBuilder, SparseUnionBuilder, Utf8Builder, } from './Arrow';\n\n//# sourceMappingURL=Arrow.dom.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from '../../util/buffer';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n/** @ignore */\nexport function toDOMStream(source, options) {\n    if (isAsyncIterable(source)) {\n        return asyncIterableAsReadableDOMStream(source, options);\n    }\n    if (isIterable(source)) {\n        return iterableAsReadableDOMStream(source, options);\n    }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n/** @ignore */\nfunction iterableAsReadableDOMStream(source, options) {\n    let it = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n    return new ReadableStream({\n        ...options,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n    function next(controller, it) {\n        let buf;\n        let r = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream(source, options) {\n    let it = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n    return new ReadableStream({\n        ...options,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n    async function next(controller, it) {\n        let buf;\n        let r = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n\n//# sourceMappingURL=iterable.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream(writableStrategy, readableStrategy) {\n    const queue = new AsyncByteQueue();\n    let reader = null;\n    const readable = new ReadableStream({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n    async function open() {\n        return await (await RecordBatchReader.from(queue)).open(readableStrategy);\n    }\n    async function next(controller, reader) {\n        let size = controller.desiredSize;\n        let r = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n\n//# sourceMappingURL=reader.mjs.map\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { AsyncByteStream } from '../../io/stream';\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream(writableStrategy, readableStrategy) {\n    const writer = new this(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n    async function next(controller) {\n        let buf = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n\n//# sourceMappingURL=writer.mjs.map\n","/**\n * @license\n * Copyright 2018-2019 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from 'apache-arrow';\nexport class ArrowTable {\n    dataTable;\n    indexTable;\n    columnsTable;\n    styler;\n    constructor(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.get('caption'),\n                displayValuesTable: Table.from(styler.get('displayValues')),\n                styles: styler.get('styles'),\n                uuid: styler.get('uuid'),\n            }\n            : undefined;\n    }\n    get rows() {\n        return this.indexTable.length + this.columnsTable.numCols;\n    }\n    get columns() {\n        return this.indexTable.numCols + this.columnsTable.length;\n    }\n    get headerRows() {\n        return this.rows - this.dataRows;\n    }\n    get headerColumns() {\n        return this.columns - this.dataColumns;\n    }\n    get dataRows() {\n        return this.dataTable.length;\n    }\n    get dataColumns() {\n        return this.dataTable.numCols;\n    }\n    get uuid() {\n        return this.styler && this.styler.uuid;\n    }\n    get caption() {\n        return this.styler && this.styler.caption;\n    }\n    get styles() {\n        return this.styler && this.styler.styles;\n    }\n    get table() {\n        return this.dataTable;\n    }\n    get index() {\n        return this.indexTable;\n    }\n    get columnTable() {\n        return this.columnsTable;\n    }\n    getCell = (rowIndex, columnIndex) => {\n        const isBlankCell = rowIndex < this.headerRows && columnIndex < this.headerColumns;\n        const isIndexCell = rowIndex >= this.headerRows && columnIndex < this.headerColumns;\n        const isColumnsCell = rowIndex < this.headerRows && columnIndex >= this.headerColumns;\n        if (isBlankCell) {\n            const classNames = ['blank'];\n            if (columnIndex > 0) {\n                classNames.push('level' + rowIndex);\n            }\n            return {\n                type: 'blank',\n                classNames: classNames.join(' '),\n                content: '',\n            };\n        }\n        else if (isColumnsCell) {\n            const dataColumnIndex = columnIndex - this.headerColumns;\n            const classNames = [\n                'col_heading',\n                'level' + rowIndex,\n                'col' + dataColumnIndex,\n            ];\n            return {\n                type: 'columns',\n                classNames: classNames.join(' '),\n                content: this.getContent(this.columnsTable, dataColumnIndex, rowIndex),\n            };\n        }\n        else if (isIndexCell) {\n            const dataRowIndex = rowIndex - this.headerRows;\n            const classNames = [\n                'row_heading',\n                'level' + columnIndex,\n                'row' + dataRowIndex,\n            ];\n            return {\n                type: 'index',\n                id: `T_${this.uuid}level${columnIndex}_row${dataRowIndex}`,\n                classNames: classNames.join(' '),\n                content: this.getContent(this.indexTable, dataRowIndex, columnIndex),\n            };\n        }\n        else {\n            const dataRowIndex = rowIndex - this.headerRows;\n            const dataColumnIndex = columnIndex - this.headerColumns;\n            const classNames = [\n                'data',\n                'row' + dataRowIndex,\n                'col' + dataColumnIndex,\n            ];\n            const content = this.styler\n                ? this.getContent(this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                : this.getContent(this.dataTable, dataRowIndex, dataColumnIndex);\n            return {\n                type: 'data',\n                id: `T_${this.uuid}row${dataRowIndex}_col${dataColumnIndex}`,\n                classNames: classNames.join(' '),\n                content,\n            };\n        }\n    };\n    getContent = (table, rowIndex, columnIndex) => {\n        const column = table.getColumnAt(columnIndex);\n        if (column === null) {\n            return '';\n        }\n        const columnTypeId = this.getColumnTypeId(table, columnIndex);\n        switch (columnTypeId) {\n            case Type.Timestamp: {\n                return this.nanosToDate(column.get(rowIndex));\n            }\n            default: {\n                return column.get(rowIndex);\n            }\n        }\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    getColumnTypeId(table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    }\n    nanosToDate(nanos) {\n        return new Date(nanos / 1e6);\n    }\n}\n","/**\n * @license\n * Copyright 2018-2020 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from 'event-target-shim';\nimport { ArrowTable } from './ArrowTable';\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nexport class Streamlit {\n    /**\n     * The Streamlit component API version we're targetting.\n     * There's currently only 1!\n     */\n    static API_VERSION = 1;\n    static RENDER_EVENT = 'streamlit:render';\n    /** Dispatches events received from Streamlit. */\n    static events = new EventTarget();\n    static registeredMessageListener = false;\n    static lastFrameHeight;\n    /**\n     * Tell Streamlit that the component is ready to start receiving data.\n     * Streamlit will defer emitting RENDER events until it receives the\n     * COMPONENT_READY message.\n     */\n    static setComponentReady = () => {\n        if (!Streamlit.registeredMessageListener) {\n            // Register for message events if we haven't already\n            window.addEventListener('message', Streamlit.onMessageEvent);\n            Streamlit.registeredMessageListener = true;\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n            apiVersion: Streamlit.API_VERSION,\n        });\n    };\n    /**\n     * Report the component's height to Streamlit.\n     * This should be called every time the component changes its DOM - that is,\n     * when it's first loaded, and any time it updates.\n     */\n    static setFrameHeight = (height) => {\n        if (height === undefined) {\n            // `height` is optional. If undefined, it defaults to scrollHeight,\n            // which is the entire height of the element minus its border,\n            // scrollbar, and margin.\n            height = document.body.scrollHeight;\n        }\n        if (height === Streamlit.lastFrameHeight) {\n            // Don't bother updating if our height hasn't changed.\n            return;\n        }\n        Streamlit.lastFrameHeight = height;\n        Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height });\n    };\n    /**\n     * Set the component's value. This value will be returned to the Python\n     * script, and the script will be re-run.\n     *\n     * For example:\n     *\n     * JavaScript:\n     * Streamlit.setComponentValue(\"ahoy!\")\n     *\n     * Python:\n     * value = st.my_component(...)\n     * st.write(value) # -> \"ahoy!\"\n     *\n     * The value must be serializable into JSON.\n     */\n    static setComponentValue = (value) => {\n        Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n            value,\n        });\n    };\n    /** Receive a ForwardMsg from the Streamlit app */\n    static onMessageEvent = (event) => {\n        const type = event.data['type'];\n        switch (type) {\n            case Streamlit.RENDER_EVENT:\n                Streamlit.onRenderMessage(event.data);\n                break;\n        }\n    };\n    /**\n     * Handle an untyped Streamlit render event and redispatch it as a\n     * StreamlitRenderEvent.\n     */\n    static onRenderMessage = (data) => {\n        let args = data['args'];\n        if (args == null) {\n            console.error(`Got null args in onRenderMessage. This should never happen`);\n            args = {};\n        }\n        // Parse our dataframe arguments with arrow, and merge them into our args dict\n        const dataframeArgs = data['dfs'] && data['dfs'].length > 0\n            ? Streamlit.argsDataframeToObject(data['dfs'])\n            : {};\n        args = {\n            ...args,\n            ...dataframeArgs,\n        };\n        const disabled = Boolean(data['disabled']);\n        // Dispatch a render event!\n        const eventData = { disabled, args };\n        const event = new CustomEvent(Streamlit.RENDER_EVENT, {\n            detail: eventData,\n        });\n        Streamlit.events.dispatchEvent(event);\n    };\n    static argsDataframeToObject = (argsDataframe) => {\n        const argsDataframeArrow = argsDataframe.map(({ key, value }) => [\n            key,\n            Streamlit.toArrowTable(value),\n        ]);\n        return Object.fromEntries(argsDataframeArrow);\n    };\n    static toArrowTable = (df) => {\n        const { data, index, columns } = df.data;\n        return new ArrowTable(data, index, columns);\n    };\n    /** Post a message to the Streamlit app. */\n    static sendBackMsg = (type, data) => {\n        window.parent.postMessage({\n            isStreamlitMessage: true,\n            type: type,\n            ...data,\n        }, '*');\n    };\n}\n","<script lang=\"ts\">\n    import { onMount, afterUpdate, onDestroy } from 'svelte'\n    import { Streamlit } from './streamlit'\n    import type { RenderData } from './streamlit'\n\n    /**\n     * Custom Streamlit component\n     */\n    export let component: any\n\n    /**\n     * Set to false if you want `args` (the named dictionary of arguments passed\n     * from Python) to be passed as a dictionary to your component.\n     *\n     * Default is `true`.\n     */\n    export let spreadArgs: boolean = true\n\n    // State\n    let renderData: RenderData\n\n    //  Props passed to custom Streamlit components.\n    /** Named dictionary of arguments passed from Python.\n     *  Arguments will be passed directly if `spreadArgs=true`\n     */\n    let args: any\n\n    /** The component's width. */\n    let width: number\n\n    /**\n     * True if the component should be disabled.\n     * All components get disabled while the app is being re-run,\n     * and become re-enabled when the re-run has finished.\n     */\n    let disabled: boolean\n\n    /**\n     * Streamlit is telling this component to redraw.\n     * We save the render data in State, so that it can be passed to the\n     * component.\n     */\n    const onRenderEvent = (event: Event): void => {\n        // Update our state with the newest render data\n        renderData = (event as CustomEvent<RenderData>).detail\n        args = renderData.args\n        disabled = renderData.disabled\n    }\n\n    onMount((): void => {\n        // Set up event listeners, and signal to Streamlit that we're ready.\n        // We won't render the component until we receive the first RENDER_EVENT.\n        Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRenderEvent)\n        Streamlit.setComponentReady()\n    })\n\n    onDestroy((): void => {\n        // Remove our `onRender` handler to Streamlit's render event.\n        Streamlit.events.removeEventListener(\n            Streamlit.RENDER_EVENT,\n            onRenderEvent\n        )\n    })\n</script>\n\n<svelte:window bind:innerWidth={width} />\n<!-- Don't render until we've gotten our first RENDER_EVENT from Streamlit. -->\n{#if renderData}\n    {#if spreadArgs}\n        <svelte:component this={component} {...args} {disabled} {width} />\n    {:else}\n        <svelte:component this={component} {args} {disabled} {width} />\n    {/if}\n{/if}\n","<script lang=\"ts\">\n    import { createEventDispatcher, getContext } from 'svelte'\n    import type { LabelMap } from './localization'\n\n    export let loginUrl: string\n\n    let isAuthenticating: boolean\n\n    const createLoginPopup = (): void => {\n        if (currentPopup && !currentPopup.closed) {\n            currentPopup.focus()\n            return\n        }\n\n        openPopup(loginUrl)\n        showPopup = true\n        isAuthenticating = true\n    }\n\n    const openPopup = (url: string): void => {\n        const width = 400\n        const height = 600\n        const left = window.screenX + (window.innerWidth - width) / 2\n        const top = window.screenY + (window.innerHeight - height) / 2\n\n        currentPopup = window.open(\n            url,\n            'keycloak:authorize:popup',\n            `left=${left},top=${top},width=${width},height=${height},resizable,scrollbars=yes,status=1`\n        )\n    }\n\n    const runPopup = async (popup: Window): Promise<Record<string, string>> => {\n        return new Promise((resolve, reject) => {\n            // Throw exception if popup is closed manually\n            const popupTimer = setInterval(() => {\n                if (popup.closed) {\n                    window.removeEventListener(\n                        'message',\n                        popupEventListener,\n                        false\n                    )\n                    clearInterval(popupTimer)\n\n                    reject(new Error(labels.errorPopupClosed))\n                }\n            }, 1000)\n\n            // Wait for postMessage from popup if login is successful\n            const popupEventListener = function (event: MessageEvent): void {\n                if (event.origin !== window.location.origin) return\n                if (!Object.keys(event.data).includes('code')) return\n\n                window.removeEventListener('message', popupEventListener, false)\n                clearInterval(popupTimer)\n\n                popup.close()\n                resolve(event.data)\n            }\n\n            window.addEventListener('message', popupEventListener)\n        })\n    }\n\n    const authenticateWithPopup = async (\n        popup: Window | null\n    ): Promise<void> => {\n        if (!popup) {\n            throw new Error(labels.errorNoPopup)\n        }\n\n        await runPopup(popup)\n        dispatch('loggedin')\n    }\n\n    const labels: LabelMap = getContext('localization')\n    const dispatch = createEventDispatcher()\n\n    let currentPopup: Window | null\n    let showPopup = false\n</script>\n\n<div on:loggedin style=\"text-align: center;\">\n    {#if isAuthenticating}\n        <div class=\"spinner-border\" role=\"status\">\n             <span class=\"sr-only\">Loading...</span>\n        </div>\n    {:else}\n        <div>\n            <p>{labels.labelLogin}</p>\n            <button type=\"button\" class=\"btn btn-primary\" on:click={createLoginPopup}>\n                <span>{labels.labelButton}</span>\n            </button>\n        </div>\n    {/if}\n    {#if showPopup}\n        {#await authenticateWithPopup(currentPopup) catch error}\n            <div class=\"alert alert-danger mt-3 mb-0\">{error.message}</div>\n        {/await}\n    {/if}\n</div>\n","export const defaultLabels = {\n    labelButton: 'Sign in',\n    labelLogin: 'Please sign in to your account.',\n    errorNoPopup: 'Unable to open the authentication popup. Allow popups and refresh the page to proceed.',\n    errorPopupClosed: 'Authentication popup was closed manually.',\n    errorFatal: 'Unable to connect to Keycloak using the current configuration.',\n};\n","<script lang=\"ts\">\n    import LoginDialog from './LoginDialog.svelte'\n\n    import { afterUpdate, onMount, setContext } from 'svelte'\n    import { Streamlit } from './streamlit'\n\n    import Keycloak from 'keycloak-js'\n    import type { KeycloakInitOptions, KeycloakLoginOptions } from 'keycloak-js'\n    import { LabelMap, defaultLabels } from './localization'\n\n    export let url: string\n    export let realm: string\n    export let clientId: string\n    export let autoRefresh: boolean = true\n    export let initOptions: KeycloakInitOptions = {}\n    export let loginOptions: KeycloakLoginOptions = {}\n    export let customLabels: LabelMap = {}\n\n    const rewritePage = (newPage: string): string => {\n        return (\n            window.location.origin +\n            window.location.pathname.replace(/\\/[^/]*$/, newPage)\n        )\n    }\n\n    const getLoginUrl = (): string => {\n        return keycloak.createLoginUrl({\n            ...loginOptions,\n           redirectUri: rewritePage('/login.html')\n        })\n    }\n\n    // Set up the response to Streamlit\n    const setComponentValue = async (): Promise<void> => {\n        if (!keycloak.userInfo && keycloak.authenticated) {\n            await keycloak.loadUserInfo()\n        }\n\n        let value\n        if (keycloak.authenticated) {\n            value = {\n                authenticated: true,\n                access_token: keycloak.token,\n                refresh_token: keycloak.refreshToken,\n                user_info: keycloak.userInfo,\n                id_token: keycloak.idToken,\n            }\n        } else {\n            value = { authenticated: false }\n        }\n\n        Streamlit.setComponentValue(value)\n\n    }\n\n    // Set up Keycloak events listeners to send state to Steamlit\n    const setKeycloakEventListeners = (autoRefresh: boolean): void => {\n        keycloak.onAuthError = async () => await setComponentValue()\n        keycloak.onAuthRefreshError = async () => await setComponentValue()\n        keycloak.onAuthSuccess = async () => await setComponentValue()\n        keycloak.onAuthRefreshSuccess = async () => await setComponentValue()\n        keycloak.onTokenExpired = async () => {\n            if (!autoRefresh || !keycloak.refreshToken) return\n            await keycloak.updateToken(10)\n        }\n    }\n\n    const authenticate = async (): Promise<boolean> => {\n        keycloak = new Keycloak({\n            url: url,\n            realm: realm,\n            clientId: clientId,\n        })\n\n        setKeycloakEventListeners(autoRefresh)\n        // Check if user is already logged in\n        return keycloak.init({\n            ...initOptions,\n            onLoad: 'check-sso',\n            silentCheckSsoRedirectUri: rewritePage('/check-sso.html'),\n        })\n    }\n\n    onMount((): void => {\n        Streamlit.setFrameHeight()\n    })\n\n    afterUpdate((): void => {\n        Streamlit.setFrameHeight(clientHeight)\n    })\n\n    let keycloak: Keycloak\n    let clientHeight: number\n\n    const labels = {\n        ...defaultLabels,\n        ...customLabels,\n    }\n\n    setContext('localization', labels)\n</script>\n\n<div bind:clientHeight style=\"text-align: center;\">\n    {#await authenticate()}\n        <div class=\"spinner-border\" role=\"status\">\n             <span class=\"sr-only\">Loading...</span>\n        </div>\n    {:then authenticated}\n        {#if !authenticated}\n            <LoginDialog\n                loginUrl={getLoginUrl()}\n                on:loggedin={() => {\n                    keycloak.login(loginOptions)\n                }}\n            />\n        {:else}\n            <div class=\"alert alert-success\" style=\"text-align: center;\">\n                <span>You are being redirected...</span>\n            </div>\n        {/if}\n    {:catch exception}\n        <div class=\"alert alert-danger\">\n            <span>{labels.errorFatal}</span>\n            <br />\n            <span>{exception.error}</span>\n        </div>\n    {/await}\n</div>","import { WithStreamlitConnection } from './streamlit';\nimport Keycloak from './Keycloak.svelte';\n// \"WithStreamlitConnection\" is a wrapper component. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nconst keycloakComponent = new WithStreamlitConnection({\n    target: document.body,\n    props: {\n        /**\n         * Custom Streamlit component\n         */\n        component: Keycloak,\n        /**\n         * Set to false if you want `args` (the named dictionary of arguments passed\n         * from Python) to be passed as a dictionary to your component.\n         *\n         * Default is `true`.\n         */\n        spreadArgs: true,\n    },\n});\nexport default keycloakComponent;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_style","key","important","style","removeProperty","setProperty","crossorigin","current_component","is_crossorigin","undefined","window","parent","error","construct_svelte_component","component","props","set_current_component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","defaultPrevented","bubble","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","handle_promise","promise","info","token","index","resolved","child_ctx","current","needs_flush","blocks","m","mount","then","catch","hasCatch","pending","update_await_block_branch","create_component","mount_component","customElement","new_on_destroy","map","filter","on_destroy","destroy_component","detaching","filtered","targets","indexOf","flush_render_callbacks","make_dirty","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","splice","$$props","obj","$$set","keys","privateData","WeakMap","wrappers","pd","retv","get","console","assert","setCancelFlag","passiveListener","canceled","preventDefault","Event","eventTarget","set","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","defineProperty","enumerable","defineRedirectDescriptor","configurable","defineCallDescriptor","apply","arguments","getWrapper","proto","prototype","wrapper","BaseEvent","CustomEvent","constructor","writable","isFunc","getOwnPropertyDescriptor","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","Boolean","composed","srcElement","cancelBubble","returnValue","setPrototypeOf","listenersMap","isObject","x","getListeners","listeners","TypeError","defineEventAttribute","eventTargetPrototype","eventName","listenerType","listener","next","prev","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","isArray","types","optionsIsObj","capture","wrappedEvent","wrapEvent","err","handleEvent","setEventPhase","setCurrentTarget","flatbuffers","inRange","min","max","ToDictionary","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","len","existing_vtable","vt1","outer_loop","vt2","readInt16","j","finish","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","s","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","String","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","Stream","tokens","endOfStream","read","shift","prepend","unshift","decoderError","fatal","opt_code_point","TextDecoder","encoding","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","count","temp","TextDecoder$1","decode","input","ArrayBuffer","byteOffset","byteLength","input_stream","code_points","cp","codePointsToString","TextEncoder$1","encode","opt_string","string","n","u","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","decodeUtf8","decoder","toUint8Array","toString","TextDecoderPolyfill","encodeUtf8","encoder","TextEncoderPolyfill","ITERATOR_DONE","freeze","done","ArrowJSON","_json","schema","batches","dictionaries","ReadableInterop","_getDOMStream","tee","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","AsyncQueue","super","_values","resolvers","_closedPromise","_closedPromiseResolve","closed","reason","return","_ensureOpen","_error","reject","Symbol","asyncIterator","streamAdapters","_","abort","close","_args","BigIntCtor","BigIntAvailable","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigInt64ArrayCtor","BigInt64ArrayAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BYTES_PER_ELEMENT","BigUint64ArrayCtor","BigUint64ArrayAvailable","BigUint64ArrayUnavailableError","BigUint64Array","isBoolean","isFunction","isPromise","isIterable","iterator","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isNumber","isFetchResponse","isReadableDOMStream","isReadableNodeStream","SharedArrayBuf","SharedArrayBuffer","memcpy","source","targetByteOffset","sourceByteLength","targetByteLength","dst","Math","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","y","collapseContiguousByteRanges","reduce","Infinity","toArrayBufferView","ArrayBufferViewCtor","isView","toInt32Array","toBigInt64Array","toBigUint64Array","pump","toArrayBufferViewIterator","ArrayCtor","wrap","buffers","it","toUint8ArrayIterator","async","toArrayBufferViewAsyncIterator","emit","toUint8ArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","cmd","threw","bufferLength","isNaN","throw","fromAsyncIterable","fromDOMStream","AdaptiveByteReader","releaseLock","fromNodeStream","events","onEvent","race","isFinite","evt","destroy","cleanup","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","readFromBYOBReader","mode","readInto","AbstractVector","org","apache","arrow","flatbuf","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","builder","startNull","endNull","Struct_","startStruct_","endStruct_","List","startList","endList","LargeList","startLargeList","endLargeList","FixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","keysSorted","startMap","addKeysSorted","endMap","Union","Sparse","typeIdsOffset","numElems","startUnion","addMode","addTypeIds","endUnion","Int","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","precision","startFloatingPoint","addPrecision","endFloatingPoint","Utf8","startUtf8","endUtf8","Binary","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","FixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","Bool","startBool","endBool","Decimal","scale","startDecimal","addScale","endDecimal","MILLISECOND","unit","startDate","addUnit","endDate","Time","startTime","endTime","Timestamp","SECOND","optionalEncoding","timezoneOffset","startTimestamp","addTimezone","endTimestamp","Interval","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","id","indexTypeOffset","isOrdered","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","Field","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Schema","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","NS7624605610262437867.org","MessageHeader","FieldNode","null_count","RecordBatch","nodesOffset","buffersOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","DictionaryBatch","dataOffset","isDelta","startDictionaryBatch","addData","addIsDelta","endDictionaryBatch","Message","V1","version","headerType","headerOffset","bodyLength","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","Schema_.org","BufferType","Message_.org","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","iterateBits","values","xs","begin","byteIndex","remaining","popcnt_bit_range","lhs","rhs","sum","rhsInside","lhsInside","popcnt_array","arr","cnt","pos","view","DataView","popcnt_uint32","getUint32","getUint16","getUint8","uint32","Visitor","args","visit","getVisitFn","throwIfNotFound","visitor","dtype","Data","Vector","inferDType","DataType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","_node","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","TypeComparator","compareFields","fields","others","every","f","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","timezone","compareTime","compareUnion","typeIds","compareInterval","indices","dictionary","comparer","toStringTag","ArrayType","Null$1","Int_","Int8Array","Int16Array","Uint32Array","Binary$1","Utf8$1","Bool$1","Decimal$1","Date_","Time_","Timestamp_","Interval_","child","valueType","valueField","List$1","join","Struct$1","Union_","typeIdToChildIndex","idx","FixedSizeBinary$1","FixedSizeList$1","Map_","keyType","Map_$1","getId","atomicDictionaryId","strideForType","nullCount","childData","floor","_nullCount","stride","nullBitmap","childStride","_sliceBuffers","clone","_sliceChildren","newLength","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","valueToString","toPrimitive","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","valueToCase","Function","roundLengthUpToNearest64Bytes","BPE","BufferBuilder","_resize","reservedLength","reservedByteLength","extra","reserved","array","sliceOrExtendArray","DataBufferBuilder","reserve","BitmapBufferBuilder","numValid","numInvalid","val","cur","OffsetsBufferBuilder","WideBufferBuilder","ArrayType64","_ArrayType64","buffer64","nulls","finished","_nulls","_isValid","queueingStrategy","highWaterMark","sizeProperty","numChunks","new","toVector","throughIterable","throughAsyncIterable","numChildren","_offsets","_typeIds","setValid","isValid","setValue","_setValue","valid","offsets","last","FixedWidthBuilder","opts","VariableWidthBuilder","_pendingLength","_pending","_flush","pendingLength","_flushPending","BoolBuilder","NullBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","dictionaryHashFunction","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","concat","FixedSizeBinaryBuilder","f64","u32","uint16ToFloat64","h","expo","sigf","sign","NaN","float64ToUint16","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","isArrowBigNumSymbol","for","BigNum","SignedBigNum","UnsignedBigNum","DecimalBigNum","bignumToNumber","bn","hi","lo","signed","words","number","bignumToString","bignumToBigInt","decimalToString","digits","base64","base32","checks","reverse","toJSON","valueOf","hint","TypedArray","BigIntArray","BN","num","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","toBigInt","values64","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","memo","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","BinaryBuilder","Utf8Builder","Run","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","numKeys","ktoi","itov","getValue","getIndex","ki","vi","v","kr","vr","callbackfn","thisArg","str","defineProperties","MapRow","createRowProxy","getChildAt","StructRow","defineRowProxyProperties","findIndex","desc","row","getter","setter","hasOwnProperty","Proxy","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","receiver","Reflect","tmp","clampRange","end","big0","isNaNFast","createElementComparator","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","Chunked","vectors","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","selectChunkArgs","flatten","VectorName","chunk","isDictionary","_indices","_sliceInternal","columns","_children","vector","mid","isValidInternal","getInternal","self","indexOfInternal","toArray","arraySet","typedSet","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkLength","chunkOffset","to","Column","_field","SingleChunkColumn","some","metadata","column","_chunk","selectArgs","Ctor","vals","_selectArgs","selectFieldArgs","_selectFieldArgs","_selectChunkArgs","res","selectVectorChildrenArgs","_selectVectorChildrenArgs","toKeysAndValues","entries","fieldIndex","valueIndex","generateDictionaryMap","compareSchemas","columnNames","names","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","m1","m2","ListBuilder","_run","bind","FixedSizeListBuilder","childIndex","MapBuilder","StructBuilder","UnionBuilder","_valueToChildTypeId","childTypeId","SparseUnionBuilder","DenseUnionBuilder","SetVisitor","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","setFloat16","setNumericX2","long","setTimestampSecond","setTimestampMillisecond","setTimestampMicrosecond","setEpochMsToMicrosecondsLong","setTimestampNanosecond","setEpochMsToNanosecondsLong","setTimeSecond","setTimeMillisecond","setTimeMicrosecond","setTimeNanosecond","setDenseUnion","setSparseUnion","setIntervalDayTime","setIntervalYearMonth","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","newBuilder","getBuilderConstructor","defaultOptions","getChildOptions","T","setVisitor","Footer","Block","schemaOffset","dictionariesOffset","recordBatchesOffset","startFooter","addSchema","addDictionaries","addRecordBatches","endFooter","metaDataLength","_Block","File_.org","_Footer","Footer_","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","buf","footer","getRootAsFooter","OffHeapFooter","startRecordBatchesVector","numRecordBatches","rb","FileBlock","startDictionariesVector","numDictionaries","db","dictionaryBatchesOffset","finishFooterBuffer","getRecordBatch","getDictionaryBatch","_footer","recordBatchesLength","dictionariesLength","fileBlock","createBlock","AsyncByteQueue","write","sync","ByteStream","ByteStreamSource","peek","AsyncByteStream","AsyncByteStreamSource","body","cancel","RandomAccessFile","readAt","getInt32","nBytes","AsyncRandomAccessFile","file","_handle","stat","bytesRead","intAsHex","kPowersOfTen","BaseInt64","L","R","product","lessThan","_times","_plus","out_buffer","fromString","out","posn","group","parseInt","substr","multiple","times","plus","left","right","this_high","other_high","negate","startsWith","Int128","L0","L1","L2","L3","R0","R1","R2","R3","multiply","sums","VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","visitMany","readTypeIds","readDictionary","nextBufferRange","JSONVectorLoader","sources","isTimestamp","isInt","isTime","isDate","convertArray","isDecimal","isBinary","isFixedSizeBinary","joined","binaryDataFromJSON","isBool","isUtf8","startTypeIdsVector","createTypeIdsVector","indexType","recordBatchFromJSON","fieldNodesFromJSON","fieldNodes","validity","buffersFromJSON","BufferRegion","fieldChildrenFromJSON","fromJSON","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_RecordBatch","_DictionaryBatch","header","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","finishMessageBuffer","_nodes","_buffers","_id","_isDelta","decodeFieldChildren","childrenLength","decodeCustomMetadata","entry","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","typeAssembler","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","dictType","dictMeta","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","_schema","fieldsLength","decodeSchemaFields","schemaFieldsFromJSON","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","batch","nodesLength","decodeFieldNodes","bufferRegions","buffersLength","decodeBuffers","dictionaryBatch","createFieldNode","createBuffer","setInt16","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","MessageReader","readMetadataLength","readMetadata","throwIfNull","readMessage","PADDING","metadataLength","AsyncMessageReader","JSONMessageReader","_body","_batchIndex","_dictionaryIndex","flattenDataSources","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","VectorAssembler","_byteLength","_bufferRegions","assembler","vectorChildren","assembleResult","RangeError","isNull","addBuffer","_nullV","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","RecordBatchWriter","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writableStrategy","readableStrategy","writeAll","writeAllAsync","reset","sink","isWritableNodeStream","objectMode","_writeFooter","compareTo","_writeSchema","payload","Table","_InternalEmptyPlaceholderRecordBatch","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","_writeMessage","assemble","metadata.RecordBatch","_writeDictionaries","_writeBodyBuffers","metadata.DictionaryBatch","padding","_writeDictionaryBatch","RecordBatchStreamWriter","writer","RecordBatchFileWriter","_writeMagic","noopBuf","nullBufs","bitmapLength","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","batchLength","numColumns","Number","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","_changeLengthAndBackfillNullBitmap","BaseVector","_bindDataAccessors","isConcatSpreadable","BinaryVector","BoolVector","vectorFromValuesWithType","DateVector","DateDayVector","DateMillisecondVector","DecimalVector","DictionaryVector","FixedSizeBinaryVector","FixedSizeListVector","FloatVector","ArrowType","vectorTypeToDataType","InputType","arrayTypeToDataType","convertTo16Bit","Float16Vector","Float32Vector","Float64Vector","typeCtor","dataCtor","ctor","IntervalVector","IntervalDayTimeVector","IntervalYearMonthVector","IntVector","is64bit","convert32To64Bit","Int8Vector","Int16Vector","Int32Vector","Int64Vector","_values64","Uint8Vector","Uint16Vector","Uint32Vector","Uint64Vector","ListVector","MapVector","NullVector","StructVector","_row","TimestampVector","TimestampSecondVector","TimestampMillisecondVector","TimestampMicrosecondVector","TimestampNanosecondVector","TimeVector","TimeSecondVector","TimeMillisecondVector","TimeMicrosecondVector","TimeNanosecondVector","UnionVector","DenseUnionVector","SparseUnionVector","Utf8Vector","partial0","partial2","GetVisitor","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getFloat16","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_vector","decimal","IndexOfVisitor","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","IteratorVisitor","vectorIterator","getFn","getVisitor","nullByte","nullBit","nullableIterator","ToArrayVisitor","arrayOfVector","iteratorVisitor","variableWidthColumnErrorMessage","____","visitFields","newDataType","getVectorConstructor","transform","indexOfVisitor","toArrayVisitor","getByteWidth","byteWidthVisitor","wrapNullableSet","VectorCtor","fn.partial2","fn.partial0","partialType0","fromStruct","tableFromIterable","tableFromAsyncIterable","RecordBatchReader","isSync","open","opening","cols","selectColumnArgs","numCols","getColumnAt","getColumnIndex","nameToIndex","selectAt","columnName","oldToNew","newIdx","_f","_fs","fs","vs","batchData","ensureSameLengthData","_dictionaries","DictionaryCollector","collect","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchStreamReader","RecordBatchJSONReaderImpl","fromArrowJSON","AsyncRecordBatchFileReader","AsyncRecordBatchFileReaderImpl","AsyncRecordBatchStreamReader","AsyncRecordBatchStreamReaderImpl","fromFileHandle","RecordBatchFileReader","RecordBatchFileReaderImpl","fromAsyncByteStream","RecordBatchStreamReaderImpl","fromByteStream","readAllSync","readAllAsync","RecordBatchReaderImpl","_recordBatchIndex","_loadVectors","_reader","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","_readFooter","_readDictionaryBatch","seek","BuilderTransform","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","readableHighWaterMark","writableHighWaterMark","ReadableStream","pull","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","Literal","Equals","LTeq","GTeq","Not","ge","le","eq","Col","colidx","Predicate","expr","And","Or","ComparisonPredicate","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","CombinationPredicate","accum","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","reverseLookup","lastKey","func","countBy","DataFrame","scan","scanReverse","predicate","FilteredDataFrame","batchIndex","numRows","count_by","countByteLength","ceil","log","counts","CountByResult","_predicate","isBound","and","bm","hwm","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ArrowTable","indexBuffer","columnsBuffer","styler","dataTable","indexTable","columnsTable","caption","displayValuesTable","styles","uuid","rows","headerRows","dataRows","headerColumns","dataColumns","columnTable","rowIndex","columnIndex","isBlankCell","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","dataRowIndex","getColumnTypeId","nanosToDate","nanos","ComponentMessageType","Streamlit","registeredMessageListener","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","API_VERSION","height","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","SET_COMPONENT_VALUE","RENDER_EVENT","onRenderMessage","dataframeArgs","argsDataframeToObject","eventData","disabled","dispatchEvent","argsDataframe","argsDataframeArrow","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","levels","updates","to_null_out","accounted_for","$$scope","spread_props","create_if_block","renderData","width","spreadArgs","onRenderEvent","setComponentReady","textContent","labelLogin","span","labelButton","div","button","t_value","set_data","create_if_block_1","isAuthenticating","loginUrl","openPopup","url","screenX","innerWidth","top","screenY","innerHeight","$$invalidate","currentPopup","labels","dispatch","showPopup","focus","popup","errorNoPopup","popupTimer","setInterval","popupEventListener","clearInterval","errorPopupClosed","origin","location","includes","runPopup","defaultLabels","errorFatal","t3_value","span0","br","span1","getComputedStyle","iframe","tabIndex","unsubscribe","contentWindow","onload","realm","clientId","autoRefresh","initOptions","loginOptions","customLabels","rewritePage","newPage","pathname","replace","setComponentValue","keycloak","userInfo","authenticated","loadUserInfo","access_token","refresh_token","refreshToken","user_info","id_token","idToken","clientHeight","setFrameHeight","createLoginUrl","redirectUri","Keycloak","onAuthError","onAuthRefreshError","onAuthSuccess","onAuthRefreshSuccess","onTokenExpired","updateToken","setKeycloakEventListeners","onLoad","silentCheckSsoRedirectUri","login"],"mappings":"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"}